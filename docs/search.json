[{"path":"https://hendersontrent.github.io/theft/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Trent Henderson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Introduction to theft","text":"theft enables standardised calculation time-series features six existing feature sets R Python well user-supplied features.","code":""},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"core-functionality","dir":"Articles","previous_headings":"","what":"Core functionality","title":"Introduction to theft","text":"time-series datasets passed theft must tbl_ts generated tsibble R package. ensures consistency broader tidyverts collection packages. explore package functionality, going use dataset comes theft called simData. dataset contains simulated time series processes, including Gaussian noise, AR(1), ARMA(1,1), MA(1), noisy sinusoid, random walk. dataset can accessed via: Note simData tsibble two key variables: id process identiy time series unique ID group, index variable timepoint denotes time indices. data follows following structure:","code":"theft::simData head(simData) #> # A tsibble: 6 x 4 [1] #> # Key:       id, process [1] #>     values timepoint id      process #>      <dbl>     <int> <chr>   <chr>   #> 1  0.0918          1 AR(1)_1 AR(1)   #> 2  0.00617         2 AR(1)_1 AR(1)   #> 3  0.154           3 AR(1)_1 AR(1)   #> 4  0.100           4 AR(1)_1 AR(1)   #> 5 -0.0219          5 AR(1)_1 AR(1)   #> 6 -0.230           6 AR(1)_1 AR(1)"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"calculating-time-series-features","dir":"Articles","previous_headings":"Core functionality","what":"Calculating time-series features","title":"Introduction to theft","text":"core function theft calculate_features. can choose subset features calculate feature_set argument. choices currently \"catch22\", \"feasts\", \"tsfeatures\", \"tsfresh\", \"tsfel\", \"kats\". Note kats, tsfresh tsfel Python packages. R package reticulate used call Python code uses packages applies within broader tidy data philosophy embodied theft. theft currently provides access >1100>1100 features six sets alone. However, discussed functionality demonstrations , can also supply list features !","code":""},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"installing-python-feature-sets","dir":"Articles","previous_headings":"Core functionality > Calculating time-series features","what":"Installing Python feature sets","title":"Introduction to theft","text":"Prior using theft (want use Kats, tsfresh TSFEL feature sets; R-based sets run fine) working Python 3.9 installation run function install_python_pkgs(venv, python) first installing theft, venv argument name virtual environment want create python path Python interpreter want use. example, wanted install Python libraries default virtual environment folder used reticulate, run following first installed theft (just creating new virtual environment called \"theft-package\"—can call whatever like!): can run following activate virtual environment: now ready commit theft! NOTE 1: need call  init_theft per session. NOTE 2: also separate installation functions Python feature set, install_tsfresh need one libraries want keep dependencies light.","code":"install_python_pkgs(venv = \"theft-package\", python = \"/usr/local/bin/python3.10\") init_theft(\"theft-package\")"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"calculating-features","dir":"Articles","previous_headings":"Core functionality > Calculating time-series features","what":"Calculating features","title":"Introduction to theft","text":"core function theft calculate_features takes following arguments: data—tbl_ts containing time series data feature_set—character vector characters denoting set time-series features calculate. Can one \"catch22\", \"feasts\", \"tsfeatures\", \"tsfresh\", \"tsfel\", \"kats\" features—named list containing set user-supplied functions calculate data. function take single argument time series. Defaults NULL manually-specified features. list entry must name calculate_features looks name features. don’t want use existing feature sets compute passed features, set feature_set = NULL catch24—Boolean specifying whether compute catch24 addition catch22 catch22 one feature sets selected. Defaults FALSE tsfresh_cleanup—Boolean specifying whether use -built tsfresh relevant feature filter . Defaults FALSE use_compengine—Boolean specifying whether use \"compengine\" features tsfeatures. Defaults FALSE provide immense computational efficiency benefits seed—integer denoting fixed number R’s random number generator ensure reproducibility. Defaults 123 example catch22 set: Note data must tsibble::tbl_ts object, specified key (.e., identifying) index (.e., time) variables. theft treats first variable key ID variable second grouping variable (one). key variables ignored theft. can also supply named list functions compute time-series features. example mean standard deviation. Note list must named theft uses list element names label time-series features internally. Note don’t want use existing feature sets theft calculate features supply features, just set feature_set = NULL.","code":"feature_matrix <- calculate_features(data = simData, feature_set = \"catch22\") head(feature_matrix) #>        id group feature_set                    names      values #> 1 AR(1)_1 AR(1)     catch22       DN_HistogramMode_5 -0.14319571 #> 2 AR(1)_1 AR(1)     catch22      DN_HistogramMode_10 -0.38084145 #> 3 AR(1)_1 AR(1)     catch22                CO_f1ecac  2.10193383 #> 4 AR(1)_1 AR(1)     catch22           CO_FirstMin_ac  5.00000000 #> 5 AR(1)_1 AR(1)     catch22 CO_HistogramAMI_even_2_5  0.07406701 #> 6 AR(1)_1 AR(1)     catch22            CO_trev_1_num  0.22413119 feature_matrix2 <- calculate_features(data = simData,                                        feature_set = NULL,                                       features = list(\"mean\" = mean, \"sd\" = sd))  head(feature_matrix2) #>         id group feature_set names      values #> 1  AR(1)_1 AR(1)        User  mean  0.01835873 #> 2  AR(1)_1 AR(1)        User    sd  0.09866731 #> 3 AR(1)_10 AR(1)        User  mean -0.02025604 #> 4 AR(1)_10 AR(1)        User    sd  0.10892881 #> 5 AR(1)_11 AR(1)        User  mean -0.02012172 #> 6 AR(1)_11 AR(1)        User    sd  0.08864821"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"comparison-of-feature-sets","dir":"Articles","previous_headings":"Core functionality","what":"Comparison of feature sets","title":"Introduction to theft","text":"detailed comparison six feature sets, see paper detailed review1.","code":""},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"reading-and-processing-hctsa-formatted-files","dir":"Articles","previous_headings":"","what":"Reading and processing hctsa-formatted files","title":"Introduction to theft","text":"theft based foundations laid hctsa, also functionality reading hctsa-formatted Matlab files automatically processing tidy dataframes ready feature extraction theft. process_hctsa_file function takes string filepath Matlab file work , returning dataframe naming conventions consistent theft functionality. per hctsa specifications Input File Format 1, file 3 variables following exact names: timeSeriesData, labels, keywords. filepath can local drive path URL.","code":""},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"analysing-interpreting-and-visualising-time-series-features","dir":"Articles","previous_headings":"","what":"Analysing, interpreting, and visualising time-series features","title":"Introduction to theft","text":"Please see companion package theftdlc (‘theft downloadable content’) large suite functions designed work top theft.","code":""},{"path":"https://hendersontrent.github.io/theft/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Trent Henderson. Maintainer, author. Annie Bryant. Contributor.","code":""},{"path":"https://hendersontrent.github.io/theft/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Henderson T (2025). theft: Tools Handling Extraction Features Time Series. R package version 0.8.1, https://hendersontrent.github.io/theft/.","code":"@Manual{,   title = {theft: Tools for Handling Extraction of Features from Time Series},   author = {Trent Henderson},   year = {2025},   note = {R package version 0.8.1},   url = {https://hendersontrent.github.io/theft/}, }"},{"path":"https://hendersontrent.github.io/theft/index.html","id":"theft-","dir":"","previous_headings":"","what":"Tools for Handling Extraction of Features from Time Series","title":"Tools for Handling Extraction of Features from Time Series","text":"Tools Handling Extraction Features Time series (theft)","code":""},{"path":"https://hendersontrent.github.io/theft/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Handling Extraction of Features from Time Series","text":"can install stable version theft CRAN: can install development version theft GitHub using following: Please also check paper Feature-Based Time-Series Analysis R using theft Package discusses motivation theoretical underpinnings theft walks functionality using Bonn EEG dataset — well-studied neuroscience dataset.","code":"install.packages(\"theft\") devtools::install_github(\"hendersontrent/theft\")"},{"path":"https://hendersontrent.github.io/theft/index.html","id":"general-purpose","dir":"","previous_headings":"","what":"General purpose","title":"Tools for Handling Extraction of Features from Time Series","text":"theft software package R facilitates user-friendly access consistent interface extraction time-series features. package provides single point access >1100>1100 time-series features range existing R Python packages well enabling users calculate features. packages theft ‘steals’ features currently : catch22 (R; see Rcatch22 native implementation CRAN) feasts (R) tsfeatures (R) Kats (Python) tsfresh (Python) TSFEL (Python) Users can also calculate individual features sets features ! Note Kats, tsfresh TSFEL Python packages. theft built-functionality helping install libraries—need install Python machine (preferably Python >=3.10). wish access Python feature sets, please run ?install_python_pkgs R downloading theft consult vignette package information. comprehensive comparison six feature sets across range domains (including computation speed, within-set feature composition, -set feature correlations), please refer paper Empirical Evaluation Time-Series Feature Sets. v0.6.1, users can also supply features theft (see vignette information)!","code":""},{"path":"https://hendersontrent.github.io/theft/index.html","id":"package-extensibility","dir":"","previous_headings":"","what":"Package extensibility","title":"Tools for Handling Extraction of Features from Time Series","text":"companion package theftdlc (‘theft downloadable content’—just like get DLCs expansions video games) contains extensive suite functions analysing, interpreting, visualising time-series features calculated theft. Collectively, packages referred ‘theft ecosystem’.  high-level overview theft ecosystem R typically accessed users shown . Note prior v0.6.1 , many theftdlc functions contained theft names. ensure theft ecosystem user-friendly possible can scale meet future demands, theft refactored just perform feature extraction, theftdlc handles processing, analysis, visualisation extracted features.  Many functions options customisation available within packages users encouraged explore vignettes helper files information.","code":""},{"path":"https://hendersontrent.github.io/theft/index.html","id":"quick-tour","dir":"","previous_headings":"","what":"Quick tour","title":"Tools for Handling Extraction of Features from Time Series","text":"theft theftdlc combine create intuitive efficient workflow consistent broader tidyverts collection packages tidy time-series analysis. single code chunk calculates features tsibble (tidy temporal data frame) simulated time series processes, including Gaussian noise, AR(1), ARMA(1,1), MA(1), noisy sinusoid, random walk. simData comes theft. ’ll just use catch22 feature set custom set mean standard deviation now. Using tidy principles pipes, can, code chunk, feed calculated features straight theftdlc’s project function project 24-dimensional feature space interpretable two-dimensional space using principal components analysis:  example, calculate_features comes theft, project plot generic come theftdlc. Similarly, can perform time-series classification using similar workflow compare performance catch22 custom set first two moments distribution: example, classify compare_features come theftdlc. can also easily see set performs relative empirical null distribution (.e., much better set expect due chance?): Please see vignette information full functionality packages.","code":"library(dplyr) library(theft) library(theftdlc)  calculate_features(data = theft::simData,                     feature_set = \"catch22\",                    features = list(\"mean\" = mean, \"sd\" = sd)) %>%   project(norm_method = \"RobustSigmoid\",           unit_int = TRUE,           low_dim_method = \"PCA\") %>%   plot() calculate_features(data = theft::simData,                     feature_set = \"catch22\",                    features = list(\"mean\" = mean, \"sd\" = sd)) %>%   classify(by_set = TRUE,            n_resamples = 10,            use_null = TRUE) %>%   compare_features(by_set = TRUE,                    hypothesis = \"pairwise\") %>%   head() hypothesis feature_set_a feature_set_b   metric set_a_mean 1 All features != catch22  All features       catch22 accuracy  0.8022222 2    All features != User  All features          User accuracy  0.8022222 3         catch22 != User       catch22          User accuracy  0.7400000   set_b_mean t_statistic    p.value 1  0.7400000  2.35154855 0.04319536 2  0.8044444 -0.03932757 0.96948780 3  0.8044444 -1.23794041 0.24705786 calculate_features(data = theft::simData,                     feature_set = \"catch22\",                    features = list(\"mean\" = mean, \"sd\" = sd)) %>%   classify(by_set = TRUE,            n_resamples = 10,            use_null = TRUE) %>%   compare_features(by_set = TRUE,                    hypothesis = \"null\") %>%   head() hypothesis  feature_set   metric  set_mean null_mean 1 All features != own null All features accuracy 0.8022222 0.1355556 2         User != own null         User accuracy 0.8044444 0.1511111 3      catch22 != own null      catch22 accuracy 0.7400000 0.1222222   t_statistic      p.value 1    6.826807 7.670466e-05 2    5.882092 2.342183e-04 3    6.879652 7.229353e-05"},{"path":"https://hendersontrent.github.io/theft/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Tools for Handling Extraction of Features from Time Series","text":"use theft theftdlc work, please cite paper: T. Henderson Ben D. Fulcher. Feature-Based Time-Series Analysis R using theft Package. arXiv, (2022). software:","code":"To cite package 'theft' in publications use:    Henderson T (2025). _theft: Tools for Handling Extraction of Features   from Time Series_. R package version 0.8.1,   <https://hendersontrent.github.io/theft/>.  A BibTeX entry for LaTeX users is    @Manual{,     title = {theft: Tools for Handling Extraction of Features from Time Series},     author = {Trent Henderson},     year = {2025},     note = {R package version 0.8.1},     url = {https://hendersontrent.github.io/theft/},   }  To cite package 'theftdlc' in publications use:    Henderson T (2025). _theftdlc: Analyse and Interpret Time Series   Features_. R package version 0.1.3,   <https://hendersontrent.github.io/theftdlc/>.  A BibTeX entry for LaTeX users is    @Manual{,     title = {theftdlc: Analyse and Interpret Time Series Features},     author = {Trent Henderson},     year = {2025},     note = {R package version 0.1.3},     url = {https://hendersontrent.github.io/theftdlc/},   }"},{"path":"https://hendersontrent.github.io/theft/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Tools for Handling Extraction of Features from Time Series","text":"Big thanks Joshua Moore assistance solving issues Python side things, including correct specification dependencies install_python_pkgs function.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute features on an input time series dataset — calculate_features","title":"Compute features on an input time series dataset — calculate_features","text":"Compute features input time series dataset","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute features on an input time series dataset — calculate_features","text":"","code":"calculate_features(   data,   feature_set = c(\"catch22\", \"feasts\", \"tsfeatures\", \"kats\", \"tsfresh\", \"tsfel\"),   features = NULL,   catch24 = FALSE,   tsfresh_cleanup = FALSE,   use_compengine = FALSE,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute features on an input time series dataset — calculate_features","text":"data tbl_ts containing time series data feature_set character vector character denoting set time-series features calculate. Can one \"catch22\", \"feasts\", \"tsfeatures\", \"tsfresh\", \"tsfel\", \"kats\" features named list containing set user-supplied functions calculate data. function take single argument time series. Defaults NULL manually-specified features. list entry must name calculate_features looks name features. want use existing feature sets compute passed features, set feature_set = NULL catch24 Boolean specifying whether compute catch24 addition catch22 catch22 one feature sets selected. Defaults FALSE tsfresh_cleanup Boolean specifying whether use -built tsfresh relevant feature filter . Defaults FALSE use_compengine Boolean specifying whether use \"compengine\" features tsfeatures. Defaults FALSE provide immense computational efficiency benefits seed integer denoting fixed number R's random number generator ensure reproducibility. Defaults 123","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute features on an input time series dataset — calculate_features","text":"object class feature_calculations contains summary statistics feature","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute features on an input time series dataset — calculate_features","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute features on an input time series dataset — calculate_features","text":"","code":"featMat <- calculate_features(data = simData,    feature_set = \"catch22\") #> Running computations for catch22... #> Warning: There was 1 warning in `dplyr::reframe()`. #> ℹ In argument: `Rcatch22::catch22_all(values, catch24 = catch24)`. #> ℹ In group 1: `id = \"AR(1)_1\"` and `process = \"AR(1)\"`. #> Caused by warning: #> ! As of 0.1.14 the feature 'CO_f1ecac' returns a double instead of int #> This warning is displayed once per session."},{"path":"https://hendersontrent.github.io/theft/reference/calculate_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate interval summaries with a measure of central tendency of classification results — calculate_interval","title":"Calculate interval summaries with a measure of central tendency of classification results — calculate_interval","text":"Calculate interval summaries measure central tendency classification results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate interval summaries with a measure of central tendency of classification results — calculate_interval","text":"","code":"calculate_interval(   data,   metric = c(\"accuracy\", \"precision\", \"recall\", \"f1\"),   by_set = TRUE,   type = c(\"sd\", \"qt\", \"quantile\"),   interval = NULL,   model_type = c(\"main\", \"null\") )"},{"path":"https://hendersontrent.github.io/theft/reference/calculate_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate interval summaries with a measure of central tendency of classification results — calculate_interval","text":"data list object containing classification outputs produce tsfeature_classifier metric character denoting classification performance metric calculate intervals . Can one \"accuracy\", \"precision\", \"recall\", \"f1\". Defaults \"accuracy\" by_set Boolean specifying whether compute intervals feature set. Defaults TRUE. FALSE, function instead calculate intervals feature type character denoting whether calculate +/- SD interval \"sd\", confidence interval based t-distribution \"qt\", based quantile \"quantile\". Defaults \"sd\" interval numeric scalar denoting width interval calculate. Defaults 1 type = \"sd\" produce +/- 1 SD interval. Defaults 0.95 type = \"qt\" type = \"quantile\" 95 per cent interval model_type character denoting whether calculate intervals main models \"main\" null models \"null\" use_null argument using tsfeature_classifier use_null = TRUE. Defaults \"main\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_interval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate interval summaries with a measure of central tendency of classification results — calculate_interval","text":"data.frame containing results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_interval.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate interval summaries with a measure of central tendency of classification results — calculate_interval","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_interval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate interval summaries with a measure of central tendency of classification results — calculate_interval","text":"","code":"# \\donttest{ featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.    classifiers <- tsfeature_classifier(featMat,   by_set = FALSE) #> Only one set of 'catch22', 'feasts', 'tsfeatures', or 'Kats' with potential duplicates is in your feature data. Exiting and returning original input data. #> Fitting model 1/660 #> Fitting model 2/660 #> Fitting model 3/660 #> Fitting model 4/660 #> Fitting model 5/660 #> Fitting model 6/660 #> Fitting model 7/660 #> Fitting model 8/660 #> Fitting model 9/660 #> Fitting model 10/660 #> Fitting model 11/660 #> Fitting model 12/660 #> Fitting model 13/660 #> Fitting model 14/660 #> Fitting model 15/660 #> Fitting model 16/660 #> Fitting model 17/660 #> Fitting model 18/660 #> Fitting model 19/660 #> Fitting model 20/660 #> Fitting model 21/660 #> Fitting model 22/660 #> Fitting model 23/660 #> Fitting model 24/660 #> Fitting model 25/660 #> Fitting model 26/660 #> Fitting model 27/660 #> Fitting model 28/660 #> Fitting model 29/660 #> Fitting model 30/660 #> Fitting model 31/660 #> Fitting model 32/660 #> Fitting model 33/660 #> Fitting model 34/660 #> Fitting model 35/660 #> Fitting model 36/660 #> Fitting model 37/660 #> Fitting model 38/660 #> Fitting model 39/660 #> Fitting model 40/660 #> Fitting model 41/660 #> Fitting model 42/660 #> Fitting model 43/660 #> Fitting model 44/660 #> Fitting model 45/660 #> Fitting model 46/660 #> Fitting model 47/660 #> Fitting model 48/660 #> Fitting model 49/660 #> Fitting model 50/660 #> Fitting model 51/660 #> Fitting model 52/660 #> Fitting model 53/660 #> Fitting model 54/660 #> Fitting model 55/660 #> Fitting model 56/660 #> Fitting model 57/660 #> Fitting model 58/660 #> Fitting model 59/660 #> Fitting model 60/660 #> Fitting model 61/660 #> Fitting model 62/660 #> Fitting model 63/660 #> Fitting model 64/660 #> Fitting model 65/660 #> Fitting model 66/660 #> Fitting model 67/660 #> Fitting model 68/660 #> Fitting model 69/660 #> Fitting model 70/660 #> Fitting model 71/660 #> Fitting model 72/660 #> Fitting model 73/660 #> Fitting model 74/660 #> Fitting model 75/660 #> Fitting model 76/660 #> Fitting model 77/660 #> Fitting model 78/660 #> Fitting model 79/660 #> Fitting model 80/660 #> Fitting model 81/660 #> Fitting model 82/660 #> Fitting model 83/660 #> Fitting model 84/660 #> Fitting model 85/660 #> Fitting model 86/660 #> Fitting model 87/660 #> Fitting model 88/660 #> Fitting model 89/660 #> Fitting model 90/660 #> Fitting model 91/660 #> Fitting model 92/660 #> Fitting model 93/660 #> Fitting model 94/660 #> Fitting model 95/660 #> Fitting model 96/660 #> Fitting model 97/660 #> Fitting model 98/660 #> Fitting model 99/660 #> Fitting model 100/660 #> Fitting model 101/660 #> Fitting model 102/660 #> Fitting model 103/660 #> Fitting model 104/660 #> Fitting model 105/660 #> Fitting model 106/660 #> Fitting model 107/660 #> Fitting model 108/660 #> Fitting model 109/660 #> Fitting model 110/660 #> Fitting model 111/660 #> Fitting model 112/660 #> Fitting model 113/660 #> Fitting model 114/660 #> Fitting model 115/660 #> Fitting model 116/660 #> Fitting model 117/660 #> Fitting model 118/660 #> Fitting model 119/660 #> Fitting model 120/660 #> Fitting model 121/660 #> Fitting model 122/660 #> Fitting model 123/660 #> Fitting model 124/660 #> Fitting model 125/660 #> Fitting model 126/660 #> Fitting model 127/660 #> Fitting model 128/660 #> Fitting model 129/660 #> Fitting model 130/660 #> Fitting model 131/660 #> Fitting model 132/660 #> Fitting model 133/660 #> Fitting model 134/660 #> Fitting model 135/660 #> Fitting model 136/660 #> Fitting model 137/660 #> Fitting model 138/660 #> Fitting model 139/660 #> Fitting model 140/660 #> Fitting model 141/660 #> Fitting model 142/660 #> Fitting model 143/660 #> Fitting model 144/660 #> Fitting model 145/660 #> Fitting model 146/660 #> Fitting model 147/660 #> Fitting model 148/660 #> Fitting model 149/660 #> Fitting model 150/660 #> Fitting model 151/660 #> Fitting model 152/660 #> Fitting model 153/660 #> Fitting model 154/660 #> Fitting model 155/660 #> Fitting model 156/660 #> Fitting model 157/660 #> Fitting model 158/660 #> Fitting model 159/660 #> Fitting model 160/660 #> Fitting model 161/660 #> Fitting model 162/660 #> Fitting model 163/660 #> Fitting model 164/660 #> Fitting model 165/660 #> Fitting model 166/660 #> Fitting model 167/660 #> Fitting model 168/660 #> Fitting model 169/660 #> Fitting model 170/660 #> Fitting model 171/660 #> Fitting model 172/660 #> Fitting model 173/660 #> Fitting model 174/660 #> Fitting model 175/660 #> Fitting model 176/660 #> Fitting model 177/660 #> Fitting model 178/660 #> Fitting model 179/660 #> Fitting model 180/660 #> Fitting model 181/660 #> Fitting model 182/660 #> Fitting model 183/660 #> Fitting model 184/660 #> Fitting model 185/660 #> Fitting model 186/660 #> Fitting model 187/660 #> Fitting model 188/660 #> Fitting model 189/660 #> Fitting model 190/660 #> Fitting model 191/660 #> Fitting model 192/660 #> Fitting model 193/660 #> Fitting model 194/660 #> Fitting model 195/660 #> Fitting model 196/660 #> Fitting model 197/660 #> Fitting model 198/660 #> Fitting model 199/660 #> Fitting model 200/660 #> Fitting model 201/660 #> Fitting model 202/660 #> Fitting model 203/660 #> Fitting model 204/660 #> Fitting model 205/660 #> Fitting model 206/660 #> Fitting model 207/660 #> Fitting model 208/660 #> Fitting model 209/660 #> Fitting model 210/660 #> Fitting model 211/660 #> Fitting model 212/660 #> Fitting model 213/660 #> Fitting model 214/660 #> Fitting model 215/660 #> Fitting model 216/660 #> Fitting model 217/660 #> Fitting model 218/660 #> Fitting model 219/660 #> Fitting model 220/660 #> Fitting model 221/660 #> Fitting model 222/660 #> Fitting model 223/660 #> Fitting model 224/660 #> Fitting model 225/660 #> Fitting model 226/660 #> Fitting model 227/660 #> Fitting model 228/660 #> Fitting model 229/660 #> Fitting model 230/660 #> Fitting model 231/660 #> Fitting model 232/660 #> Fitting model 233/660 #> Fitting model 234/660 #> Fitting model 235/660 #> Fitting model 236/660 #> Fitting model 237/660 #> Fitting model 238/660 #> Fitting model 239/660 #> Fitting model 240/660 #> Fitting model 241/660 #> Fitting model 242/660 #> Fitting model 243/660 #> Fitting model 244/660 #> Fitting model 245/660 #> Fitting model 246/660 #> Fitting model 247/660 #> Fitting model 248/660 #> Fitting model 249/660 #> Fitting model 250/660 #> Fitting model 251/660 #> Fitting model 252/660 #> Fitting model 253/660 #> Fitting model 254/660 #> Fitting model 255/660 #> Fitting model 256/660 #> Fitting model 257/660 #> Fitting model 258/660 #> Fitting model 259/660 #> Fitting model 260/660 #> Fitting model 261/660 #> Fitting model 262/660 #> Fitting model 263/660 #> Fitting model 264/660 #> Fitting model 265/660 #> Fitting model 266/660 #> Fitting model 267/660 #> Fitting model 268/660 #> Fitting model 269/660 #> Fitting model 270/660 #> Fitting model 271/660 #> Fitting model 272/660 #> Fitting model 273/660 #> Fitting model 274/660 #> Fitting model 275/660 #> Fitting model 276/660 #> Fitting model 277/660 #> Fitting model 278/660 #> Fitting model 279/660 #> Fitting model 280/660 #> Fitting model 281/660 #> Fitting model 282/660 #> Fitting model 283/660 #> Fitting model 284/660 #> Fitting model 285/660 #> Fitting model 286/660 #> Fitting model 287/660 #> Fitting model 288/660 #> Fitting model 289/660 #> Fitting model 290/660 #> Fitting model 291/660 #> Fitting model 292/660 #> Fitting model 293/660 #> Fitting model 294/660 #> Fitting model 295/660 #> Fitting model 296/660 #> Fitting model 297/660 #> Fitting model 298/660 #> Fitting model 299/660 #> Fitting model 300/660 #> Fitting model 301/660 #> Fitting model 302/660 #> Fitting model 303/660 #> Fitting model 304/660 #> Fitting model 305/660 #> Fitting model 306/660 #> Fitting model 307/660 #> Fitting model 308/660 #> Fitting model 309/660 #> Fitting model 310/660 #> Fitting model 311/660 #> Fitting model 312/660 #> Fitting model 313/660 #> Fitting model 314/660 #> Fitting model 315/660 #> Fitting model 316/660 #> Fitting model 317/660 #> Fitting model 318/660 #> Fitting model 319/660 #> Fitting model 320/660 #> Fitting model 321/660 #> Fitting model 322/660 #> Fitting model 323/660 #> Fitting model 324/660 #> Fitting model 325/660 #> Fitting model 326/660 #> Fitting model 327/660 #> Fitting model 328/660 #> Fitting model 329/660 #> Fitting model 330/660 #> Fitting model 331/660 #> Fitting model 332/660 #> Fitting model 333/660 #> Fitting model 334/660 #> Fitting model 335/660 #> Fitting model 336/660 #> Fitting model 337/660 #> Fitting model 338/660 #> Fitting model 339/660 #> Fitting model 340/660 #> Fitting model 341/660 #> Fitting model 342/660 #> Fitting model 343/660 #> Fitting model 344/660 #> Fitting model 345/660 #> Fitting model 346/660 #> Fitting model 347/660 #> Fitting model 348/660 #> Fitting model 349/660 #> Fitting model 350/660 #> Fitting model 351/660 #> Fitting model 352/660 #> Fitting model 353/660 #> Fitting model 354/660 #> Fitting model 355/660 #> Fitting model 356/660 #> Fitting model 357/660 #> Fitting model 358/660 #> Fitting model 359/660 #> Fitting model 360/660 #> Fitting model 361/660 #> Fitting model 362/660 #> Fitting model 363/660 #> Fitting model 364/660 #> Fitting model 365/660 #> Fitting model 366/660 #> Fitting model 367/660 #> Fitting model 368/660 #> Fitting model 369/660 #> Fitting model 370/660 #> Fitting model 371/660 #> Fitting model 372/660 #> Fitting model 373/660 #> Fitting model 374/660 #> Fitting model 375/660 #> Fitting model 376/660 #> Fitting model 377/660 #> Fitting model 378/660 #> Fitting model 379/660 #> Fitting model 380/660 #> Fitting model 381/660 #> Fitting model 382/660 #> Fitting model 383/660 #> Fitting model 384/660 #> Fitting model 385/660 #> Fitting model 386/660 #> Fitting model 387/660 #> Fitting model 388/660 #> Fitting model 389/660 #> Fitting model 390/660 #> Fitting model 391/660 #> Fitting model 392/660 #> Fitting model 393/660 #> Fitting model 394/660 #> Fitting model 395/660 #> Fitting model 396/660 #> Fitting model 397/660 #> Fitting model 398/660 #> Fitting model 399/660 #> Fitting model 400/660 #> Fitting model 401/660 #> Fitting model 402/660 #> Fitting model 403/660 #> Fitting model 404/660 #> Fitting model 405/660 #> Fitting model 406/660 #> Fitting model 407/660 #> Fitting model 408/660 #> Fitting model 409/660 #> Fitting model 410/660 #> Fitting model 411/660 #> Fitting model 412/660 #> Fitting model 413/660 #> Fitting model 414/660 #> Fitting model 415/660 #> Fitting model 416/660 #> Fitting model 417/660 #> Fitting model 418/660 #> Fitting model 419/660 #> Fitting model 420/660 #> Fitting model 421/660 #> Fitting model 422/660 #> Fitting model 423/660 #> Fitting model 424/660 #> Fitting model 425/660 #> Fitting model 426/660 #> Fitting model 427/660 #> Fitting model 428/660 #> Fitting model 429/660 #> Fitting model 430/660 #> Fitting model 431/660 #> Fitting model 432/660 #> Fitting model 433/660 #> Fitting model 434/660 #> Fitting model 435/660 #> Fitting model 436/660 #> Fitting model 437/660 #> Fitting model 438/660 #> Fitting model 439/660 #> Fitting model 440/660 #> Fitting model 441/660 #> Fitting model 442/660 #> Fitting model 443/660 #> Fitting model 444/660 #> Fitting model 445/660 #> Fitting model 446/660 #> Fitting model 447/660 #> Fitting model 448/660 #> Fitting model 449/660 #> Fitting model 450/660 #> Fitting model 451/660 #> Fitting model 452/660 #> Fitting model 453/660 #> Fitting model 454/660 #> Fitting model 455/660 #> Fitting model 456/660 #> Fitting model 457/660 #> Fitting model 458/660 #> Fitting model 459/660 #> Fitting model 460/660 #> Fitting model 461/660 #> Fitting model 462/660 #> Fitting model 463/660 #> Fitting model 464/660 #> Fitting model 465/660 #> Fitting model 466/660 #> Fitting model 467/660 #> Fitting model 468/660 #> Fitting model 469/660 #> Fitting model 470/660 #> Fitting model 471/660 #> Fitting model 472/660 #> Fitting model 473/660 #> Fitting model 474/660 #> Fitting model 475/660 #> Fitting model 476/660 #> Fitting model 477/660 #> Fitting model 478/660 #> Fitting model 479/660 #> Fitting model 480/660 #> Fitting model 481/660 #> Fitting model 482/660 #> Fitting model 483/660 #> Fitting model 484/660 #> Fitting model 485/660 #> Fitting model 486/660 #> Fitting model 487/660 #> Fitting model 488/660 #> Fitting model 489/660 #> Fitting model 490/660 #> Fitting model 491/660 #> Fitting model 492/660 #> Fitting model 493/660 #> Fitting model 494/660 #> Fitting model 495/660 #> Fitting model 496/660 #> Fitting model 497/660 #> Fitting model 498/660 #> Fitting model 499/660 #> Fitting model 500/660 #> Fitting model 501/660 #> Fitting model 502/660 #> Fitting model 503/660 #> Fitting model 504/660 #> Fitting model 505/660 #> Fitting model 506/660 #> Fitting model 507/660 #> Fitting model 508/660 #> Fitting model 509/660 #> Fitting model 510/660 #> Fitting model 511/660 #> Fitting model 512/660 #> Fitting model 513/660 #> Fitting model 514/660 #> Fitting model 515/660 #> Fitting model 516/660 #> Fitting model 517/660 #> Fitting model 518/660 #> Fitting model 519/660 #> Fitting model 520/660 #> Fitting model 521/660 #> Fitting model 522/660 #> Fitting model 523/660 #> Fitting model 524/660 #> Fitting model 525/660 #> Fitting model 526/660 #> Fitting model 527/660 #> Fitting model 528/660 #> Fitting model 529/660 #> Fitting model 530/660 #> Fitting model 531/660 #> Fitting model 532/660 #> Fitting model 533/660 #> Fitting model 534/660 #> Fitting model 535/660 #> Fitting model 536/660 #> Fitting model 537/660 #> Fitting model 538/660 #> Fitting model 539/660 #> Fitting model 540/660 #> Fitting model 541/660 #> Fitting model 542/660 #> Fitting model 543/660 #> Fitting model 544/660 #> Fitting model 545/660 #> Fitting model 546/660 #> Fitting model 547/660 #> Fitting model 548/660 #> Fitting model 549/660 #> Fitting model 550/660 #> Fitting model 551/660 #> Fitting model 552/660 #> Fitting model 553/660 #> Fitting model 554/660 #> Fitting model 555/660 #> Fitting model 556/660 #> Fitting model 557/660 #> Fitting model 558/660 #> Fitting model 559/660 #> Fitting model 560/660 #> Fitting model 561/660 #> Fitting model 562/660 #> Fitting model 563/660 #> Fitting model 564/660 #> Fitting model 565/660 #> Fitting model 566/660 #> Fitting model 567/660 #> Fitting model 568/660 #> Fitting model 569/660 #> Fitting model 570/660 #> Fitting model 571/660 #> Fitting model 572/660 #> Fitting model 573/660 #> Fitting model 574/660 #> Fitting model 575/660 #> Fitting model 576/660 #> Fitting model 577/660 #> Fitting model 578/660 #> Fitting model 579/660 #> Fitting model 580/660 #> Fitting model 581/660 #> Fitting model 582/660 #> Fitting model 583/660 #> Fitting model 584/660 #> Fitting model 585/660 #> Fitting model 586/660 #> Fitting model 587/660 #> Fitting model 588/660 #> Fitting model 589/660 #> Fitting model 590/660 #> Fitting model 591/660 #> Fitting model 592/660 #> Fitting model 593/660 #> Fitting model 594/660 #> Fitting model 595/660 #> Fitting model 596/660 #> Fitting model 597/660 #> Fitting model 598/660 #> Fitting model 599/660 #> Fitting model 600/660 #> Fitting model 601/660 #> Fitting model 602/660 #> Fitting model 603/660 #> Fitting model 604/660 #> Fitting model 605/660 #> Fitting model 606/660 #> Fitting model 607/660 #> Fitting model 608/660 #> Fitting model 609/660 #> Fitting model 610/660 #> Fitting model 611/660 #> Fitting model 612/660 #> Fitting model 613/660 #> Fitting model 614/660 #> Fitting model 615/660 #> Fitting model 616/660 #> Fitting model 617/660 #> Fitting model 618/660 #> Fitting model 619/660 #> Fitting model 620/660 #> Fitting model 621/660 #> Fitting model 622/660 #> Fitting model 623/660 #> Fitting model 624/660 #> Fitting model 625/660 #> Fitting model 626/660 #> Fitting model 627/660 #> Fitting model 628/660 #> Fitting model 629/660 #> Fitting model 630/660 #> Fitting model 631/660 #> Fitting model 632/660 #> Fitting model 633/660 #> Fitting model 634/660 #> Fitting model 635/660 #> Fitting model 636/660 #> Fitting model 637/660 #> Fitting model 638/660 #> Fitting model 639/660 #> Fitting model 640/660 #> Fitting model 641/660 #> Fitting model 642/660 #> Fitting model 643/660 #> Fitting model 644/660 #> Fitting model 645/660 #> Fitting model 646/660 #> Fitting model 647/660 #> Fitting model 648/660 #> Fitting model 649/660 #> Fitting model 650/660 #> Fitting model 651/660 #> Fitting model 652/660 #> Fitting model 653/660 #> Fitting model 654/660 #> Fitting model 655/660 #> Fitting model 656/660 #> Fitting model 657/660 #> Fitting model 658/660 #> Fitting model 659/660 #> Fitting model 660/660    calculate_interval(classifiers,   by_set = FALSE,   type = \"sd\",   interval = 1) #> # A tibble: 22 × 4 #>    names                                         .mean .lower .upper #>    <chr>                                         <dbl>  <dbl>  <dbl> #>  1 catch22_CO_Embed2_Dist_tau_d_expfit_meandiff 0.327  0.304  0.349  #>  2 catch22_CO_FirstMin_ac                       0.318  0.294  0.342  #>  3 catch22_CO_HistogramAMI_even_2_5             0.358  0.308  0.408  #>  4 catch22_CO_f1ecac                            0.344  0.332  0.357  #>  5 catch22_CO_trev_1_num                        0.108  0.0780 0.138  #>  6 catch22_DN_HistogramMode_10                  0.0644 0.0448 0.0841 #>  7 catch22_DN_HistogramMode_5                   0.0689 0.0582 0.0796 #>  8 catch22_DN_OutlierInclude_n_001_mdrmd        0.0637 0.0475 0.0799 #>  9 catch22_DN_OutlierInclude_p_001_mdrmd        0.08   0.0610 0.0990 #> 10 catch22_FC_LocalSimple_mean1_tauresrat       0.38   0.342  0.418  #> # … with 12 more rows # }"},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for presence of NAs and non-numerics in a vector — check_vector_quality","title":"Check for presence of NAs and non-numerics in a vector — check_vector_quality","text":"Check presence NAs non-numerics vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for presence of NAs and non-numerics in a vector — check_vector_quality","text":"","code":"check_vector_quality(x)"},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for presence of NAs and non-numerics in a vector — check_vector_quality","text":"x input vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for presence of NAs and non-numerics in a vector — check_vector_quality","text":"Boolean whether data good extract features ","code":""},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check for presence of NAs and non-numerics in a vector — check_vector_quality","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compare_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct statistical testing on time-series feature classification performance to identify top features or compare entire sets — compare_features","title":"Conduct statistical testing on time-series feature classification performance to identify top features or compare entire sets — compare_features","text":"Conduct statistical testing time-series feature classification performance identify top features compare entire sets","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compare_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct statistical testing on time-series feature classification performance to identify top features or compare entire sets — compare_features","text":"","code":"compare_features(   data,   metric = c(\"accuracy\", \"precision\", \"recall\", \"f1\"),   by_set = TRUE,   hypothesis = c(\"null\", \"pairwise\"),   p_adj = c(\"none\", \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\", \"fdr\") )"},{"path":"https://hendersontrent.github.io/theft/reference/compare_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct statistical testing on time-series feature classification performance to identify top features or compare entire sets — compare_features","text":"data list object containing classification outputs produce tsfeature_classifier metric character denoting classification performance metric use statistical testing. Can one \"accuracy\", \"precision\", \"recall\", \"f1\". Defaults \"accuracy\" by_set Boolean specifying whether want compare feature sets (TRUE) individual features (FALSE). Defaults TRUE contingent whether computed set tsfeature_classifier hypothesis character denoting whether p-values calculated feature set feature (depending by_set argument) individually relative null use_null = TRUE tsfeature_classifier \"null\", whether pairwise comparisons set feature conducted main model fits \"pairwise\". Defaults \"null\" p_adj character denoting adjustment made p-values multiple comparisons. valid argument stats::p.adjust. Defaults \"none\" adjustment. \"holm\" recommended starting point adjustments","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compare_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct statistical testing on time-series feature classification performance to identify top features or compare entire sets — compare_features","text":"data.frame containing results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compare_features.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conduct statistical testing on time-series feature classification performance to identify top features or compare entire sets — compare_features","text":"Henderson, T., Bryant, . G., Fulcher, B. D. Never Dull Moment: Distributional Properties Baseline Time-Series Classification. 27th Pacific-Asia Conference Knowledge Discovery Data Mining, (2023).","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compare_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conduct statistical testing on time-series feature classification performance to identify top features or compare entire sets — compare_features","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compare_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conduct statistical testing on time-series feature classification performance to identify top features or compare entire sets — compare_features","text":"","code":"# \\donttest{ featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.    classifiers <- tsfeature_classifier(featMat,   by_set = FALSE) #> Only one set of 'catch22', 'feasts', 'tsfeatures', or 'Kats' with potential duplicates is in your feature data. Exiting and returning original input data. #> Fitting model 1/660 #> Fitting model 2/660 #> Fitting model 3/660 #> Fitting model 4/660 #> Fitting model 5/660 #> Fitting model 6/660 #> Fitting model 7/660 #> Fitting model 8/660 #> Fitting model 9/660 #> Fitting model 10/660 #> Fitting model 11/660 #> Fitting model 12/660 #> Fitting model 13/660 #> Fitting model 14/660 #> Fitting model 15/660 #> Fitting model 16/660 #> Fitting model 17/660 #> Fitting model 18/660 #> Fitting model 19/660 #> Fitting model 20/660 #> Fitting model 21/660 #> Fitting model 22/660 #> Fitting model 23/660 #> Fitting model 24/660 #> Fitting model 25/660 #> Fitting model 26/660 #> Fitting model 27/660 #> Fitting model 28/660 #> Fitting model 29/660 #> Fitting model 30/660 #> Fitting model 31/660 #> Fitting model 32/660 #> Fitting model 33/660 #> Fitting model 34/660 #> Fitting model 35/660 #> Fitting model 36/660 #> Fitting model 37/660 #> Fitting model 38/660 #> Fitting model 39/660 #> Fitting model 40/660 #> Fitting model 41/660 #> Fitting model 42/660 #> Fitting model 43/660 #> Fitting model 44/660 #> Fitting model 45/660 #> Fitting model 46/660 #> Fitting model 47/660 #> Fitting model 48/660 #> Fitting model 49/660 #> Fitting model 50/660 #> Fitting model 51/660 #> Fitting model 52/660 #> Fitting model 53/660 #> Fitting model 54/660 #> Fitting model 55/660 #> Fitting model 56/660 #> Fitting model 57/660 #> Fitting model 58/660 #> Fitting model 59/660 #> Fitting model 60/660 #> Fitting model 61/660 #> Fitting model 62/660 #> Fitting model 63/660 #> Fitting model 64/660 #> Fitting model 65/660 #> Fitting model 66/660 #> Fitting model 67/660 #> Fitting model 68/660 #> Fitting model 69/660 #> Fitting model 70/660 #> Fitting model 71/660 #> Fitting model 72/660 #> Fitting model 73/660 #> Fitting model 74/660 #> Fitting model 75/660 #> Fitting model 76/660 #> Fitting model 77/660 #> Fitting model 78/660 #> Fitting model 79/660 #> Fitting model 80/660 #> Fitting model 81/660 #> Fitting model 82/660 #> Fitting model 83/660 #> Fitting model 84/660 #> Fitting model 85/660 #> Fitting model 86/660 #> Fitting model 87/660 #> Fitting model 88/660 #> Fitting model 89/660 #> Fitting model 90/660 #> Fitting model 91/660 #> Fitting model 92/660 #> Fitting model 93/660 #> Fitting model 94/660 #> Fitting model 95/660 #> Fitting model 96/660 #> Fitting model 97/660 #> Fitting model 98/660 #> Fitting model 99/660 #> Fitting model 100/660 #> Fitting model 101/660 #> Fitting model 102/660 #> Fitting model 103/660 #> Fitting model 104/660 #> Fitting model 105/660 #> Fitting model 106/660 #> Fitting model 107/660 #> Fitting model 108/660 #> Fitting model 109/660 #> Fitting model 110/660 #> Fitting model 111/660 #> Fitting model 112/660 #> Fitting model 113/660 #> Fitting model 114/660 #> Fitting model 115/660 #> Fitting model 116/660 #> Fitting model 117/660 #> Fitting model 118/660 #> Fitting model 119/660 #> Fitting model 120/660 #> Fitting model 121/660 #> Fitting model 122/660 #> Fitting model 123/660 #> Fitting model 124/660 #> Fitting model 125/660 #> Fitting model 126/660 #> Fitting model 127/660 #> Fitting model 128/660 #> Fitting model 129/660 #> Fitting model 130/660 #> Fitting model 131/660 #> Fitting model 132/660 #> Fitting model 133/660 #> Fitting model 134/660 #> Fitting model 135/660 #> Fitting model 136/660 #> Fitting model 137/660 #> Fitting model 138/660 #> Fitting model 139/660 #> Fitting model 140/660 #> Fitting model 141/660 #> Fitting model 142/660 #> Fitting model 143/660 #> Fitting model 144/660 #> Fitting model 145/660 #> Fitting model 146/660 #> Fitting model 147/660 #> Fitting model 148/660 #> Fitting model 149/660 #> Fitting model 150/660 #> Fitting model 151/660 #> Fitting model 152/660 #> Fitting model 153/660 #> Fitting model 154/660 #> Fitting model 155/660 #> Fitting model 156/660 #> Fitting model 157/660 #> Fitting model 158/660 #> Fitting model 159/660 #> Fitting model 160/660 #> Fitting model 161/660 #> Fitting model 162/660 #> Fitting model 163/660 #> Fitting model 164/660 #> Fitting model 165/660 #> Fitting model 166/660 #> Fitting model 167/660 #> Fitting model 168/660 #> Fitting model 169/660 #> Fitting model 170/660 #> Fitting model 171/660 #> Fitting model 172/660 #> Fitting model 173/660 #> Fitting model 174/660 #> Fitting model 175/660 #> Fitting model 176/660 #> Fitting model 177/660 #> Fitting model 178/660 #> Fitting model 179/660 #> Fitting model 180/660 #> Fitting model 181/660 #> Fitting model 182/660 #> Fitting model 183/660 #> Fitting model 184/660 #> Fitting model 185/660 #> Fitting model 186/660 #> Fitting model 187/660 #> Fitting model 188/660 #> Fitting model 189/660 #> Fitting model 190/660 #> Fitting model 191/660 #> Fitting model 192/660 #> Fitting model 193/660 #> Fitting model 194/660 #> Fitting model 195/660 #> Fitting model 196/660 #> Fitting model 197/660 #> Fitting model 198/660 #> Fitting model 199/660 #> Fitting model 200/660 #> Fitting model 201/660 #> Fitting model 202/660 #> Fitting model 203/660 #> Fitting model 204/660 #> Fitting model 205/660 #> Fitting model 206/660 #> Fitting model 207/660 #> Fitting model 208/660 #> Fitting model 209/660 #> Fitting model 210/660 #> Fitting model 211/660 #> Fitting model 212/660 #> Fitting model 213/660 #> Fitting model 214/660 #> Fitting model 215/660 #> Fitting model 216/660 #> Fitting model 217/660 #> Fitting model 218/660 #> Fitting model 219/660 #> Fitting model 220/660 #> Fitting model 221/660 #> Fitting model 222/660 #> Fitting model 223/660 #> Fitting model 224/660 #> Fitting model 225/660 #> Fitting model 226/660 #> Fitting model 227/660 #> Fitting model 228/660 #> Fitting model 229/660 #> Fitting model 230/660 #> Fitting model 231/660 #> Fitting model 232/660 #> Fitting model 233/660 #> Fitting model 234/660 #> Fitting model 235/660 #> Fitting model 236/660 #> Fitting model 237/660 #> Fitting model 238/660 #> Fitting model 239/660 #> Fitting model 240/660 #> Fitting model 241/660 #> Fitting model 242/660 #> Fitting model 243/660 #> Fitting model 244/660 #> Fitting model 245/660 #> Fitting model 246/660 #> Fitting model 247/660 #> Fitting model 248/660 #> Fitting model 249/660 #> Fitting model 250/660 #> Fitting model 251/660 #> Fitting model 252/660 #> Fitting model 253/660 #> Fitting model 254/660 #> Fitting model 255/660 #> Fitting model 256/660 #> Fitting model 257/660 #> Fitting model 258/660 #> Fitting model 259/660 #> Fitting model 260/660 #> Fitting model 261/660 #> Fitting model 262/660 #> Fitting model 263/660 #> Fitting model 264/660 #> Fitting model 265/660 #> Fitting model 266/660 #> Fitting model 267/660 #> Fitting model 268/660 #> Fitting model 269/660 #> Fitting model 270/660 #> Fitting model 271/660 #> Fitting model 272/660 #> Fitting model 273/660 #> Fitting model 274/660 #> Fitting model 275/660 #> Fitting model 276/660 #> Fitting model 277/660 #> Fitting model 278/660 #> Fitting model 279/660 #> Fitting model 280/660 #> Fitting model 281/660 #> Fitting model 282/660 #> Fitting model 283/660 #> Fitting model 284/660 #> Fitting model 285/660 #> Fitting model 286/660 #> Fitting model 287/660 #> Fitting model 288/660 #> Fitting model 289/660 #> Fitting model 290/660 #> Fitting model 291/660 #> Fitting model 292/660 #> Fitting model 293/660 #> Fitting model 294/660 #> Fitting model 295/660 #> Fitting model 296/660 #> Fitting model 297/660 #> Fitting model 298/660 #> Fitting model 299/660 #> Fitting model 300/660 #> Fitting model 301/660 #> Fitting model 302/660 #> Fitting model 303/660 #> Fitting model 304/660 #> Fitting model 305/660 #> Fitting model 306/660 #> Fitting model 307/660 #> Fitting model 308/660 #> Fitting model 309/660 #> Fitting model 310/660 #> Fitting model 311/660 #> Fitting model 312/660 #> Fitting model 313/660 #> Fitting model 314/660 #> Fitting model 315/660 #> Fitting model 316/660 #> Fitting model 317/660 #> Fitting model 318/660 #> Fitting model 319/660 #> Fitting model 320/660 #> Fitting model 321/660 #> Fitting model 322/660 #> Fitting model 323/660 #> Fitting model 324/660 #> Fitting model 325/660 #> Fitting model 326/660 #> Fitting model 327/660 #> Fitting model 328/660 #> Fitting model 329/660 #> Fitting model 330/660 #> Fitting model 331/660 #> Fitting model 332/660 #> Fitting model 333/660 #> Fitting model 334/660 #> Fitting model 335/660 #> Fitting model 336/660 #> Fitting model 337/660 #> Fitting model 338/660 #> Fitting model 339/660 #> Fitting model 340/660 #> Fitting model 341/660 #> Fitting model 342/660 #> Fitting model 343/660 #> Fitting model 344/660 #> Fitting model 345/660 #> Fitting model 346/660 #> Fitting model 347/660 #> Fitting model 348/660 #> Fitting model 349/660 #> Fitting model 350/660 #> Fitting model 351/660 #> Fitting model 352/660 #> Fitting model 353/660 #> Fitting model 354/660 #> Fitting model 355/660 #> Fitting model 356/660 #> Fitting model 357/660 #> Fitting model 358/660 #> Fitting model 359/660 #> Fitting model 360/660 #> Fitting model 361/660 #> Fitting model 362/660 #> Fitting model 363/660 #> Fitting model 364/660 #> Fitting model 365/660 #> Fitting model 366/660 #> Fitting model 367/660 #> Fitting model 368/660 #> Fitting model 369/660 #> Fitting model 370/660 #> Fitting model 371/660 #> Fitting model 372/660 #> Fitting model 373/660 #> Fitting model 374/660 #> Fitting model 375/660 #> Fitting model 376/660 #> Fitting model 377/660 #> Fitting model 378/660 #> Fitting model 379/660 #> Fitting model 380/660 #> Fitting model 381/660 #> Fitting model 382/660 #> Fitting model 383/660 #> Fitting model 384/660 #> Fitting model 385/660 #> Fitting model 386/660 #> Fitting model 387/660 #> Fitting model 388/660 #> Fitting model 389/660 #> Fitting model 390/660 #> Fitting model 391/660 #> Fitting model 392/660 #> Fitting model 393/660 #> Fitting model 394/660 #> Fitting model 395/660 #> Fitting model 396/660 #> Fitting model 397/660 #> Fitting model 398/660 #> Fitting model 399/660 #> Fitting model 400/660 #> Fitting model 401/660 #> Fitting model 402/660 #> Fitting model 403/660 #> Fitting model 404/660 #> Fitting model 405/660 #> Fitting model 406/660 #> Fitting model 407/660 #> Fitting model 408/660 #> Fitting model 409/660 #> Fitting model 410/660 #> Fitting model 411/660 #> Fitting model 412/660 #> Fitting model 413/660 #> Fitting model 414/660 #> Fitting model 415/660 #> Fitting model 416/660 #> Fitting model 417/660 #> Fitting model 418/660 #> Fitting model 419/660 #> Fitting model 420/660 #> Fitting model 421/660 #> Fitting model 422/660 #> Fitting model 423/660 #> Fitting model 424/660 #> Fitting model 425/660 #> Fitting model 426/660 #> Fitting model 427/660 #> Fitting model 428/660 #> Fitting model 429/660 #> Fitting model 430/660 #> Fitting model 431/660 #> Fitting model 432/660 #> Fitting model 433/660 #> Fitting model 434/660 #> Fitting model 435/660 #> Fitting model 436/660 #> Fitting model 437/660 #> Fitting model 438/660 #> Fitting model 439/660 #> Fitting model 440/660 #> Fitting model 441/660 #> Fitting model 442/660 #> Fitting model 443/660 #> Fitting model 444/660 #> Fitting model 445/660 #> Fitting model 446/660 #> Fitting model 447/660 #> Fitting model 448/660 #> Fitting model 449/660 #> Fitting model 450/660 #> Fitting model 451/660 #> Fitting model 452/660 #> Fitting model 453/660 #> Fitting model 454/660 #> Fitting model 455/660 #> Fitting model 456/660 #> Fitting model 457/660 #> Fitting model 458/660 #> Fitting model 459/660 #> Fitting model 460/660 #> Fitting model 461/660 #> Fitting model 462/660 #> Fitting model 463/660 #> Fitting model 464/660 #> Fitting model 465/660 #> Fitting model 466/660 #> Fitting model 467/660 #> Fitting model 468/660 #> Fitting model 469/660 #> Fitting model 470/660 #> Fitting model 471/660 #> Fitting model 472/660 #> Fitting model 473/660 #> Fitting model 474/660 #> Fitting model 475/660 #> Fitting model 476/660 #> Fitting model 477/660 #> Fitting model 478/660 #> Fitting model 479/660 #> Fitting model 480/660 #> Fitting model 481/660 #> Fitting model 482/660 #> Fitting model 483/660 #> Fitting model 484/660 #> Fitting model 485/660 #> Fitting model 486/660 #> Fitting model 487/660 #> Fitting model 488/660 #> Fitting model 489/660 #> Fitting model 490/660 #> Fitting model 491/660 #> Fitting model 492/660 #> Fitting model 493/660 #> Fitting model 494/660 #> Fitting model 495/660 #> Fitting model 496/660 #> Fitting model 497/660 #> Fitting model 498/660 #> Fitting model 499/660 #> Fitting model 500/660 #> Fitting model 501/660 #> Fitting model 502/660 #> Fitting model 503/660 #> Fitting model 504/660 #> Fitting model 505/660 #> Fitting model 506/660 #> Fitting model 507/660 #> Fitting model 508/660 #> Fitting model 509/660 #> Fitting model 510/660 #> Fitting model 511/660 #> Fitting model 512/660 #> Fitting model 513/660 #> Fitting model 514/660 #> Fitting model 515/660 #> Fitting model 516/660 #> Fitting model 517/660 #> Fitting model 518/660 #> Fitting model 519/660 #> Fitting model 520/660 #> Fitting model 521/660 #> Fitting model 522/660 #> Fitting model 523/660 #> Fitting model 524/660 #> Fitting model 525/660 #> Fitting model 526/660 #> Fitting model 527/660 #> Fitting model 528/660 #> Fitting model 529/660 #> Fitting model 530/660 #> Fitting model 531/660 #> Fitting model 532/660 #> Fitting model 533/660 #> Fitting model 534/660 #> Fitting model 535/660 #> Fitting model 536/660 #> Fitting model 537/660 #> Fitting model 538/660 #> Fitting model 539/660 #> Fitting model 540/660 #> Fitting model 541/660 #> Fitting model 542/660 #> Fitting model 543/660 #> Fitting model 544/660 #> Fitting model 545/660 #> Fitting model 546/660 #> Fitting model 547/660 #> Fitting model 548/660 #> Fitting model 549/660 #> Fitting model 550/660 #> Fitting model 551/660 #> Fitting model 552/660 #> Fitting model 553/660 #> Fitting model 554/660 #> Fitting model 555/660 #> Fitting model 556/660 #> Fitting model 557/660 #> Fitting model 558/660 #> Fitting model 559/660 #> Fitting model 560/660 #> Fitting model 561/660 #> Fitting model 562/660 #> Fitting model 563/660 #> Fitting model 564/660 #> Fitting model 565/660 #> Fitting model 566/660 #> Fitting model 567/660 #> Fitting model 568/660 #> Fitting model 569/660 #> Fitting model 570/660 #> Fitting model 571/660 #> Fitting model 572/660 #> Fitting model 573/660 #> Fitting model 574/660 #> Fitting model 575/660 #> Fitting model 576/660 #> Fitting model 577/660 #> Fitting model 578/660 #> Fitting model 579/660 #> Fitting model 580/660 #> Fitting model 581/660 #> Fitting model 582/660 #> Fitting model 583/660 #> Fitting model 584/660 #> Fitting model 585/660 #> Fitting model 586/660 #> Fitting model 587/660 #> Fitting model 588/660 #> Fitting model 589/660 #> Fitting model 590/660 #> Fitting model 591/660 #> Fitting model 592/660 #> Fitting model 593/660 #> Fitting model 594/660 #> Fitting model 595/660 #> Fitting model 596/660 #> Fitting model 597/660 #> Fitting model 598/660 #> Fitting model 599/660 #> Fitting model 600/660 #> Fitting model 601/660 #> Fitting model 602/660 #> Fitting model 603/660 #> Fitting model 604/660 #> Fitting model 605/660 #> Fitting model 606/660 #> Fitting model 607/660 #> Fitting model 608/660 #> Fitting model 609/660 #> Fitting model 610/660 #> Fitting model 611/660 #> Fitting model 612/660 #> Fitting model 613/660 #> Fitting model 614/660 #> Fitting model 615/660 #> Fitting model 616/660 #> Fitting model 617/660 #> Fitting model 618/660 #> Fitting model 619/660 #> Fitting model 620/660 #> Fitting model 621/660 #> Fitting model 622/660 #> Fitting model 623/660 #> Fitting model 624/660 #> Fitting model 625/660 #> Fitting model 626/660 #> Fitting model 627/660 #> Fitting model 628/660 #> Fitting model 629/660 #> Fitting model 630/660 #> Fitting model 631/660 #> Fitting model 632/660 #> Fitting model 633/660 #> Fitting model 634/660 #> Fitting model 635/660 #> Fitting model 636/660 #> Fitting model 637/660 #> Fitting model 638/660 #> Fitting model 639/660 #> Fitting model 640/660 #> Fitting model 641/660 #> Fitting model 642/660 #> Fitting model 643/660 #> Fitting model 644/660 #> Fitting model 645/660 #> Fitting model 646/660 #> Fitting model 647/660 #> Fitting model 648/660 #> Fitting model 649/660 #> Fitting model 650/660 #> Fitting model 651/660 #> Fitting model 652/660 #> Fitting model 653/660 #> Fitting model 654/660 #> Fitting model 655/660 #> Fitting model 656/660 #> Fitting model 657/660 #> Fitting model 658/660 #> Fitting model 659/660 #> Fitting model 660/660    compare_features(classifiers,   by_set = FALSE,   hypothesis = \"pairwise\")  #> Calculating comparison 1/231 #> Calculating comparison 2/231 #> Calculating comparison 3/231 #> Calculating comparison 4/231 #> Calculating comparison 5/231 #> Calculating comparison 6/231 #> Calculating comparison 7/231 #> Calculating comparison 8/231 #> Calculating comparison 9/231 #> Calculating comparison 10/231 #> Calculating comparison 11/231 #> Calculating comparison 12/231 #> Calculating comparison 13/231 #> Calculating comparison 14/231 #> Calculating comparison 15/231 #> Calculating comparison 16/231 #> Calculating comparison 17/231 #> Calculating comparison 18/231 #> Calculating comparison 19/231 #> Calculating comparison 20/231 #> Calculating comparison 21/231 #> Calculating comparison 22/231 #> Calculating comparison 23/231 #> Calculating comparison 24/231 #> Calculating comparison 25/231 #> Calculating comparison 26/231 #> Calculating comparison 27/231 #> Calculating comparison 28/231 #> Calculating comparison 29/231 #> Calculating comparison 30/231 #> Calculating comparison 31/231 #> Calculating comparison 32/231 #> Calculating comparison 33/231 #> Calculating comparison 34/231 #> Calculating comparison 35/231 #> Calculating comparison 36/231 #> Calculating comparison 37/231 #> Calculating comparison 38/231 #> Calculating comparison 39/231 #> Calculating comparison 40/231 #> Calculating comparison 41/231 #> Calculating comparison 42/231 #> Calculating comparison 43/231 #> Calculating comparison 44/231 #> Calculating comparison 45/231 #> Calculating comparison 46/231 #> Calculating comparison 47/231 #> Calculating comparison 48/231 #> Calculating comparison 49/231 #> Calculating comparison 50/231 #> Calculating comparison 51/231 #> Calculating comparison 52/231 #> Calculating comparison 53/231 #> Calculating comparison 54/231 #> Calculating comparison 55/231 #> Calculating comparison 56/231 #> Calculating comparison 57/231 #> Calculating comparison 58/231 #> Calculating comparison 59/231 #> Calculating comparison 60/231 #> Calculating comparison 61/231 #> Calculating comparison 62/231 #> Calculating comparison 63/231 #> Calculating comparison 64/231 #> Calculating comparison 65/231 #> Calculating comparison 66/231 #> Calculating comparison 67/231 #> Calculating comparison 68/231 #> Calculating comparison 69/231 #> Calculating comparison 70/231 #> Calculating comparison 71/231 #> Calculating comparison 72/231 #> Calculating comparison 73/231 #> Calculating comparison 74/231 #> Calculating comparison 75/231 #> Calculating comparison 76/231 #> Calculating comparison 77/231 #> Calculating comparison 78/231 #> Calculating comparison 79/231 #> Calculating comparison 80/231 #> Calculating comparison 81/231 #> Calculating comparison 82/231 #> Calculating comparison 83/231 #> Calculating comparison 84/231 #> Calculating comparison 85/231 #> Calculating comparison 86/231 #> Calculating comparison 87/231 #> Calculating comparison 88/231 #> Calculating comparison 89/231 #> Calculating comparison 90/231 #> Calculating comparison 91/231 #> Calculating comparison 92/231 #> Calculating comparison 93/231 #> Calculating comparison 94/231 #> Calculating comparison 95/231 #> Calculating comparison 96/231 #> Calculating comparison 97/231 #> Calculating comparison 98/231 #> Calculating comparison 99/231 #> Calculating comparison 100/231 #> Calculating comparison 101/231 #> Calculating comparison 102/231 #> Calculating comparison 103/231 #> Calculating comparison 104/231 #> Calculating comparison 105/231 #> Calculating comparison 106/231 #> Calculating comparison 107/231 #> Calculating comparison 108/231 #> Calculating comparison 109/231 #> Calculating comparison 110/231 #> Calculating comparison 111/231 #> Calculating comparison 112/231 #> Calculating comparison 113/231 #> Calculating comparison 114/231 #> Calculating comparison 115/231 #> Calculating comparison 116/231 #> Calculating comparison 117/231 #> Calculating comparison 118/231 #> Calculating comparison 119/231 #> Calculating comparison 120/231 #> Calculating comparison 121/231 #> Calculating comparison 122/231 #> Calculating comparison 123/231 #> Calculating comparison 124/231 #> Calculating comparison 125/231 #> Calculating comparison 126/231 #> Calculating comparison 127/231 #> Calculating comparison 128/231 #> Calculating comparison 129/231 #> Calculating comparison 130/231 #> Calculating comparison 131/231 #> Calculating comparison 132/231 #> Calculating comparison 133/231 #> Calculating comparison 134/231 #> Calculating comparison 135/231 #> Calculating comparison 136/231 #> Calculating comparison 137/231 #> Calculating comparison 138/231 #> Calculating comparison 139/231 #> Calculating comparison 140/231 #> Calculating comparison 141/231 #> Calculating comparison 142/231 #> Calculating comparison 143/231 #> Calculating comparison 144/231 #> Calculating comparison 145/231 #> Calculating comparison 146/231 #> Calculating comparison 147/231 #> Calculating comparison 148/231 #> Calculating comparison 149/231 #> Calculating comparison 150/231 #> Calculating comparison 151/231 #> Calculating comparison 152/231 #> Calculating comparison 153/231 #> Calculating comparison 154/231 #> Calculating comparison 155/231 #> Calculating comparison 156/231 #> Calculating comparison 157/231 #> Calculating comparison 158/231 #> Calculating comparison 159/231 #> Calculating comparison 160/231 #> Calculating comparison 161/231 #> Calculating comparison 162/231 #> Calculating comparison 163/231 #> Calculating comparison 164/231 #> Calculating comparison 165/231 #> Calculating comparison 166/231 #> Calculating comparison 167/231 #> Calculating comparison 168/231 #> Calculating comparison 169/231 #> Calculating comparison 170/231 #> Calculating comparison 171/231 #> Calculating comparison 172/231 #> Calculating comparison 173/231 #> Calculating comparison 174/231 #> Calculating comparison 175/231 #> Calculating comparison 176/231 #> Calculating comparison 177/231 #> Calculating comparison 178/231 #> Calculating comparison 179/231 #> Calculating comparison 180/231 #> Calculating comparison 181/231 #> Calculating comparison 182/231 #> Calculating comparison 183/231 #> Calculating comparison 184/231 #> Calculating comparison 185/231 #> Calculating comparison 186/231 #> Calculating comparison 187/231 #> Calculating comparison 188/231 #> Calculating comparison 189/231 #> Calculating comparison 190/231 #> Calculating comparison 191/231 #> Calculating comparison 192/231 #> Calculating comparison 193/231 #> Calculating comparison 194/231 #> Calculating comparison 195/231 #> Calculating comparison 196/231 #> Calculating comparison 197/231 #> Calculating comparison 198/231 #> Calculating comparison 199/231 #> Calculating comparison 200/231 #> Calculating comparison 201/231 #> Calculating comparison 202/231 #> Calculating comparison 203/231 #> Calculating comparison 204/231 #> Calculating comparison 205/231 #> Calculating comparison 206/231 #> Calculating comparison 207/231 #> Calculating comparison 208/231 #> Calculating comparison 209/231 #> Calculating comparison 210/231 #> Calculating comparison 211/231 #> Calculating comparison 212/231 #> Calculating comparison 213/231 #> Calculating comparison 214/231 #> Calculating comparison 215/231 #> Calculating comparison 216/231 #> Calculating comparison 217/231 #> Calculating comparison 218/231 #> Calculating comparison 219/231 #> Calculating comparison 220/231 #> Calculating comparison 221/231 #> Calculating comparison 222/231 #> Calculating comparison 223/231 #> Calculating comparison 224/231 #> Calculating comparison 225/231 #> Calculating comparison 226/231 #> Calculating comparison 227/231 #> Calculating comparison 228/231 #> Calculating comparison 229/231 #> Calculating comparison 230/231 #> Calculating comparison 231/231 #>                                                                                                 hypothesis #> 1                                   catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_CO_FirstMin_ac #> 2                         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_CO_HistogramAMI_even_2_5 #> 3                                        catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_CO_f1ecac #> 4                                    catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_CO_trev_1_num #> 5                              catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_DN_HistogramMode_10 #> 6                               catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_DN_HistogramMode_5 #> 7                    catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_DN_OutlierInclude_n_001_mdrmd #> 8                    catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_DN_OutlierInclude_p_001_mdrmd #> 9                   catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_FC_LocalSimple_mean1_tauresrat #> 10                     catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_FC_LocalSimple_mean3_stderr #> 11         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 12                            catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_MD_hrv_classic_pnn40 #> 13                       catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_PD_PeriodicityWang_th0_01 #> 14                catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_SB_BinaryStats_diff_longstretch0 #> 15                catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_SB_BinaryStats_mean_longstretch1 #> 16                       catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_SB_MotifThree_quantile_hh #> 17              catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 18          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 19     catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 20                catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_SP_Summaries_welch_rect_area_5_1 #> 21                catch22_CO_Embed2_Dist_tau_d_expfit_meandiff != catch22_SP_Summaries_welch_rect_centroid #> 22                                              catch22_CO_FirstMin_ac != catch22_CO_HistogramAMI_even_2_5 #> 23                                                             catch22_CO_FirstMin_ac != catch22_CO_f1ecac #> 24                                                         catch22_CO_FirstMin_ac != catch22_CO_trev_1_num #> 25                                                   catch22_CO_FirstMin_ac != catch22_DN_HistogramMode_10 #> 26                                                    catch22_CO_FirstMin_ac != catch22_DN_HistogramMode_5 #> 27                                         catch22_CO_FirstMin_ac != catch22_DN_OutlierInclude_n_001_mdrmd #> 28                                         catch22_CO_FirstMin_ac != catch22_DN_OutlierInclude_p_001_mdrmd #> 29                                        catch22_CO_FirstMin_ac != catch22_FC_LocalSimple_mean1_tauresrat #> 30                                           catch22_CO_FirstMin_ac != catch22_FC_LocalSimple_mean3_stderr #> 31                               catch22_CO_FirstMin_ac != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 32                                                  catch22_CO_FirstMin_ac != catch22_MD_hrv_classic_pnn40 #> 33                                             catch22_CO_FirstMin_ac != catch22_PD_PeriodicityWang_th0_01 #> 34                                      catch22_CO_FirstMin_ac != catch22_SB_BinaryStats_diff_longstretch0 #> 35                                      catch22_CO_FirstMin_ac != catch22_SB_BinaryStats_mean_longstretch1 #> 36                                             catch22_CO_FirstMin_ac != catch22_SB_MotifThree_quantile_hh #> 37                                    catch22_CO_FirstMin_ac != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 38                                catch22_CO_FirstMin_ac != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 39                           catch22_CO_FirstMin_ac != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 40                                      catch22_CO_FirstMin_ac != catch22_SP_Summaries_welch_rect_area_5_1 #> 41                                      catch22_CO_FirstMin_ac != catch22_SP_Summaries_welch_rect_centroid #> 42                                                   catch22_CO_HistogramAMI_even_2_5 != catch22_CO_f1ecac #> 43                                               catch22_CO_HistogramAMI_even_2_5 != catch22_CO_trev_1_num #> 44                                         catch22_CO_HistogramAMI_even_2_5 != catch22_DN_HistogramMode_10 #> 45                                          catch22_CO_HistogramAMI_even_2_5 != catch22_DN_HistogramMode_5 #> 46                               catch22_CO_HistogramAMI_even_2_5 != catch22_DN_OutlierInclude_n_001_mdrmd #> 47                               catch22_CO_HistogramAMI_even_2_5 != catch22_DN_OutlierInclude_p_001_mdrmd #> 48                              catch22_CO_HistogramAMI_even_2_5 != catch22_FC_LocalSimple_mean1_tauresrat #> 49                                 catch22_CO_HistogramAMI_even_2_5 != catch22_FC_LocalSimple_mean3_stderr #> 50                     catch22_CO_HistogramAMI_even_2_5 != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 51                                        catch22_CO_HistogramAMI_even_2_5 != catch22_MD_hrv_classic_pnn40 #> 52                                   catch22_CO_HistogramAMI_even_2_5 != catch22_PD_PeriodicityWang_th0_01 #> 53                            catch22_CO_HistogramAMI_even_2_5 != catch22_SB_BinaryStats_diff_longstretch0 #> 54                            catch22_CO_HistogramAMI_even_2_5 != catch22_SB_BinaryStats_mean_longstretch1 #> 55                                   catch22_CO_HistogramAMI_even_2_5 != catch22_SB_MotifThree_quantile_hh #> 56                          catch22_CO_HistogramAMI_even_2_5 != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 57                      catch22_CO_HistogramAMI_even_2_5 != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 58                 catch22_CO_HistogramAMI_even_2_5 != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 59                            catch22_CO_HistogramAMI_even_2_5 != catch22_SP_Summaries_welch_rect_area_5_1 #> 60                            catch22_CO_HistogramAMI_even_2_5 != catch22_SP_Summaries_welch_rect_centroid #> 61                                                              catch22_CO_f1ecac != catch22_CO_trev_1_num #> 62                                                        catch22_CO_f1ecac != catch22_DN_HistogramMode_10 #> 63                                                         catch22_CO_f1ecac != catch22_DN_HistogramMode_5 #> 64                                              catch22_CO_f1ecac != catch22_DN_OutlierInclude_n_001_mdrmd #> 65                                              catch22_CO_f1ecac != catch22_DN_OutlierInclude_p_001_mdrmd #> 66                                             catch22_CO_f1ecac != catch22_FC_LocalSimple_mean1_tauresrat #> 67                                                catch22_CO_f1ecac != catch22_FC_LocalSimple_mean3_stderr #> 68                                    catch22_CO_f1ecac != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 69                                                       catch22_CO_f1ecac != catch22_MD_hrv_classic_pnn40 #> 70                                                  catch22_CO_f1ecac != catch22_PD_PeriodicityWang_th0_01 #> 71                                           catch22_CO_f1ecac != catch22_SB_BinaryStats_diff_longstretch0 #> 72                                           catch22_CO_f1ecac != catch22_SB_BinaryStats_mean_longstretch1 #> 73                                                  catch22_CO_f1ecac != catch22_SB_MotifThree_quantile_hh #> 74                                         catch22_CO_f1ecac != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 75                                     catch22_CO_f1ecac != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 76                                catch22_CO_f1ecac != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 77                                           catch22_CO_f1ecac != catch22_SP_Summaries_welch_rect_area_5_1 #> 78                                           catch22_CO_f1ecac != catch22_SP_Summaries_welch_rect_centroid #> 79                                                    catch22_CO_trev_1_num != catch22_DN_HistogramMode_10 #> 80                                                     catch22_CO_trev_1_num != catch22_DN_HistogramMode_5 #> 81                                          catch22_CO_trev_1_num != catch22_DN_OutlierInclude_n_001_mdrmd #> 82                                          catch22_CO_trev_1_num != catch22_DN_OutlierInclude_p_001_mdrmd #> 83                                         catch22_CO_trev_1_num != catch22_FC_LocalSimple_mean1_tauresrat #> 84                                            catch22_CO_trev_1_num != catch22_FC_LocalSimple_mean3_stderr #> 85                                catch22_CO_trev_1_num != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 86                                                   catch22_CO_trev_1_num != catch22_MD_hrv_classic_pnn40 #> 87                                              catch22_CO_trev_1_num != catch22_PD_PeriodicityWang_th0_01 #> 88                                       catch22_CO_trev_1_num != catch22_SB_BinaryStats_diff_longstretch0 #> 89                                       catch22_CO_trev_1_num != catch22_SB_BinaryStats_mean_longstretch1 #> 90                                              catch22_CO_trev_1_num != catch22_SB_MotifThree_quantile_hh #> 91                                     catch22_CO_trev_1_num != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 92                                 catch22_CO_trev_1_num != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 93                            catch22_CO_trev_1_num != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 94                                       catch22_CO_trev_1_num != catch22_SP_Summaries_welch_rect_area_5_1 #> 95                                       catch22_CO_trev_1_num != catch22_SP_Summaries_welch_rect_centroid #> 96                                               catch22_DN_HistogramMode_10 != catch22_DN_HistogramMode_5 #> 97                                    catch22_DN_HistogramMode_10 != catch22_DN_OutlierInclude_n_001_mdrmd #> 98                                    catch22_DN_HistogramMode_10 != catch22_DN_OutlierInclude_p_001_mdrmd #> 99                                   catch22_DN_HistogramMode_10 != catch22_FC_LocalSimple_mean1_tauresrat #> 100                                     catch22_DN_HistogramMode_10 != catch22_FC_LocalSimple_mean3_stderr #> 101                         catch22_DN_HistogramMode_10 != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 102                                            catch22_DN_HistogramMode_10 != catch22_MD_hrv_classic_pnn40 #> 103                                       catch22_DN_HistogramMode_10 != catch22_PD_PeriodicityWang_th0_01 #> 104                                catch22_DN_HistogramMode_10 != catch22_SB_BinaryStats_diff_longstretch0 #> 105                                catch22_DN_HistogramMode_10 != catch22_SB_BinaryStats_mean_longstretch1 #> 106                                       catch22_DN_HistogramMode_10 != catch22_SB_MotifThree_quantile_hh #> 107                              catch22_DN_HistogramMode_10 != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 108                          catch22_DN_HistogramMode_10 != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 109                     catch22_DN_HistogramMode_10 != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 110                                catch22_DN_HistogramMode_10 != catch22_SP_Summaries_welch_rect_area_5_1 #> 111                                catch22_DN_HistogramMode_10 != catch22_SP_Summaries_welch_rect_centroid #> 112                                    catch22_DN_HistogramMode_5 != catch22_DN_OutlierInclude_n_001_mdrmd #> 113                                    catch22_DN_HistogramMode_5 != catch22_DN_OutlierInclude_p_001_mdrmd #> 114                                   catch22_DN_HistogramMode_5 != catch22_FC_LocalSimple_mean1_tauresrat #> 115                                      catch22_DN_HistogramMode_5 != catch22_FC_LocalSimple_mean3_stderr #> 116                          catch22_DN_HistogramMode_5 != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 117                                             catch22_DN_HistogramMode_5 != catch22_MD_hrv_classic_pnn40 #> 118                                        catch22_DN_HistogramMode_5 != catch22_PD_PeriodicityWang_th0_01 #> 119                                 catch22_DN_HistogramMode_5 != catch22_SB_BinaryStats_diff_longstretch0 #> 120                                 catch22_DN_HistogramMode_5 != catch22_SB_BinaryStats_mean_longstretch1 #> 121                                        catch22_DN_HistogramMode_5 != catch22_SB_MotifThree_quantile_hh #> 122                               catch22_DN_HistogramMode_5 != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 123                           catch22_DN_HistogramMode_5 != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 124                      catch22_DN_HistogramMode_5 != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 125                                 catch22_DN_HistogramMode_5 != catch22_SP_Summaries_welch_rect_area_5_1 #> 126                                 catch22_DN_HistogramMode_5 != catch22_SP_Summaries_welch_rect_centroid #> 127                         catch22_DN_OutlierInclude_n_001_mdrmd != catch22_DN_OutlierInclude_p_001_mdrmd #> 128                        catch22_DN_OutlierInclude_n_001_mdrmd != catch22_FC_LocalSimple_mean1_tauresrat #> 129                           catch22_DN_OutlierInclude_n_001_mdrmd != catch22_FC_LocalSimple_mean3_stderr #> 130               catch22_DN_OutlierInclude_n_001_mdrmd != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 131                                  catch22_DN_OutlierInclude_n_001_mdrmd != catch22_MD_hrv_classic_pnn40 #> 132                             catch22_DN_OutlierInclude_n_001_mdrmd != catch22_PD_PeriodicityWang_th0_01 #> 133                      catch22_DN_OutlierInclude_n_001_mdrmd != catch22_SB_BinaryStats_diff_longstretch0 #> 134                      catch22_DN_OutlierInclude_n_001_mdrmd != catch22_SB_BinaryStats_mean_longstretch1 #> 135                             catch22_DN_OutlierInclude_n_001_mdrmd != catch22_SB_MotifThree_quantile_hh #> 136                    catch22_DN_OutlierInclude_n_001_mdrmd != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 137                catch22_DN_OutlierInclude_n_001_mdrmd != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 138           catch22_DN_OutlierInclude_n_001_mdrmd != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 139                      catch22_DN_OutlierInclude_n_001_mdrmd != catch22_SP_Summaries_welch_rect_area_5_1 #> 140                      catch22_DN_OutlierInclude_n_001_mdrmd != catch22_SP_Summaries_welch_rect_centroid #> 141                        catch22_DN_OutlierInclude_p_001_mdrmd != catch22_FC_LocalSimple_mean1_tauresrat #> 142                           catch22_DN_OutlierInclude_p_001_mdrmd != catch22_FC_LocalSimple_mean3_stderr #> 143               catch22_DN_OutlierInclude_p_001_mdrmd != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 144                                  catch22_DN_OutlierInclude_p_001_mdrmd != catch22_MD_hrv_classic_pnn40 #> 145                             catch22_DN_OutlierInclude_p_001_mdrmd != catch22_PD_PeriodicityWang_th0_01 #> 146                      catch22_DN_OutlierInclude_p_001_mdrmd != catch22_SB_BinaryStats_diff_longstretch0 #> 147                      catch22_DN_OutlierInclude_p_001_mdrmd != catch22_SB_BinaryStats_mean_longstretch1 #> 148                             catch22_DN_OutlierInclude_p_001_mdrmd != catch22_SB_MotifThree_quantile_hh #> 149                    catch22_DN_OutlierInclude_p_001_mdrmd != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 150                catch22_DN_OutlierInclude_p_001_mdrmd != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 151           catch22_DN_OutlierInclude_p_001_mdrmd != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 152                      catch22_DN_OutlierInclude_p_001_mdrmd != catch22_SP_Summaries_welch_rect_area_5_1 #> 153                      catch22_DN_OutlierInclude_p_001_mdrmd != catch22_SP_Summaries_welch_rect_centroid #> 154                          catch22_FC_LocalSimple_mean1_tauresrat != catch22_FC_LocalSimple_mean3_stderr #> 155              catch22_FC_LocalSimple_mean1_tauresrat != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 156                                 catch22_FC_LocalSimple_mean1_tauresrat != catch22_MD_hrv_classic_pnn40 #> 157                            catch22_FC_LocalSimple_mean1_tauresrat != catch22_PD_PeriodicityWang_th0_01 #> 158                     catch22_FC_LocalSimple_mean1_tauresrat != catch22_SB_BinaryStats_diff_longstretch0 #> 159                     catch22_FC_LocalSimple_mean1_tauresrat != catch22_SB_BinaryStats_mean_longstretch1 #> 160                            catch22_FC_LocalSimple_mean1_tauresrat != catch22_SB_MotifThree_quantile_hh #> 161                   catch22_FC_LocalSimple_mean1_tauresrat != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 162               catch22_FC_LocalSimple_mean1_tauresrat != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 163          catch22_FC_LocalSimple_mean1_tauresrat != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 164                     catch22_FC_LocalSimple_mean1_tauresrat != catch22_SP_Summaries_welch_rect_area_5_1 #> 165                     catch22_FC_LocalSimple_mean1_tauresrat != catch22_SP_Summaries_welch_rect_centroid #> 166                 catch22_FC_LocalSimple_mean3_stderr != catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 167                                    catch22_FC_LocalSimple_mean3_stderr != catch22_MD_hrv_classic_pnn40 #> 168                               catch22_FC_LocalSimple_mean3_stderr != catch22_PD_PeriodicityWang_th0_01 #> 169                        catch22_FC_LocalSimple_mean3_stderr != catch22_SB_BinaryStats_diff_longstretch0 #> 170                        catch22_FC_LocalSimple_mean3_stderr != catch22_SB_BinaryStats_mean_longstretch1 #> 171                               catch22_FC_LocalSimple_mean3_stderr != catch22_SB_MotifThree_quantile_hh #> 172                      catch22_FC_LocalSimple_mean3_stderr != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 173                  catch22_FC_LocalSimple_mean3_stderr != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 174             catch22_FC_LocalSimple_mean3_stderr != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 175                        catch22_FC_LocalSimple_mean3_stderr != catch22_SP_Summaries_welch_rect_area_5_1 #> 176                        catch22_FC_LocalSimple_mean3_stderr != catch22_SP_Summaries_welch_rect_centroid #> 177                        catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_MD_hrv_classic_pnn40 #> 178                   catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_PD_PeriodicityWang_th0_01 #> 179            catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_SB_BinaryStats_diff_longstretch0 #> 180            catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_SB_BinaryStats_mean_longstretch1 #> 181                   catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_SB_MotifThree_quantile_hh #> 182          catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 183      catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 184 catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 185            catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_SP_Summaries_welch_rect_area_5_1 #> 186            catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi != catch22_SP_Summaries_welch_rect_centroid #> 187                                      catch22_MD_hrv_classic_pnn40 != catch22_PD_PeriodicityWang_th0_01 #> 188                               catch22_MD_hrv_classic_pnn40 != catch22_SB_BinaryStats_diff_longstretch0 #> 189                               catch22_MD_hrv_classic_pnn40 != catch22_SB_BinaryStats_mean_longstretch1 #> 190                                      catch22_MD_hrv_classic_pnn40 != catch22_SB_MotifThree_quantile_hh #> 191                             catch22_MD_hrv_classic_pnn40 != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 192                         catch22_MD_hrv_classic_pnn40 != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 193                    catch22_MD_hrv_classic_pnn40 != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 194                               catch22_MD_hrv_classic_pnn40 != catch22_SP_Summaries_welch_rect_area_5_1 #> 195                               catch22_MD_hrv_classic_pnn40 != catch22_SP_Summaries_welch_rect_centroid #> 196                          catch22_PD_PeriodicityWang_th0_01 != catch22_SB_BinaryStats_diff_longstretch0 #> 197                          catch22_PD_PeriodicityWang_th0_01 != catch22_SB_BinaryStats_mean_longstretch1 #> 198                                 catch22_PD_PeriodicityWang_th0_01 != catch22_SB_MotifThree_quantile_hh #> 199                        catch22_PD_PeriodicityWang_th0_01 != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 200                    catch22_PD_PeriodicityWang_th0_01 != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 201               catch22_PD_PeriodicityWang_th0_01 != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 202                          catch22_PD_PeriodicityWang_th0_01 != catch22_SP_Summaries_welch_rect_area_5_1 #> 203                          catch22_PD_PeriodicityWang_th0_01 != catch22_SP_Summaries_welch_rect_centroid #> 204                   catch22_SB_BinaryStats_diff_longstretch0 != catch22_SB_BinaryStats_mean_longstretch1 #> 205                          catch22_SB_BinaryStats_diff_longstretch0 != catch22_SB_MotifThree_quantile_hh #> 206                 catch22_SB_BinaryStats_diff_longstretch0 != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 207             catch22_SB_BinaryStats_diff_longstretch0 != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 208        catch22_SB_BinaryStats_diff_longstretch0 != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 209                   catch22_SB_BinaryStats_diff_longstretch0 != catch22_SP_Summaries_welch_rect_area_5_1 #> 210                   catch22_SB_BinaryStats_diff_longstretch0 != catch22_SP_Summaries_welch_rect_centroid #> 211                          catch22_SB_BinaryStats_mean_longstretch1 != catch22_SB_MotifThree_quantile_hh #> 212                 catch22_SB_BinaryStats_mean_longstretch1 != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 213             catch22_SB_BinaryStats_mean_longstretch1 != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 214        catch22_SB_BinaryStats_mean_longstretch1 != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 215                   catch22_SB_BinaryStats_mean_longstretch1 != catch22_SP_Summaries_welch_rect_area_5_1 #> 216                   catch22_SB_BinaryStats_mean_longstretch1 != catch22_SP_Summaries_welch_rect_centroid #> 217                        catch22_SB_MotifThree_quantile_hh != catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 218                    catch22_SB_MotifThree_quantile_hh != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 219               catch22_SB_MotifThree_quantile_hh != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 220                          catch22_SB_MotifThree_quantile_hh != catch22_SP_Summaries_welch_rect_area_5_1 #> 221                          catch22_SB_MotifThree_quantile_hh != catch22_SP_Summaries_welch_rect_centroid #> 222           catch22_SB_TransitionMatrix_3ac_sumdiagcov != catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 223      catch22_SB_TransitionMatrix_3ac_sumdiagcov != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 224                 catch22_SB_TransitionMatrix_3ac_sumdiagcov != catch22_SP_Summaries_welch_rect_area_5_1 #> 225                 catch22_SB_TransitionMatrix_3ac_sumdiagcov != catch22_SP_Summaries_welch_rect_centroid #> 226  catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 != catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 227             catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 != catch22_SP_Summaries_welch_rect_area_5_1 #> 228             catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 != catch22_SP_Summaries_welch_rect_centroid #> 229        catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 != catch22_SP_Summaries_welch_rect_area_5_1 #> 230        catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 != catch22_SP_Summaries_welch_rect_centroid #> 231                   catch22_SP_Summaries_welch_rect_area_5_1 != catch22_SP_Summaries_welch_rect_centroid #>                                                 names_a #> 1          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 2          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 3          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 4          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 5          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 6          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 7          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 8          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 9          catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 10         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 11         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 12         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 13         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 14         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 15         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 16         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 17         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 18         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 19         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 20         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 21         catch22_CO_Embed2_Dist_tau_d_expfit_meandiff #> 22                               catch22_CO_FirstMin_ac #> 23                               catch22_CO_FirstMin_ac #> 24                               catch22_CO_FirstMin_ac #> 25                               catch22_CO_FirstMin_ac #> 26                               catch22_CO_FirstMin_ac #> 27                               catch22_CO_FirstMin_ac #> 28                               catch22_CO_FirstMin_ac #> 29                               catch22_CO_FirstMin_ac #> 30                               catch22_CO_FirstMin_ac #> 31                               catch22_CO_FirstMin_ac #> 32                               catch22_CO_FirstMin_ac #> 33                               catch22_CO_FirstMin_ac #> 34                               catch22_CO_FirstMin_ac #> 35                               catch22_CO_FirstMin_ac #> 36                               catch22_CO_FirstMin_ac #> 37                               catch22_CO_FirstMin_ac #> 38                               catch22_CO_FirstMin_ac #> 39                               catch22_CO_FirstMin_ac #> 40                               catch22_CO_FirstMin_ac #> 41                               catch22_CO_FirstMin_ac #> 42                     catch22_CO_HistogramAMI_even_2_5 #> 43                     catch22_CO_HistogramAMI_even_2_5 #> 44                     catch22_CO_HistogramAMI_even_2_5 #> 45                     catch22_CO_HistogramAMI_even_2_5 #> 46                     catch22_CO_HistogramAMI_even_2_5 #> 47                     catch22_CO_HistogramAMI_even_2_5 #> 48                     catch22_CO_HistogramAMI_even_2_5 #> 49                     catch22_CO_HistogramAMI_even_2_5 #> 50                     catch22_CO_HistogramAMI_even_2_5 #> 51                     catch22_CO_HistogramAMI_even_2_5 #> 52                     catch22_CO_HistogramAMI_even_2_5 #> 53                     catch22_CO_HistogramAMI_even_2_5 #> 54                     catch22_CO_HistogramAMI_even_2_5 #> 55                     catch22_CO_HistogramAMI_even_2_5 #> 56                     catch22_CO_HistogramAMI_even_2_5 #> 57                     catch22_CO_HistogramAMI_even_2_5 #> 58                     catch22_CO_HistogramAMI_even_2_5 #> 59                     catch22_CO_HistogramAMI_even_2_5 #> 60                     catch22_CO_HistogramAMI_even_2_5 #> 61                                    catch22_CO_f1ecac #> 62                                    catch22_CO_f1ecac #> 63                                    catch22_CO_f1ecac #> 64                                    catch22_CO_f1ecac #> 65                                    catch22_CO_f1ecac #> 66                                    catch22_CO_f1ecac #> 67                                    catch22_CO_f1ecac #> 68                                    catch22_CO_f1ecac #> 69                                    catch22_CO_f1ecac #> 70                                    catch22_CO_f1ecac #> 71                                    catch22_CO_f1ecac #> 72                                    catch22_CO_f1ecac #> 73                                    catch22_CO_f1ecac #> 74                                    catch22_CO_f1ecac #> 75                                    catch22_CO_f1ecac #> 76                                    catch22_CO_f1ecac #> 77                                    catch22_CO_f1ecac #> 78                                    catch22_CO_f1ecac #> 79                                catch22_CO_trev_1_num #> 80                                catch22_CO_trev_1_num #> 81                                catch22_CO_trev_1_num #> 82                                catch22_CO_trev_1_num #> 83                                catch22_CO_trev_1_num #> 84                                catch22_CO_trev_1_num #> 85                                catch22_CO_trev_1_num #> 86                                catch22_CO_trev_1_num #> 87                                catch22_CO_trev_1_num #> 88                                catch22_CO_trev_1_num #> 89                                catch22_CO_trev_1_num #> 90                                catch22_CO_trev_1_num #> 91                                catch22_CO_trev_1_num #> 92                                catch22_CO_trev_1_num #> 93                                catch22_CO_trev_1_num #> 94                                catch22_CO_trev_1_num #> 95                                catch22_CO_trev_1_num #> 96                          catch22_DN_HistogramMode_10 #> 97                          catch22_DN_HistogramMode_10 #> 98                          catch22_DN_HistogramMode_10 #> 99                          catch22_DN_HistogramMode_10 #> 100                         catch22_DN_HistogramMode_10 #> 101                         catch22_DN_HistogramMode_10 #> 102                         catch22_DN_HistogramMode_10 #> 103                         catch22_DN_HistogramMode_10 #> 104                         catch22_DN_HistogramMode_10 #> 105                         catch22_DN_HistogramMode_10 #> 106                         catch22_DN_HistogramMode_10 #> 107                         catch22_DN_HistogramMode_10 #> 108                         catch22_DN_HistogramMode_10 #> 109                         catch22_DN_HistogramMode_10 #> 110                         catch22_DN_HistogramMode_10 #> 111                         catch22_DN_HistogramMode_10 #> 112                          catch22_DN_HistogramMode_5 #> 113                          catch22_DN_HistogramMode_5 #> 114                          catch22_DN_HistogramMode_5 #> 115                          catch22_DN_HistogramMode_5 #> 116                          catch22_DN_HistogramMode_5 #> 117                          catch22_DN_HistogramMode_5 #> 118                          catch22_DN_HistogramMode_5 #> 119                          catch22_DN_HistogramMode_5 #> 120                          catch22_DN_HistogramMode_5 #> 121                          catch22_DN_HistogramMode_5 #> 122                          catch22_DN_HistogramMode_5 #> 123                          catch22_DN_HistogramMode_5 #> 124                          catch22_DN_HistogramMode_5 #> 125                          catch22_DN_HistogramMode_5 #> 126                          catch22_DN_HistogramMode_5 #> 127               catch22_DN_OutlierInclude_n_001_mdrmd #> 128               catch22_DN_OutlierInclude_n_001_mdrmd #> 129               catch22_DN_OutlierInclude_n_001_mdrmd #> 130               catch22_DN_OutlierInclude_n_001_mdrmd #> 131               catch22_DN_OutlierInclude_n_001_mdrmd #> 132               catch22_DN_OutlierInclude_n_001_mdrmd #> 133               catch22_DN_OutlierInclude_n_001_mdrmd #> 134               catch22_DN_OutlierInclude_n_001_mdrmd #> 135               catch22_DN_OutlierInclude_n_001_mdrmd #> 136               catch22_DN_OutlierInclude_n_001_mdrmd #> 137               catch22_DN_OutlierInclude_n_001_mdrmd #> 138               catch22_DN_OutlierInclude_n_001_mdrmd #> 139               catch22_DN_OutlierInclude_n_001_mdrmd #> 140               catch22_DN_OutlierInclude_n_001_mdrmd #> 141               catch22_DN_OutlierInclude_p_001_mdrmd #> 142               catch22_DN_OutlierInclude_p_001_mdrmd #> 143               catch22_DN_OutlierInclude_p_001_mdrmd #> 144               catch22_DN_OutlierInclude_p_001_mdrmd #> 145               catch22_DN_OutlierInclude_p_001_mdrmd #> 146               catch22_DN_OutlierInclude_p_001_mdrmd #> 147               catch22_DN_OutlierInclude_p_001_mdrmd #> 148               catch22_DN_OutlierInclude_p_001_mdrmd #> 149               catch22_DN_OutlierInclude_p_001_mdrmd #> 150               catch22_DN_OutlierInclude_p_001_mdrmd #> 151               catch22_DN_OutlierInclude_p_001_mdrmd #> 152               catch22_DN_OutlierInclude_p_001_mdrmd #> 153               catch22_DN_OutlierInclude_p_001_mdrmd #> 154              catch22_FC_LocalSimple_mean1_tauresrat #> 155              catch22_FC_LocalSimple_mean1_tauresrat #> 156              catch22_FC_LocalSimple_mean1_tauresrat #> 157              catch22_FC_LocalSimple_mean1_tauresrat #> 158              catch22_FC_LocalSimple_mean1_tauresrat #> 159              catch22_FC_LocalSimple_mean1_tauresrat #> 160              catch22_FC_LocalSimple_mean1_tauresrat #> 161              catch22_FC_LocalSimple_mean1_tauresrat #> 162              catch22_FC_LocalSimple_mean1_tauresrat #> 163              catch22_FC_LocalSimple_mean1_tauresrat #> 164              catch22_FC_LocalSimple_mean1_tauresrat #> 165              catch22_FC_LocalSimple_mean1_tauresrat #> 166                 catch22_FC_LocalSimple_mean3_stderr #> 167                 catch22_FC_LocalSimple_mean3_stderr #> 168                 catch22_FC_LocalSimple_mean3_stderr #> 169                 catch22_FC_LocalSimple_mean3_stderr #> 170                 catch22_FC_LocalSimple_mean3_stderr #> 171                 catch22_FC_LocalSimple_mean3_stderr #> 172                 catch22_FC_LocalSimple_mean3_stderr #> 173                 catch22_FC_LocalSimple_mean3_stderr #> 174                 catch22_FC_LocalSimple_mean3_stderr #> 175                 catch22_FC_LocalSimple_mean3_stderr #> 176                 catch22_FC_LocalSimple_mean3_stderr #> 177     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 178     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 179     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 180     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 181     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 182     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 183     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 184     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 185     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 186     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi #> 187                        catch22_MD_hrv_classic_pnn40 #> 188                        catch22_MD_hrv_classic_pnn40 #> 189                        catch22_MD_hrv_classic_pnn40 #> 190                        catch22_MD_hrv_classic_pnn40 #> 191                        catch22_MD_hrv_classic_pnn40 #> 192                        catch22_MD_hrv_classic_pnn40 #> 193                        catch22_MD_hrv_classic_pnn40 #> 194                        catch22_MD_hrv_classic_pnn40 #> 195                        catch22_MD_hrv_classic_pnn40 #> 196                   catch22_PD_PeriodicityWang_th0_01 #> 197                   catch22_PD_PeriodicityWang_th0_01 #> 198                   catch22_PD_PeriodicityWang_th0_01 #> 199                   catch22_PD_PeriodicityWang_th0_01 #> 200                   catch22_PD_PeriodicityWang_th0_01 #> 201                   catch22_PD_PeriodicityWang_th0_01 #> 202                   catch22_PD_PeriodicityWang_th0_01 #> 203                   catch22_PD_PeriodicityWang_th0_01 #> 204            catch22_SB_BinaryStats_diff_longstretch0 #> 205            catch22_SB_BinaryStats_diff_longstretch0 #> 206            catch22_SB_BinaryStats_diff_longstretch0 #> 207            catch22_SB_BinaryStats_diff_longstretch0 #> 208            catch22_SB_BinaryStats_diff_longstretch0 #> 209            catch22_SB_BinaryStats_diff_longstretch0 #> 210            catch22_SB_BinaryStats_diff_longstretch0 #> 211            catch22_SB_BinaryStats_mean_longstretch1 #> 212            catch22_SB_BinaryStats_mean_longstretch1 #> 213            catch22_SB_BinaryStats_mean_longstretch1 #> 214            catch22_SB_BinaryStats_mean_longstretch1 #> 215            catch22_SB_BinaryStats_mean_longstretch1 #> 216            catch22_SB_BinaryStats_mean_longstretch1 #> 217                   catch22_SB_MotifThree_quantile_hh #> 218                   catch22_SB_MotifThree_quantile_hh #> 219                   catch22_SB_MotifThree_quantile_hh #> 220                   catch22_SB_MotifThree_quantile_hh #> 221                   catch22_SB_MotifThree_quantile_hh #> 222          catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 223          catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 224          catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 225          catch22_SB_TransitionMatrix_3ac_sumdiagcov #> 226      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 227      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 228      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 #> 229 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 230 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 #> 231            catch22_SP_Summaries_welch_rect_area_5_1 #>                                                 names_b   metric names_a_mean #> 1                                catch22_CO_FirstMin_ac accuracy   0.32666667 #> 2                      catch22_CO_HistogramAMI_even_2_5 accuracy   0.32666667 #> 3                                     catch22_CO_f1ecac accuracy   0.32666667 #> 4                                 catch22_CO_trev_1_num accuracy   0.32666667 #> 5                           catch22_DN_HistogramMode_10 accuracy   0.32666667 #> 6                            catch22_DN_HistogramMode_5 accuracy   0.32666667 #> 7                 catch22_DN_OutlierInclude_n_001_mdrmd accuracy   0.32666667 #> 8                 catch22_DN_OutlierInclude_p_001_mdrmd accuracy   0.32666667 #> 9                catch22_FC_LocalSimple_mean1_tauresrat accuracy   0.32666667 #> 10                  catch22_FC_LocalSimple_mean3_stderr accuracy   0.32666667 #> 11      catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.32666667 #> 12                         catch22_MD_hrv_classic_pnn40 accuracy   0.32666667 #> 13                    catch22_PD_PeriodicityWang_th0_01 accuracy   0.32666667 #> 14             catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.32666667 #> 15             catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.32666667 #> 16                    catch22_SB_MotifThree_quantile_hh accuracy   0.32666667 #> 17           catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.32666667 #> 18       catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.32666667 #> 19  catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.32666667 #> 20             catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.32666667 #> 21             catch22_SP_Summaries_welch_rect_centroid accuracy   0.32666667 #> 22                     catch22_CO_HistogramAMI_even_2_5 accuracy   0.31777778 #> 23                                    catch22_CO_f1ecac accuracy   0.31777778 #> 24                                catch22_CO_trev_1_num accuracy   0.31777778 #> 25                          catch22_DN_HistogramMode_10 accuracy   0.31777778 #> 26                           catch22_DN_HistogramMode_5 accuracy   0.31777778 #> 27                catch22_DN_OutlierInclude_n_001_mdrmd accuracy   0.31777778 #> 28                catch22_DN_OutlierInclude_p_001_mdrmd accuracy   0.31777778 #> 29               catch22_FC_LocalSimple_mean1_tauresrat accuracy   0.31777778 #> 30                  catch22_FC_LocalSimple_mean3_stderr accuracy   0.31777778 #> 31      catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.31777778 #> 32                         catch22_MD_hrv_classic_pnn40 accuracy   0.31777778 #> 33                    catch22_PD_PeriodicityWang_th0_01 accuracy   0.31777778 #> 34             catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.31777778 #> 35             catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.31777778 #> 36                    catch22_SB_MotifThree_quantile_hh accuracy   0.31777778 #> 37           catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.31777778 #> 38       catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.31777778 #> 39  catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.31777778 #> 40             catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.31777778 #> 41             catch22_SP_Summaries_welch_rect_centroid accuracy   0.31777778 #> 42                                    catch22_CO_f1ecac accuracy   0.35777778 #> 43                                catch22_CO_trev_1_num accuracy   0.35777778 #> 44                          catch22_DN_HistogramMode_10 accuracy   0.35777778 #> 45                           catch22_DN_HistogramMode_5 accuracy   0.35777778 #> 46                catch22_DN_OutlierInclude_n_001_mdrmd accuracy   0.35777778 #> 47                catch22_DN_OutlierInclude_p_001_mdrmd accuracy   0.35777778 #> 48               catch22_FC_LocalSimple_mean1_tauresrat accuracy   0.35777778 #> 49                  catch22_FC_LocalSimple_mean3_stderr accuracy   0.35777778 #> 50      catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.35777778 #> 51                         catch22_MD_hrv_classic_pnn40 accuracy   0.35777778 #> 52                    catch22_PD_PeriodicityWang_th0_01 accuracy   0.35777778 #> 53             catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.35777778 #> 54             catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.35777778 #> 55                    catch22_SB_MotifThree_quantile_hh accuracy   0.35777778 #> 56           catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.35777778 #> 57       catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.35777778 #> 58  catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.35777778 #> 59             catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.35777778 #> 60             catch22_SP_Summaries_welch_rect_centroid accuracy   0.35777778 #> 61                                catch22_CO_trev_1_num accuracy   0.34444444 #> 62                          catch22_DN_HistogramMode_10 accuracy   0.34444444 #> 63                           catch22_DN_HistogramMode_5 accuracy   0.34444444 #> 64                catch22_DN_OutlierInclude_n_001_mdrmd accuracy   0.34444444 #> 65                catch22_DN_OutlierInclude_p_001_mdrmd accuracy   0.34444444 #> 66               catch22_FC_LocalSimple_mean1_tauresrat accuracy   0.34444444 #> 67                  catch22_FC_LocalSimple_mean3_stderr accuracy   0.34444444 #> 68      catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.34444444 #> 69                         catch22_MD_hrv_classic_pnn40 accuracy   0.34444444 #> 70                    catch22_PD_PeriodicityWang_th0_01 accuracy   0.34444444 #> 71             catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.34444444 #> 72             catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.34444444 #> 73                    catch22_SB_MotifThree_quantile_hh accuracy   0.34444444 #> 74           catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.34444444 #> 75       catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.34444444 #> 76  catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.34444444 #> 77             catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.34444444 #> 78             catch22_SP_Summaries_welch_rect_centroid accuracy   0.34444444 #> 79                          catch22_DN_HistogramMode_10 accuracy   0.10814815 #> 80                           catch22_DN_HistogramMode_5 accuracy   0.10814815 #> 81                catch22_DN_OutlierInclude_n_001_mdrmd accuracy   0.10814815 #> 82                catch22_DN_OutlierInclude_p_001_mdrmd accuracy   0.10814815 #> 83               catch22_FC_LocalSimple_mean1_tauresrat accuracy   0.10814815 #> 84                  catch22_FC_LocalSimple_mean3_stderr accuracy   0.10814815 #> 85      catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.10814815 #> 86                         catch22_MD_hrv_classic_pnn40 accuracy   0.10814815 #> 87                    catch22_PD_PeriodicityWang_th0_01 accuracy   0.10814815 #> 88             catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.10814815 #> 89             catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.10814815 #> 90                    catch22_SB_MotifThree_quantile_hh accuracy   0.10814815 #> 91           catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.10814815 #> 92       catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.10814815 #> 93  catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.10814815 #> 94             catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.10814815 #> 95             catch22_SP_Summaries_welch_rect_centroid accuracy   0.10814815 #> 96                           catch22_DN_HistogramMode_5 accuracy   0.06444444 #> 97                catch22_DN_OutlierInclude_n_001_mdrmd accuracy   0.06444444 #> 98                catch22_DN_OutlierInclude_p_001_mdrmd accuracy   0.06444444 #> 99               catch22_FC_LocalSimple_mean1_tauresrat accuracy   0.06444444 #> 100                 catch22_FC_LocalSimple_mean3_stderr accuracy   0.06444444 #> 101     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.06444444 #> 102                        catch22_MD_hrv_classic_pnn40 accuracy   0.06444444 #> 103                   catch22_PD_PeriodicityWang_th0_01 accuracy   0.06444444 #> 104            catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.06444444 #> 105            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.06444444 #> 106                   catch22_SB_MotifThree_quantile_hh accuracy   0.06444444 #> 107          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.06444444 #> 108      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.06444444 #> 109 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.06444444 #> 110            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.06444444 #> 111            catch22_SP_Summaries_welch_rect_centroid accuracy   0.06444444 #> 112               catch22_DN_OutlierInclude_n_001_mdrmd accuracy   0.06888889 #> 113               catch22_DN_OutlierInclude_p_001_mdrmd accuracy   0.06888889 #> 114              catch22_FC_LocalSimple_mean1_tauresrat accuracy   0.06888889 #> 115                 catch22_FC_LocalSimple_mean3_stderr accuracy   0.06888889 #> 116     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.06888889 #> 117                        catch22_MD_hrv_classic_pnn40 accuracy   0.06888889 #> 118                   catch22_PD_PeriodicityWang_th0_01 accuracy   0.06888889 #> 119            catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.06888889 #> 120            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.06888889 #> 121                   catch22_SB_MotifThree_quantile_hh accuracy   0.06888889 #> 122          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.06888889 #> 123      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.06888889 #> 124 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.06888889 #> 125            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.06888889 #> 126            catch22_SP_Summaries_welch_rect_centroid accuracy   0.06888889 #> 127               catch22_DN_OutlierInclude_p_001_mdrmd accuracy   0.06370370 #> 128              catch22_FC_LocalSimple_mean1_tauresrat accuracy   0.06370370 #> 129                 catch22_FC_LocalSimple_mean3_stderr accuracy   0.06370370 #> 130     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.06370370 #> 131                        catch22_MD_hrv_classic_pnn40 accuracy   0.06370370 #> 132                   catch22_PD_PeriodicityWang_th0_01 accuracy   0.06370370 #> 133            catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.06370370 #> 134            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.06370370 #> 135                   catch22_SB_MotifThree_quantile_hh accuracy   0.06370370 #> 136          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.06370370 #> 137      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.06370370 #> 138 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.06370370 #> 139            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.06370370 #> 140            catch22_SP_Summaries_welch_rect_centroid accuracy   0.06370370 #> 141              catch22_FC_LocalSimple_mean1_tauresrat accuracy   0.08000000 #> 142                 catch22_FC_LocalSimple_mean3_stderr accuracy   0.08000000 #> 143     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.08000000 #> 144                        catch22_MD_hrv_classic_pnn40 accuracy   0.08000000 #> 145                   catch22_PD_PeriodicityWang_th0_01 accuracy   0.08000000 #> 146            catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.08000000 #> 147            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.08000000 #> 148                   catch22_SB_MotifThree_quantile_hh accuracy   0.08000000 #> 149          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.08000000 #> 150      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.08000000 #> 151 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.08000000 #> 152            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.08000000 #> 153            catch22_SP_Summaries_welch_rect_centroid accuracy   0.08000000 #> 154                 catch22_FC_LocalSimple_mean3_stderr accuracy   0.38000000 #> 155     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.38000000 #> 156                        catch22_MD_hrv_classic_pnn40 accuracy   0.38000000 #> 157                   catch22_PD_PeriodicityWang_th0_01 accuracy   0.38000000 #> 158            catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.38000000 #> 159            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.38000000 #> 160                   catch22_SB_MotifThree_quantile_hh accuracy   0.38000000 #> 161          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.38000000 #> 162      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.38000000 #> 163 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.38000000 #> 164            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.38000000 #> 165            catch22_SP_Summaries_welch_rect_centroid accuracy   0.38000000 #> 166     catch22_IN_AutoMutualInfoStats_40_gaussian_fmmi accuracy   0.56296296 #> 167                        catch22_MD_hrv_classic_pnn40 accuracy   0.56296296 #> 168                   catch22_PD_PeriodicityWang_th0_01 accuracy   0.56296296 #> 169            catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.56296296 #> 170            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.56296296 #> 171                   catch22_SB_MotifThree_quantile_hh accuracy   0.56296296 #> 172          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.56296296 #> 173      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.56296296 #> 174 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.56296296 #> 175            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.56296296 #> 176            catch22_SP_Summaries_welch_rect_centroid accuracy   0.56296296 #> 177                        catch22_MD_hrv_classic_pnn40 accuracy   0.23481481 #> 178                   catch22_PD_PeriodicityWang_th0_01 accuracy   0.23481481 #> 179            catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.23481481 #> 180            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.23481481 #> 181                   catch22_SB_MotifThree_quantile_hh accuracy   0.23481481 #> 182          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.23481481 #> 183      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.23481481 #> 184 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.23481481 #> 185            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.23481481 #> 186            catch22_SP_Summaries_welch_rect_centroid accuracy   0.23481481 #> 187                   catch22_PD_PeriodicityWang_th0_01 accuracy   0.20370370 #> 188            catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.20370370 #> 189            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.20370370 #> 190                   catch22_SB_MotifThree_quantile_hh accuracy   0.20370370 #> 191          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.20370370 #> 192      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.20370370 #> 193 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.20370370 #> 194            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.20370370 #> 195            catch22_SP_Summaries_welch_rect_centroid accuracy   0.20370370 #> 196            catch22_SB_BinaryStats_diff_longstretch0 accuracy   0.23407407 #> 197            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.23407407 #> 198                   catch22_SB_MotifThree_quantile_hh accuracy   0.23407407 #> 199          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.23407407 #> 200      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.23407407 #> 201 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.23407407 #> 202            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.23407407 #> 203            catch22_SP_Summaries_welch_rect_centroid accuracy   0.23407407 #> 204            catch22_SB_BinaryStats_mean_longstretch1 accuracy   0.20222222 #> 205                   catch22_SB_MotifThree_quantile_hh accuracy   0.20222222 #> 206          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.20222222 #> 207      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.20222222 #> 208 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.20222222 #> 209            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.20222222 #> 210            catch22_SP_Summaries_welch_rect_centroid accuracy   0.20222222 #> 211                   catch22_SB_MotifThree_quantile_hh accuracy   0.46518519 #> 212          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.46518519 #> 213      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.46518519 #> 214 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.46518519 #> 215            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.46518519 #> 216            catch22_SP_Summaries_welch_rect_centroid accuracy   0.46518519 #> 217          catch22_SB_TransitionMatrix_3ac_sumdiagcov accuracy   0.34888889 #> 218      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.34888889 #> 219 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.34888889 #> 220            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.34888889 #> 221            catch22_SP_Summaries_welch_rect_centroid accuracy   0.34888889 #> 222      catch22_SC_FluctAnal_2_dfa_50_1_2_logi_prop_r1 accuracy   0.24888889 #> 223 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.24888889 #> 224            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.24888889 #> 225            catch22_SP_Summaries_welch_rect_centroid accuracy   0.24888889 #> 226 catch22_SC_FluctAnal_2_rsrangefit_50_1_logi_prop_r1 accuracy   0.08370370 #> 227            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.08370370 #> 228            catch22_SP_Summaries_welch_rect_centroid accuracy   0.08370370 #> 229            catch22_SP_Summaries_welch_rect_area_5_1 accuracy   0.28296296 #> 230            catch22_SP_Summaries_welch_rect_centroid accuracy   0.28296296 #> 231            catch22_SP_Summaries_welch_rect_centroid accuracy   0.63851852 #>     names_b_mean   t_statistic      p.value #> 1     0.31777778   0.280182339 3.906633e-01 #> 2     0.35777778  -0.500940956 3.100969e-01 #> 3     0.34444444  -0.887567401 1.910379e-01 #> 4     0.10814815   5.547883463 2.770485e-06 #> 5     0.06444444  11.648353522 9.298260e-13 #> 6     0.06888889   9.573883988 8.779501e-11 #> 7     0.06370370   9.432755248 1.220350e-10 #> 8     0.08000000   6.896592297 7.041388e-08 #> 9     0.38000000  -1.069972640 1.467284e-01 #> 10    0.56296296  -6.783105780 9.531318e-08 #> 11    0.23481481   1.228938483 1.144871e-01 #> 12    0.20370370   2.350969361 1.286715e-02 #> 13    0.23407407   2.324580179 1.365039e-02 #> 14    0.20222222   3.421037904 9.373813e-04 #> 15    0.46518519  -1.708957884 4.907081e-02 #> 16    0.34888889  -0.505105895 3.086509e-01 #> 17    0.24888889   2.291005721 1.470937e-02 #> 18    0.08370370   6.739180953 1.072026e-07 #> 19    0.28296296   1.553689350 6.555257e-02 #> 20    0.63851852  -7.256278078 2.722401e-08 #> 21    0.45333333  -2.776267204 4.765550e-03 #> 22    0.35777778  -0.683214080 2.499470e-01 #> 23    0.34444444  -1.047939272 1.516612e-01 #> 24    0.10814815   5.064526047 1.060052e-05 #> 25    0.06444444   7.058754705 4.579432e-08 #> 26    0.06888889  10.360002977 1.470288e-11 #> 27    0.06370370   8.291185010 1.928158e-09 #> 28    0.08000000   6.961547534 5.924685e-08 #> 29    0.38000000  -1.422074546 8.283582e-02 #> 30    0.56296296  -7.365973750 2.043467e-08 #> 31    0.23481481   1.085659734 1.432861e-01 #> 32    0.20370370   2.140113495 2.044337e-02 #> 33    0.23407407   2.087574954 2.286579e-02 #> 34    0.20222222   3.064618667 2.338624e-03 #> 35    0.46518519  -1.681072511 5.174492e-02 #> 36    0.34888889  -0.679311063 2.511636e-01 #> 37    0.24888889   1.670041395 5.283590e-02 #> 38    0.08370370   5.899483338 1.049650e-06 #> 39    0.28296296   1.115401422 1.369182e-01 #> 40    0.63851852  -6.775128389 9.736847e-08 #> 41    0.45333333  -3.738938429 4.043965e-04 #> 42    0.34444444   0.245816988 4.037777e-01 #> 43    0.10814815   4.235947047 1.050469e-04 #> 44    0.06444444   5.116397460 9.177089e-06 #> 45    0.06888889   5.623109001 2.249781e-06 #> 46    0.06370370   5.553276362 2.729420e-06 #> 47    0.08000000   5.056578226 1.083733e-05 #> 48    0.38000000  -0.438432108 3.321610e-01 #> 49    0.56296296  -3.535933980 6.934300e-04 #> 50    0.23481481   1.559162499 6.490278e-02 #> 51    0.20370370   2.287300666 1.483068e-02 #> 52    0.23407407   1.824101062 3.922873e-02 #> 53    0.20222222   2.704567935 5.662815e-03 #> 54    0.46518519  -1.204137981 1.191364e-01 #> 55    0.34888889   0.147927900 4.417117e-01 #> 56    0.24888889   1.666249267 5.321536e-02 #> 57    0.08370370   4.834255465 2.010259e-05 #> 58    0.28296296   1.423558047 8.262258e-02 #> 59    0.63851852  -4.384800532 6.976727e-05 #> 60    0.45333333  -1.341605759 9.506787e-02 #> 61    0.10814815   7.098929385 4.118294e-08 #> 62    0.06444444  13.296858712 3.599927e-14 #> 63    0.06888889  15.839309358 4.089875e-16 #> 64    0.06370370  12.435048222 1.897907e-13 #> 65    0.08000000  10.406212943 1.326950e-11 #> 66    0.38000000  -0.918288118 1.830214e-01 #> 67    0.56296296  -7.078047704 4.351771e-08 #> 68    0.23481481   1.535041432 6.780645e-02 #> 69    0.20370370   2.869986307 3.792858e-03 #> 70    0.23407407   2.618513298 6.947556e-03 #> 71    0.20222222   4.075732816 1.627891e-04 #> 72    0.46518519  -1.539942113 6.720811e-02 #> 73    0.34888889  -0.107688939 4.574920e-01 #> 74    0.24888889   2.607864161 7.124153e-03 #> 75    0.08370370   8.802276745 5.486343e-10 #> 76    0.28296296   2.704632673 5.661938e-03 #> 77    0.63851852  -7.500239788 1.441198e-08 #> 78    0.45333333  -2.445191635 1.039306e-02 #> 79    0.06444444   1.130277926 1.338105e-01 #> 80    0.06888889   1.037552621 1.540263e-01 #> 81    0.06370370   1.441822821 8.003265e-02 #> 82    0.08000000   0.882118415 1.924831e-01 #> 83    0.38000000  -5.009439150 1.235470e-05 #> 84    0.56296296 -12.162795300 3.263280e-13 #> 85    0.23481481  -1.823226948 3.929657e-02 #> 86    0.20370370  -1.745580618 4.573615e-02 #> 87    0.23407407  -2.398380831 1.156196e-02 #> 88    0.20222222  -1.822829809 3.932742e-02 #> 89    0.46518519  -4.474353294 5.449500e-05 #> 90    0.34888889  -4.479178765 5.377351e-05 #> 91    0.24888889  -3.079971898 2.249954e-03 #> 92    0.08370370   0.539431169 2.968537e-01 #> 93    0.28296296  -5.595688033 2.427088e-06 #> 94    0.63851852  -9.950138069 3.695760e-11 #> 95    0.45333333  -6.010096050 7.746418e-07 #> 96    0.06888889  -0.185000053 4.272584e-01 #> 97    0.06370370   0.026333718 4.895858e-01 #> 98    0.08000000  -0.485671414 3.154248e-01 #> 99    0.38000000  -6.901744907 6.945478e-08 #> 100   0.56296296 -16.268126856 2.033378e-16 #> 101   0.23481481  -2.459627478 1.005506e-02 #> 102   0.20370370  -2.935869195 3.224624e-03 #> 103   0.23407407  -3.739055833 4.042695e-04 #> 104   0.20222222  -3.747916088 3.947964e-04 #> 105   0.46518519  -5.488546720 3.265480e-06 #> 106   0.34888889  -6.687937282 1.229908e-07 #> 107   0.24888889  -4.480677932 5.355129e-05 #> 108   0.08370370  -0.627898316 2.674921e-01 #> 109   0.28296296  -8.432132546 1.358699e-09 #> 110   0.63851852 -15.891132429 3.755645e-16 #> 111   0.45333333  -8.210351221 2.359568e-09 #> 112   0.06370370   0.245427862 4.039269e-01 #> 113   0.08000000  -0.505105895 3.086509e-01 #> 114   0.38000000  -8.190301493 2.481074e-09 #> 115   0.56296296 -16.433976688 1.558010e-16 #> 116   0.23481481  -2.374652880 1.219926e-02 #> 117   0.20370370  -2.911296555 3.426441e-03 #> 118   0.23407407  -3.990774942 2.051050e-04 #> 119   0.20222222  -4.103499687 1.509188e-04 #> 120   0.46518519  -5.137429893 8.655954e-06 #> 121   0.34888889  -6.507908746 1.997072e-07 #> 122   0.24888889  -4.363656550 7.395154e-05 #> 123   0.08370370  -0.516992366 3.045412e-01 #> 124   0.28296296  -9.170819332 2.264287e-10 #> 125   0.63851852 -13.650211894 1.862210e-14 #> 126   0.45333333  -8.355877585 1.641454e-09 #> 127   0.08000000  -0.735932011 2.338417e-01 #> 128   0.38000000  -7.345710004 2.154445e-08 #> 129   0.56296296 -14.939792877 1.863042e-15 #> 130   0.23481481  -2.462955702 9.978583e-03 #> 131   0.20370370  -3.177836673 1.755749e-03 #> 132   0.23407407  -3.792859600 3.499834e-04 #> 133   0.20222222  -3.616620275 5.601907e-04 #> 134   0.46518519  -5.253817643 6.263984e-06 #> 135   0.34888889  -7.593138843 1.133327e-08 #> 136   0.24888889  -4.977395596 1.350564e-05 #> 137   0.08370370  -0.575231844 2.847856e-01 #> 138   0.28296296  -9.318024885 1.598028e-10 #> 139   0.63851852 -12.643343099 1.260661e-13 #> 140   0.45333333  -8.227065489 2.262927e-09 #> 141   0.38000000  -6.772907030 9.794874e-08 #> 142   0.56296296 -12.282677383 2.567826e-13 #> 143   0.23481481  -2.339016085 1.321672e-02 #> 144   0.20370370  -2.480278719 9.589068e-03 #> 145   0.23407407  -3.412255977 9.591116e-04 #> 146   0.20222222  -2.892067651 3.592633e-03 #> 147   0.46518519  -4.718808249 2.769679e-05 #> 148   0.34888889  -5.834592302 1.254907e-06 #> 149   0.24888889  -3.925405275 2.448533e-04 #> 150   0.08370370  -0.101168440 4.600565e-01 #> 151   0.28296296  -8.625468981 8.441789e-10 #> 152   0.63851852 -11.612374803 1.001622e-12 #> 153   0.45333333  -7.247486088 2.785890e-08 #> 154   0.56296296  -4.420275384 6.326715e-05 #> 155   0.23481481   1.723097157 4.775989e-02 #> 156   0.20370370   3.034133716 2.524641e-03 #> 157   0.23407407   2.404196616 1.141047e-02 #> 158   0.20222222   3.717038764 4.287797e-04 #> 159   0.46518519  -1.131397105 1.335788e-01 #> 160   0.34888889   0.709733812 2.417687e-01 #> 161   0.24888889   2.392291132 1.172256e-02 #> 162   0.08370370   5.872638644 1.130106e-06 #> 163   0.28296296   2.257891753 1.582609e-02 #> 164   0.63851852  -4.950668035 1.454716e-05 #> 165   0.45333333  -1.455323539 7.816010e-02 #> 166   0.23481481   4.476622124 5.415459e-05 #> 167   0.20370370   6.897695558 7.020739e-08 #> 168   0.23407407   5.930206010 9.646309e-07 #> 169   0.20222222   8.541593578 1.037149e-09 #> 170   0.46518519   1.390028797 8.754928e-02 #> 171   0.34888889   4.493829904 5.164044e-05 #> 172   0.24888889   6.908218394 6.826859e-08 #> 173   0.08370370  12.989273534 6.456990e-14 #> 174   0.28296296   8.532447278 1.060754e-09 #> 175   0.63851852  -1.756102360 4.481429e-02 #> 176   0.45333333   2.470978072 9.796425e-03 #> 177   0.20370370   0.362239811 3.598997e-01 #> 178   0.23407407   0.008606641 4.965960e-01 #> 179   0.20222222   0.452018235 3.273094e-01 #> 180   0.46518519  -2.042484534 2.514424e-02 #> 181   0.34888889  -1.318394781 9.884498e-02 #> 182   0.24888889  -0.170558885 4.328775e-01 #> 183   0.08370370   1.917888716 3.251032e-02 #> 184   0.28296296  -0.673825002 2.528791e-01 #> 185   0.63851852  -5.649763474 2.089924e-06 #> 186   0.45333333  -2.752561037 5.046327e-03 #> 187   0.23407407  -0.503258570 3.092919e-01 #> 188   0.20222222   0.025630859 4.898637e-01 #> 189   0.46518519  -3.058555809 2.374548e-03 #> 190   0.34888889  -2.658712959 6.316921e-03 #> 191   0.24888889  -0.625076983 2.684042e-01 #> 192   0.08370370   2.642461895 6.565159e-03 #> 193   0.28296296  -1.674223413 5.242006e-02 #> 194   0.63851852  -6.411660620 2.591164e-07 #> 195   0.45333333  -4.093258537 1.551943e-04 #> 196   0.20222222   0.566963514 2.875508e-01 #> 197   0.46518519  -2.480850448 9.576454e-03 #> 198   0.34888889  -1.888023105 3.453258e-02 #> 199   0.24888889  -0.304338899 3.815215e-01 #> 200   0.08370370   2.993846081 2.792127e-03 #> 201   0.28296296  -1.197008658 1.204985e-01 #> 202   0.63851852  -6.112585957 5.850365e-07 #> 203   0.45333333  -4.139179663 1.369095e-04 #> 204   0.46518519  -2.848973664 3.993123e-03 #> 205   0.34888889  -3.315662529 1.232569e-03 #> 206   0.24888889  -0.888717180 1.907339e-01 #> 207   0.08370370   2.710374699 5.584648e-03 #> 208   0.28296296  -2.063990103 2.403367e-02 #> 209   0.63851852  -8.355138891 1.644469e-09 #> 210   0.45333333  -4.757915946 2.484863e-05 #> 211   0.34888889   1.408627147 8.478871e-02 #> 212   0.24888889   2.565791554 7.863361e-03 #> 213   0.08370370   4.832378147 2.020768e-05 #> 214   0.28296296   2.367045414 1.241027e-02 #> 215   0.63851852  -2.292795770 1.465108e-02 #> 216   0.45333333   0.132973366 4.475664e-01 #> 217   0.24888889   2.111233171 2.174509e-02 #> 218   0.08370370   5.234347146 6.612156e-06 #> 219   0.28296296   1.440903462 8.016145e-02 #> 220   0.63851852  -5.734561380 1.653478e-06 #> 221   0.45333333  -2.004442831 2.721986e-02 #> 222   0.08370370   3.311988948 1.244327e-03 #> 223   0.28296296  -0.889116810 1.906282e-01 #> 224   0.63851852  -8.292377963 1.922433e-09 #> 225   0.45333333  -3.796540202 3.465419e-04 #> 226   0.28296296  -5.804709147 1.362606e-06 #> 227   0.63851852 -10.424887261 1.273167e-11 #> 228   0.45333333  -6.278583909 3.719369e-07 #> 229   0.63851852  -7.869910029 5.573885e-09 #> 230   0.45333333  -3.526179790 7.114845e-04 #> 231   0.45333333   3.461371789 8.435391e-04 # }"},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an object containing results from top-performing features on a classification task — compute_top_features","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"Return object containing results top-performing features classification task","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"","code":"compute_top_features(   data,   num_features = 40,   normalise_violin_plots = FALSE,   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   cor_method = c(\"pearson\", \"spearman\"),   test_method = \"gaussprRadial\",   clust_method = c(\"average\", \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"mcquitty\",     \"median\", \"centroid\"),   use_balanced_accuracy = FALSE,   use_k_fold = FALSE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"ModelFreeShuffles\", \"NullModelFits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 50,   pool_empirical_null = FALSE,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"data feature_calculations object containing raw feature matrix produced calculate_features num_features integer denoting number top features retain explore. Defaults 40 normalise_violin_plots Boolean whether normalise features plotting. Defaults FALSE method rescaling/normalising method apply violin plots. Defaults \"z-score\" cor_method string denoting correlation method use. Defaults \"pearson\" test_method string specifying algorithm use quantifying class separation. Defaults \"gaussprRadial\". either \"t-test\", \"wilcox\", \"binomial logistic\" two-class problems obtain exact statistics, valid caret classification model everything else clust_method string denoting hierarchical clustering method use pairwise correlation plot. Defaults \"average\" use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates caret model specified test_method. Defaults  FALSE num_folds integer specifying number k-folds perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values caret model specified test_method. Defaults FALSE null_testing_method string specifying type statistical method use calculate p-values. Defaults \"ModelFreeShuffles\" p_value_method string specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 50 pool_empirical_null Boolean specifying whether use pooled empirical null distribution features features' individual empirical null distribution caret model specified test_method use_empirical_null TRUE. Defaults FALSE seed integer denoting fixed number R's random number generator ensure reproducibility","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"object class list containing data.frame results, ggplot feature x feature matrix plot, ggplot violin plot","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"","code":"# \\donttest{ featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.    compute_top_features(featMat,   num_features = 10,   normalise_violin_plots = FALSE,   method = \"RobustSigmoid\",   cor_method = \"pearson\",   test_method = \"gaussprRadial\",   clust_method = \"average\",   use_balanced_accuracy = FALSE,   use_k_fold = FALSE,   num_folds = 10,   use_empirical_null = TRUE,   null_testing_method = \"ModelFreeShuffles\",   p_value_method = \"gaussian\",   num_permutations = 100,   pool_empirical_null = FALSE,   seed = 123)  #> This will take a while. Great reason to go grab a coffee and relax ^_^ #>  #> Selecting top features using p-value. #> $ResultsTable #>                                         feature  accuracy p_value_accuracy #> 1                             catch22_co_f1ecac 0.7666667     1.010919e-96 #> 2      catch22_sp_summaries_welch_rect_area_5_1 0.7055556     1.988011e-78 #> 3          catch22_fc_local_simple_mean3_stderr 0.7055556     1.988011e-78 #> 4      catch22_sp_summaries_welch_rect_centroid 0.6833333     2.923146e-72 #> 5                       catch22_co_first_min_ac 0.6222222     1.240886e-56 #> 6     catch22_sb_binary_stats_mean_longstretch1 0.6166667     2.615618e-55 #> 7                         catch22_co_trev_1_num 0.6055556     1.039544e-52 #> 8            catch22_sb_motif_three_quantile_hh 0.6055556     1.039544e-52 #> 9  catch22_co_embed2_dist_tau_d_expfit_meandiff 0.5611111     5.869639e-43 #> 10            catch22_co_histogram_ami_even_2_5 0.5555556     8.222765e-42 #>    classifier_name               statistic_name #> 1    gaussprRadial Mean classification accuracy #> 2    gaussprRadial Mean classification accuracy #> 3    gaussprRadial Mean classification accuracy #> 4    gaussprRadial Mean classification accuracy #> 5    gaussprRadial Mean classification accuracy #> 6    gaussprRadial Mean classification accuracy #> 7    gaussprRadial Mean classification accuracy #> 8    gaussprRadial Mean classification accuracy #> 9    gaussprRadial Mean classification accuracy #> 10   gaussprRadial Mean classification accuracy #>  #> $FeatureFeatureCorrelationPlot  #>  #> $ViolinPlots  #>  # }"},{"path":"https://hendersontrent.github.io/theft/reference/demo_multi_outputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Computed values for multi-feature classification results for use in vignette — demo_multi_outputs","title":"Computed values for multi-feature classification results for use in vignette — demo_multi_outputs","text":"Format :","code":""},{"path":"https://hendersontrent.github.io/theft/reference/demo_multi_outputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computed values for multi-feature classification results for use in vignette — demo_multi_outputs","text":"","code":"demo_multi_outputs"},{"path":"https://hendersontrent.github.io/theft/reference/demo_multi_outputs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Computed values for multi-feature classification results for use in vignette — demo_multi_outputs","text":"list object FeatureSetResultsPlot ggplot comparing feature set classification accuracy TestStatistics data.frame test statistics RawClassificationResults data.frame raw classification accuracy","code":""},{"path":"https://hendersontrent.github.io/theft/reference/demo_outputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Computed values for top features results for use in vignette — demo_outputs","title":"Computed values for top features results for use in vignette — demo_outputs","text":"Format :","code":""},{"path":"https://hendersontrent.github.io/theft/reference/demo_outputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computed values for top features results for use in vignette — demo_outputs","text":"","code":"demo_outputs"},{"path":"https://hendersontrent.github.io/theft/reference/demo_outputs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Computed values for top features results for use in vignette — demo_outputs","text":"list object ResultsTable data.frame results top features FeatureFeatureCorrelationPlot ggplot heatmap feature-feature correlation matrix ViolinPlots ggplot distributions rendered violins top features","code":""},{"path":"https://hendersontrent.github.io/theft/reference/feature_list.html","id":null,"dir":"Reference","previous_headings":"","what":"All features available in theft in tidy format — feature_list","title":"All features available in theft in tidy format — feature_list","text":"variables include:","code":""},{"path":"https://hendersontrent.github.io/theft/reference/feature_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All features available in theft in tidy format — feature_list","text":"","code":"feature_list"},{"path":"https://hendersontrent.github.io/theft/reference/feature_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All features available in theft in tidy format — feature_list","text":"tidy data frame 2 variables: feature_set Name set feature feature Name feature","code":""},{"path":"https://hendersontrent.github.io/theft/reference/filter_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicate features that exist in multiple feature sets and retain a reproducible random selection of one of them — filter_duplicates","title":"Remove duplicate features that exist in multiple feature sets and retain a reproducible random selection of one of them — filter_duplicates","text":"Remove duplicate features exist multiple feature sets retain reproducible random selection one ","code":""},{"path":"https://hendersontrent.github.io/theft/reference/filter_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicate features that exist in multiple feature sets and retain a reproducible random selection of one of them — filter_duplicates","text":"","code":"filter_duplicates(data, preference = NULL, seed = 123)"},{"path":"https://hendersontrent.github.io/theft/reference/filter_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicate features that exist in multiple feature sets and retain a reproducible random selection of one of them — filter_duplicates","text":"data feature_calculations object containing raw feature matrix produced calculate_features preference deprecated. use seed integer denoting fix R's pseudo-random number generator ensure selections reproducible. Defaults 123","code":""},{"path":"https://hendersontrent.github.io/theft/reference/filter_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove duplicate features that exist in multiple feature sets and retain a reproducible random selection of one of them — filter_duplicates","text":"feature_calculations object containing filtered feature data","code":""},{"path":"https://hendersontrent.github.io/theft/reference/filter_duplicates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove duplicate features that exist in multiple feature sets and retain a reproducible random selection of one of them — filter_duplicates","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/filter_good_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter resample data sets according to good feature list — filter_good_features","title":"Filter resample data sets according to good feature list — filter_good_features","text":"Filter resample data sets according good feature list","code":""},{"path":"https://hendersontrent.github.io/theft/reference/filter_good_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter resample data sets according to good feature list — filter_good_features","text":"","code":"filter_good_features(data, x, good_features)"},{"path":"https://hendersontrent.github.io/theft/reference/filter_good_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter resample data sets according to good feature list — filter_good_features","text":"data list \"Train\" \"Test\" data x integer denoting resample index operate good_features character vector good features keep","code":""},{"path":"https://hendersontrent.github.io/theft/reference/filter_good_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter resample data sets according to good feature list — filter_good_features","text":"list filtered train test data","code":""},{"path":"https://hendersontrent.github.io/theft/reference/filter_good_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter resample data sets according to good feature list — filter_good_features","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/find_good_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to find features in both train and test set that are ","title":"Helper function to find features in both train and test set that are ","text":"Helper function find features train test set \"good\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/find_good_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to find features in both train and test set that are ","text":"","code":"find_good_features(data, x)"},{"path":"https://hendersontrent.github.io/theft/reference/find_good_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to find features in both train and test set that are ","text":"data list \"Train\" \"Test\" data x integer denoting resample index operate ","code":""},{"path":"https://hendersontrent.github.io/theft/reference/find_good_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to find features in both train and test set that are ","text":"character vector \"good\" feature names","code":""},{"path":"https://hendersontrent.github.io/theft/reference/find_good_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to find features in both train and test set that are ","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit classification model and compute key metrics — fit_models","title":"Fit classification model and compute key metrics — fit_models","text":"Fit classification model compute key metrics","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit classification model and compute key metrics — fit_models","text":"","code":"fit_models(data, iter_data, row_id, is_null_run = FALSE, classifier)"},{"path":"https://hendersontrent.github.io/theft/reference/fit_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit classification model and compute key metrics — fit_models","text":"data list containing train test sets iter_data data.frame containing values iterate seed either feature name set name row_id integer denoting row ID iter_data filter is_null_run Boolean whether calculation null model. Defaults FALSE classifier function specifying classifier fit. function 2 arguments: formula data. Please note tsfeature_classifier z-scores data prior modelling using train set's information disabling default scaling function uses recommended.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit classification model and compute key metrics — fit_models","text":"data.frame classification results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_models.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit classification model and compute key metrics — fit_models","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"Fit classifier feature matrix using features features set","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"","code":"fit_multi_feature_classifier(   data,   by_set = FALSE,   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"ModelFreeShuffles\", \"NullModelFits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 100,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"data feature_calculations object containing raw feature matrix produced calculate_features by_set Boolean specifying whether compute classifiers feature set. Defaults FALSE test_method character specifying algorithm use quantifying class separation. Defaults \"gaussprRadial\". Must valid caret classification model use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates. Defaults TRUE num_folds integer specifying number folds (train-test splits) perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values. Defaults FALSE null_testing_method character specifying type statistical method use calculate p-values. Defaults model free shuffles p_value_method character specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 100 seed integer fix R's random number generator ensure reproducibility. Defaults 123","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"object class list containing data.frame summary raw classification results, data.frame summary test statistics, ggplot object by_set TRUE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"","code":"# \\donttest{ featMat <- calculate_features(data = simData,   id_var = \"id\",   time_var = \"timepoint\",   values_var = \"values\",   group_var = \"process\",   feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.  fit_multi_feature_classifier(featMat,   by_set = FALSE,   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = TRUE,   null_testing_method = \"ModelFreeShuffles\",   p_value_method = \"gaussian\",   num_permutations = 50,   seed = 123) #> Assessing feature values and unique IDs for NAs using matrix of all features. #> Loading required package: ggplot2 #> Loading required package: lattice #> $TestStatistics #>    accuracy p_value_accuracy classifier_name               statistic_name #> 1 0.6722222     7.518342e-61   gaussprRadial Mean classification accuracy #>  #> $RawClassificationResults #>     accuracy accuracy_sd category            method num_features_used #> 1  0.6722222  0.08050765     Main              <NA>                NA #> 2  0.1222222          NA     Null ModelFreeShuffles                NA #> 3  0.2277778          NA     Null ModelFreeShuffles                NA #> 4  0.1444444          NA     Null ModelFreeShuffles                NA #> 5  0.1444444          NA     Null ModelFreeShuffles                NA #> 6  0.1444444          NA     Null ModelFreeShuffles                NA #> 7  0.1777778          NA     Null ModelFreeShuffles                NA #> 8  0.1888889          NA     Null ModelFreeShuffles                NA #> 9  0.1777778          NA     Null ModelFreeShuffles                NA #> 10 0.1611111          NA     Null ModelFreeShuffles                NA #> 11 0.1277778          NA     Null ModelFreeShuffles                NA #> 12 0.1722222          NA     Null ModelFreeShuffles                NA #> 13 0.1611111          NA     Null ModelFreeShuffles                NA #> 14 0.1555556          NA     Null ModelFreeShuffles                NA #> 15 0.1555556          NA     Null ModelFreeShuffles                NA #> 16 0.2055556          NA     Null ModelFreeShuffles                NA #> 17 0.1944444          NA     Null ModelFreeShuffles                NA #> 18 0.1500000          NA     Null ModelFreeShuffles                NA #> 19 0.1777778          NA     Null ModelFreeShuffles                NA #> 20 0.1444444          NA     Null ModelFreeShuffles                NA #> 21 0.1500000          NA     Null ModelFreeShuffles                NA #> 22 0.1611111          NA     Null ModelFreeShuffles                NA #> 23 0.1277778          NA     Null ModelFreeShuffles                NA #> 24 0.1722222          NA     Null ModelFreeShuffles                NA #> 25 0.2333333          NA     Null ModelFreeShuffles                NA #> 26 0.2222222          NA     Null ModelFreeShuffles                NA #> 27 0.1777778          NA     Null ModelFreeShuffles                NA #> 28 0.2222222          NA     Null ModelFreeShuffles                NA #> 29 0.1611111          NA     Null ModelFreeShuffles                NA #> 30 0.2222222          NA     Null ModelFreeShuffles                NA #> 31 0.2111111          NA     Null ModelFreeShuffles                NA #> 32 0.1388889          NA     Null ModelFreeShuffles                NA #> 33 0.1388889          NA     Null ModelFreeShuffles                NA #> 34 0.1666667          NA     Null ModelFreeShuffles                NA #> 35 0.1833333          NA     Null ModelFreeShuffles                NA #> 36 0.1444444          NA     Null ModelFreeShuffles                NA #> 37 0.1500000          NA     Null ModelFreeShuffles                NA #> 38 0.1722222          NA     Null ModelFreeShuffles                NA #> 39 0.1888889          NA     Null ModelFreeShuffles                NA #> 40 0.1888889          NA     Null ModelFreeShuffles                NA #> 41 0.1722222          NA     Null ModelFreeShuffles                NA #> 42 0.1555556          NA     Null ModelFreeShuffles                NA #> 43 0.1555556          NA     Null ModelFreeShuffles                NA #> 44 0.1944444          NA     Null ModelFreeShuffles                NA #> 45 0.1555556          NA     Null ModelFreeShuffles                NA #> 46 0.1277778          NA     Null ModelFreeShuffles                NA #> 47 0.1444444          NA     Null ModelFreeShuffles                NA #> 48 0.1777778          NA     Null ModelFreeShuffles                NA #> 49 0.1833333          NA     Null ModelFreeShuffles                NA #> 50 0.2000000          NA     Null ModelFreeShuffles                NA #> 51 0.2555556          NA     Null ModelFreeShuffles                NA #>    classifier_name               statistic_name #> 1    gaussprRadial Mean classification accuracy #> 2    gaussprRadial Mean classification accuracy #> 3    gaussprRadial Mean classification accuracy #> 4    gaussprRadial Mean classification accuracy #> 5    gaussprRadial Mean classification accuracy #> 6    gaussprRadial Mean classification accuracy #> 7    gaussprRadial Mean classification accuracy #> 8    gaussprRadial Mean classification accuracy #> 9    gaussprRadial Mean classification accuracy #> 10   gaussprRadial Mean classification accuracy #> 11   gaussprRadial Mean classification accuracy #> 12   gaussprRadial Mean classification accuracy #> 13   gaussprRadial Mean classification accuracy #> 14   gaussprRadial Mean classification accuracy #> 15   gaussprRadial Mean classification accuracy #> 16   gaussprRadial Mean classification accuracy #> 17   gaussprRadial Mean classification accuracy #> 18   gaussprRadial Mean classification accuracy #> 19   gaussprRadial Mean classification accuracy #> 20   gaussprRadial Mean classification accuracy #> 21   gaussprRadial Mean classification accuracy #> 22   gaussprRadial Mean classification accuracy #> 23   gaussprRadial Mean classification accuracy #> 24   gaussprRadial Mean classification accuracy #> 25   gaussprRadial Mean classification accuracy #> 26   gaussprRadial Mean classification accuracy #> 27   gaussprRadial Mean classification accuracy #> 28   gaussprRadial Mean classification accuracy #> 29   gaussprRadial Mean classification accuracy #> 30   gaussprRadial Mean classification accuracy #> 31   gaussprRadial Mean classification accuracy #> 32   gaussprRadial Mean classification accuracy #> 33   gaussprRadial Mean classification accuracy #> 34   gaussprRadial Mean classification accuracy #> 35   gaussprRadial Mean classification accuracy #> 36   gaussprRadial Mean classification accuracy #> 37   gaussprRadial Mean classification accuracy #> 38   gaussprRadial Mean classification accuracy #> 39   gaussprRadial Mean classification accuracy #> 40   gaussprRadial Mean classification accuracy #> 41   gaussprRadial Mean classification accuracy #> 42   gaussprRadial Mean classification accuracy #> 43   gaussprRadial Mean classification accuracy #> 44   gaussprRadial Mean classification accuracy #> 45   gaussprRadial Mean classification accuracy #> 46   gaussprRadial Mean classification accuracy #> 47   gaussprRadial Mean classification accuracy #> 48   gaussprRadial Mean classification accuracy #> 49   gaussprRadial Mean classification accuracy #> 50   gaussprRadial Mean classification accuracy #> 51   gaussprRadial Mean classification accuracy #>  # }"},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"Fit classifier feature matrix using features features set","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"","code":"fit_multivariable_classifier(   data,   id_var = \"id\",   group_var = \"group\",   by_set = FALSE,   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"model free shuffles\", \"null model fits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 100,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"data dataframe containing raw feature data calculated theft::calculate_features id_var string specifying ID variable group data (one exists). Defaults \"id\" group_var string specifying grouping variable data aggregates . Defaults \"group\" by_set Boolean specifying whether compute classifiers feature set. Defaults FALSE test_method algorithm use quantifying class separation. Defaults \"gaussprRadial\" use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates. Defaults TRUE num_folds integer specifying number folds (train-test splits) perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values. Defaults FALSE null_testing_method string specifying type statistical method use calculate p-values. Defaults model free shuffles p_value_method string specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 100 seed fixed number R's random number generator ensure reproducibility","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"object class list containing dataframe summaries classification models ggplot object by_set TRUE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,   id_var = \"id\",   time_var = \"timepoint\",   values_var = \"values\",   group_var = \"process\",   feature_set = \"catch22\")  fit_multivariable_classifier(featMat,   id_var = \"id\",   group_var = \"group\",   by_set = FALSE,   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = TRUE,   null_testing_method = \"model free shuffles\",   p_value_method = \"empirical\",   num_permutations = 100,   seed = 123) }"},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"Fit classifier feature matrix extract top performers","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"","code":"fit_single_feature_classifier(   data,   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = FALSE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"ModelFreeShuffles\", \"NullModelFits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 50,   pool_empirical_null = FALSE,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"data data.frame containing raw feature matrix test_method character specifying algorithm use quantifying class separation. Defaults \"gaussprRadial\". either \"t-test\", \"wilcox\", \"binomial logistic\" two-class problems obtain exact statistics, valid caret classification model everything else use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates caret model specified test_method. Defaults  FALSE num_folds integer specifying number k-folds perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values caret model specified test_method. Defaults FALSE null_testing_method character specifying type statistical method use calculate p-values. Defaults model free shuffles p_value_method character specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 50 pool_empirical_null Boolean specifying whether use pooled empirical null distribution features features' individual empirical null distribution caret model specified test_method use_empirical_null TRUE. Defaults FALSE seed integer denoting fixed number R's random number generator ensure reproducibility. Defaults 123","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"object class data.frame","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"Fit classifier feature matrix extract top performers","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"","code":"fit_univariable_classifier(   data,   id_var = \"id\",   group_var = \"group\",   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = FALSE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"model free shuffles\", \"null model fits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 50,   pool_empirical_null = FALSE,   seed = 123,   return_raw_estimates = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"data dataframe containing raw feature matrix id_var string specifying ID variable group data (one exists). Defaults \"id\" group_var string specifying grouping variable data aggregates . Defaults \"group\" test_method algorithm use quantifying class separation. Defaults \"gaussprRadial\". either \"t-test\", \"wilcox\", \"binomial logistic\" two-class problems obtain exact statistics, valid caret classification model everything else use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates caret model specified test_method. Defaults  FALSE num_folds integer specifying number k-folds perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values caret model specified test_method. Defaults FALSE null_testing_method string specifying type statistical method use calculate p-values. Defaults model free shuffles p_value_method string specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 50 pool_empirical_null Boolean specifying whether use pooled empirical null distribution features features' individual empirical null distribution caret model specified test_method use_empirical_null TRUE. Defaults FALSE seed fixed number R's random number generator ensure reproducibility return_raw_estimates Boolean (testing purposes -- break compute_top_features!!) specifying whether return raw main null model results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"object class dataframe containing results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")    fit_univariable_classifier(featMat,   id_var = \"id\",   group_var = \"group\",   test_method = \"linear svm\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = TRUE,   null_testing_method = \"model free shuffles\",   p_value_method = \"empirical\",   num_permutations = 50,   pool_empirical_null = FALSE,   seed = 123,   return_raw_estimates = FALSE)  }"},{"path":"https://hendersontrent.github.io/theft/reference/get_rescale_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate central tendency and spread values for all numeric columns in a dataset — get_rescale_vals","title":"Calculate central tendency and spread values for all numeric columns in a dataset — get_rescale_vals","text":"Calculate central tendency spread values numeric columns dataset","code":""},{"path":"https://hendersontrent.github.io/theft/reference/get_rescale_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate central tendency and spread values for all numeric columns in a dataset — get_rescale_vals","text":"","code":"get_rescale_vals(data)"},{"path":"https://hendersontrent.github.io/theft/reference/get_rescale_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate central tendency and spread values for all numeric columns in a dataset — get_rescale_vals","text":"data data.frame containing data normalise","code":""},{"path":"https://hendersontrent.github.io/theft/reference/get_rescale_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate central tendency and spread values for all numeric columns in a dataset — get_rescale_vals","text":"list central tendency spread values","code":""},{"path":"https://hendersontrent.github.io/theft/reference/get_rescale_vals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate central tendency and spread values for all numeric columns in a dataset — get_rescale_vals","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":null,"dir":"Reference","previous_headings":"","what":"Communicate to R the Python virtual environment containing the relevant libraries for calculating features — init_theft","title":"Communicate to R the Python virtual environment containing the relevant libraries for calculating features — init_theft","text":"Communicate R Python virtual environment containing relevant libraries calculating features","code":""},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Communicate to R the Python virtual environment containing the relevant libraries for calculating features — init_theft","text":"","code":"init_theft(venv)"},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Communicate to R the Python virtual environment containing the relevant libraries for calculating features — init_theft","text":"venv character specifying name Python virtual environment \"tsfresh\", \"TSFEL\", /\"Kats\" installed","code":""},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Communicate to R the Python virtual environment containing the relevant libraries for calculating features — init_theft","text":"return value; called side effects","code":""},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Communicate to R the Python virtual environment containing the relevant libraries for calculating features — init_theft","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Communicate to R the Python virtual environment containing the relevant libraries for calculating features — init_theft","text":"","code":"if (FALSE) { # \\dontrun{ install_python_pkgs(\"theft-test\") init_theft(\"theft-test\") } # }"},{"path":"https://hendersontrent.github.io/theft/reference/install_kats.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and install Kats from Python into a new virtual environment — install_kats","title":"Download and install Kats from Python into a new virtual environment — install_kats","text":"Download install Kats Python new virtual environment","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_kats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and install Kats from Python into a new virtual environment — install_kats","text":"","code":"install_kats(venv, python)"},{"path":"https://hendersontrent.github.io/theft/reference/install_kats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and install Kats from Python into a new virtual environment — install_kats","text":"venv character specifying name new virtual environment create python character specifying filepath Python interpreter use. Python 3.10 recommended","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_kats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and install Kats from Python into a new virtual environment — install_kats","text":"return value; called side effects","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_kats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and install Kats from Python into a new virtual environment — install_kats","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_kats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and install Kats from Python into a new virtual environment — install_kats","text":"","code":"if (FALSE) { # \\dontrun{ install_kats(\"theft-test\", \"/usr/local/bin/python3.10\") } # }"},{"path":"https://hendersontrent.github.io/theft/reference/install_python_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and install tsfresh, TSFEL, and Kats from Python into a new virtual environment — install_python_pkgs","title":"Download and install tsfresh, TSFEL, and Kats from Python into a new virtual environment — install_python_pkgs","text":"Download install tsfresh, TSFEL, Kats Python new virtual environment","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_python_pkgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and install tsfresh, TSFEL, and Kats from Python into a new virtual environment — install_python_pkgs","text":"","code":"install_python_pkgs(venv, python)"},{"path":"https://hendersontrent.github.io/theft/reference/install_python_pkgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and install tsfresh, TSFEL, and Kats from Python into a new virtual environment — install_python_pkgs","text":"venv character specifying name new virtual environment create python character specifying filepath Python interpreter use. Python 3.10 recommended","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_python_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and install tsfresh, TSFEL, and Kats from Python into a new virtual environment — install_python_pkgs","text":"return value; called side effects","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_python_pkgs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and install tsfresh, TSFEL, and Kats from Python into a new virtual environment — install_python_pkgs","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_python_pkgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and install tsfresh, TSFEL, and Kats from Python into a new virtual environment — install_python_pkgs","text":"","code":"if (FALSE) { # \\dontrun{ install_python_pkgs(\"theft-test\", \"/usr/local/bin/python3.10\") } # }"},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfel.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and install TSFEL from Python into a new virtual environment — install_tsfel","title":"Download and install TSFEL from Python into a new virtual environment — install_tsfel","text":"Download install TSFEL Python new virtual environment","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and install TSFEL from Python into a new virtual environment — install_tsfel","text":"","code":"install_tsfel(venv, python)"},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and install TSFEL from Python into a new virtual environment — install_tsfel","text":"venv character specifying name new virtual environment create python character specifying filepath Python interpreter use. Python 3.10 recommended","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and install TSFEL from Python into a new virtual environment — install_tsfel","text":"return value; called side effects","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and install TSFEL from Python into a new virtual environment — install_tsfel","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and install TSFEL from Python into a new virtual environment — install_tsfel","text":"","code":"if (FALSE) { # \\dontrun{ install_tsfel(\"theft-test\", \"/usr/local/bin/python3.10\") } # }"},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and install tsfresh from Python into a new virtual environment — install_tsfresh","title":"Download and install tsfresh from Python into a new virtual environment — install_tsfresh","text":"Download install tsfresh Python new virtual environment","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and install tsfresh from Python into a new virtual environment — install_tsfresh","text":"","code":"install_tsfresh(venv, python)"},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and install tsfresh from Python into a new virtual environment — install_tsfresh","text":"venv character specifying name new virtual environment create python character specifying filepath Python interpreter use. Python 3.10 recommended","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and install tsfresh from Python into a new virtual environment — install_tsfresh","text":"return value; called side effects","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfresh.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and install tsfresh from Python into a new virtual environment — install_tsfresh","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/install_tsfresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and install tsfresh from Python into a new virtual environment — install_tsfresh","text":"","code":"if (FALSE) { # \\dontrun{ install_tsfresh(\"theft-test\", \"/usr/local/bin/python3.10\") } # }"},{"path":"https://hendersontrent.github.io/theft/reference/make_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for converting to title case — make_title","title":"Helper function for converting to title case — make_title","text":"Helper function converting title case","code":""},{"path":"https://hendersontrent.github.io/theft/reference/make_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for converting to title case — make_title","text":"","code":"make_title(x)"},{"path":"https://hendersontrent.github.io/theft/reference/make_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for converting to title case — make_title","text":"x character vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/make_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for converting to title case — make_title","text":"character vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/make_title.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function for converting to title case — make_title","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/maxabs_scaler.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescales a numeric vector using maximum absolute scaling — maxabs_scaler","title":"Rescales a numeric vector using maximum absolute scaling — maxabs_scaler","text":"\\(z_{} = \\frac{x_{}}{max(\\mathbf{x})}\\)","code":""},{"path":"https://hendersontrent.github.io/theft/reference/maxabs_scaler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescales a numeric vector using maximum absolute scaling — maxabs_scaler","text":"","code":"maxabs_scaler(x)"},{"path":"https://hendersontrent.github.io/theft/reference/maxabs_scaler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescales a numeric vector using maximum absolute scaling — maxabs_scaler","text":"x numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/maxabs_scaler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescales a numeric vector using maximum absolute scaling — maxabs_scaler","text":"numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/maxabs_scaler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rescales a numeric vector using maximum absolute scaling — maxabs_scaler","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescales a numeric vector into the unit interval [0,1] — minmax_scaler","title":"Rescales a numeric vector into the unit interval [0,1] — minmax_scaler","text":"\\(z_{} = \\frac{x_{} - min(\\mathbf{x})}{max(\\mathbf{x}) - min(\\mathbf{x})}\\)","code":""},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescales a numeric vector into the unit interval [0,1] — minmax_scaler","text":"","code":"minmax_scaler(x)"},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescales a numeric vector into the unit interval [0,1] — minmax_scaler","text":"x numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescales a numeric vector into the unit interval [0,1] — minmax_scaler","text":"numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rescales a numeric vector into the unit interval [0,1] — minmax_scaler","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise","text":"`normalise()` `normalize()` synonyms.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise","text":"","code":"normalise(   data,   norm_method = c(\"zScore\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\", \"MaxAbs\"),   unit_int = FALSE )  normalize(   data,   norm_method = c(\"zScore\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\", \"MaxAbs\"),   unit_int = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/normalise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise","text":"data either feature_calculations object containing raw feature matrix produced calculate_features vector class numeric containing values rescaled norm_method character denoting rescaling/normalising method apply. Can one \"zScore\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\", \"MaxAbs\". Defaults \"zScore\" unit_int Boolean whether rescale unit interval [0,1] applying normalisation method. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise","text":"either object class data.frame numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"Scale feature vector user-specified range visualisation modelling","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"","code":"normalise_feature_frame(   data,   names_var = \"names\",   values_var = \"values\",   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\") )"},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"data dataframe least 2 columns: names variable (feature names) value variable names_var string denoting name variable/column holds feature names. Defaults \"names\" values_var string denoting name variable/column holds numerical feature values. Defaults \"values\" method rescaling/normalising method apply. Defaults \"RobustSigmoid\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"dataframe value column rescaled specified range","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"","code":"featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.    normed <- normalise_feature_frame(featMat,    names_var = \"names\",    values_var = \"values\",    method = \"RobustSigmoid\")"},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"Scale value user-specified range visualisation analysis","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"","code":"normalise_feature_vector(   x,   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\") )"},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"x vector scalar values method rescaling/normalising method apply. Defaults \"RobustSigmoid\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"vector scalar values normalised selected range","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"","code":"featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.    x <- featMat[featMat$names == \"DN_HistogramMode_5\", ] xnormed <- normalise_feature_vector(x$values, method = \"RobustSigmoid\")"},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"Scale feature vector user-specified range visualisation modelling","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"","code":"normalize_feature_frame(   data,   names_var = \"names\",   values_var = \"values\",   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\") )"},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"data dataframe least 2 columns: names variable (feature names) value variable names_var string denoting name variable/column holds feature names. Defaults \"names\" values_var string denoting name variable/column holds numerical feature values. Defaults \"values\" method rescaling/normalising method apply. Defaults \"RobustSigmoid\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"dataframe value column rescaled specified range","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"","code":"featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.    normed <- normalize_feature_frame(featMat,    names_var = \"names\",    values_var = \"values\",    method = \"RobustSigmoid\")"},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"Scale value user-specified range visualisation analysis","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"","code":"normalize_feature_vector(   x,   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\") )"},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"x vector scalar values method rescaling/normalising method apply. Defaults \"RobustSigmoid\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"vector scalar values normalised selected range","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"","code":"featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.    x <- featMat[featMat$names == \"DN_HistogramMode_5\", ] xnormed <- normalise_feature_vector(x$values, method = \"RobustSigmoid\")"},{"path":"https://hendersontrent.github.io/theft/reference/plot.feature_calculations.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a plot for a feature_calculations object — plot.feature_calculations","title":"Produce a plot for a feature_calculations object — plot.feature_calculations","text":"Produce plot feature_calculations object","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot.feature_calculations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a plot for a feature_calculations object — plot.feature_calculations","text":"","code":"# S3 method for feature_calculations plot(   x,   type = c(\"quality\", \"matrix\", \"cor\", \"violin\"),   norm_method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   unit_int = FALSE,   clust_method = c(\"average\", \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"mcquitty\",     \"median\", \"centroid\"),   cor_method = c(\"pearson\", \"spearman\"),   feature_names = NULL,   ... )"},{"path":"https://hendersontrent.github.io/theft/reference/plot.feature_calculations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a plot for a feature_calculations object — plot.feature_calculations","text":"x feature_calculations object containing raw feature matrix produced calculate_features type character specifying type plot draw. Defaults \"quality\" norm_method character specifying rescaling/normalising method apply type = \"matrix\" type = \"cor\". Can one \"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\". Defaults \"z-score\" unit_int Boolean whether rescale unit interval [0,1] applying normalisation method. Defaults FALSE clust_method character specifying hierarchical clustering method use type = \"matrix\" type = \"cor\". Defaults \"average\" cor_method character specifying correlation method use type = \"cor\". Defaults \"pearson\" feature_names character vector denoting name features plot type = \"violin\". Defaults NULL ... Arguments passed ggplot2::geom_bar type = \"quality\", ggplot2::geom_raster type = \"matrix\", ggplot2::geom_raster type = \"cor\", ggplot2::geom_point type = \"violin\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot.feature_calculations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a plot for a feature_calculations object — plot.feature_calculations","text":"object class ggplot contains graphic","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot.feature_calculations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a plot for a feature_calculations object — plot.feature_calculations","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot.low_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a plot for a low_dimension object — plot.low_dimension","title":"Produce a plot for a low_dimension object — plot.low_dimension","text":"Produce plot low_dimension object","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot.low_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a plot for a low_dimension object — plot.low_dimension","text":"","code":"# S3 method for low_dimension plot(x, show_covariance = TRUE, ...)"},{"path":"https://hendersontrent.github.io/theft/reference/plot.low_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a plot for a low_dimension object — plot.low_dimension","text":"x low_dimension object containing dimensionality reduction projection calculated reduce_dims show_covariance Boolean whether covariance ellipses shown plot. Defaults TRUE ... Arguments passed methods","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot.low_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a plot for a low_dimension object — plot.low_dimension","text":"object class ggplot contains graphic","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot.low_dimension.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a plot for a low_dimension object — plot.low_dimension","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_all_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_all_features","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_all_features","text":"Produce heatmap matrix calculated feature value vectors unique time series automatic hierarchical clustering.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_all_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_all_features","text":"","code":"plot_all_features(   data,   is_normalised = FALSE,   id_var = \"id\",   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   clust_method = c(\"average\", \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"mcquitty\",     \"median\", \"centroid\"),   interactive = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/plot_all_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_all_features","text":"data dataframe least 2 columns called \"names\" \"values\" is_normalised Boolean whether input feature values already scaled. Defaults FALSE id_var string specifying ID variable identify time series. Defaults \"id\" method rescaling/normalising method apply. Defaults \"RobustSigmoid\" clust_method hierarchical clustering method use pairwise correlation plot. Defaults \"average\" interactive Boolean whether plot interactive plotly graphic. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_all_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_all_features","text":"object class ggplot contains heatmap graphic","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_all_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_all_features","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_all_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_all_features","text":"","code":"featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.  plot_all_features(featMat,    is_normalised = FALSE,   id_var = \"id\",    method = \"RobustSigmoid\",   clust_method = \"average\",   interactive = FALSE) #> Applying linear rescaling of values to make plot legend cleaner."},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"Produce correlation matrix plot showing pairwise correlations feature vectors unique id automatic hierarchical clustering.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"","code":"plot_feature_correlations(   data,   is_normalised = NULL,   id_var = \"id\",   names_var = \"names\",   values_var = \"values\",   method = NULL,   cor_method = c(\"pearson\", \"spearman\"),   clust_method = c(\"average\", \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"mcquitty\",     \"median\", \"centroid\"),   interactive = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"data dataframe least 3 columns 'id', 'names' 'values' is_normalised deprecated 0.4.0; use id_var string specifying ID variable compute pairwise correlations . Defaults \"id\" names_var string denoting name variable/column holds feature names. Defaults \"names\" values_var string denoting name variable/column holds numerical feature values. Defaults \"values\" method deprecated 0.4.0; use cor_method correlation method use. Defaults \"pearson\" clust_method hierarchical clustering method use pairwise correlation plot. Defaults \"average\" interactive Boolean whether plot interactive plotly graphic. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"object class ggplot contains correlation matrix graphic","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"","code":"featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.    plot_feature_correlations(data = featMat,    id_var = \"id\",    names_var = \"names\",    values_var = \"values\",   cor_method = \"pearson\",   clust_method = \"average\",   interactive = FALSE)"},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"Produce heatmap matrix calculated feature value vectors unique time series automatic hierarchical clustering.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"","code":"plot_feature_matrix(   data,   is_normalised = FALSE,   id_var = \"id\",   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   clust_method = c(\"average\", \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"mcquitty\",     \"median\", \"centroid\"),   interactive = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"data dataframe least 2 columns called \"names\" \"values\" is_normalised Boolean whether input feature values already scaled. Defaults FALSE id_var string specifying ID variable identify time series. Defaults \"id\" method rescaling/normalising method apply. Defaults \"RobustSigmoid\" clust_method hierarchical clustering method use pairwise correlation plot. Defaults \"average\" interactive Boolean whether plot interactive plotly graphic. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"object class ggplot contains heatmap graphic","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"","code":"featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.  plot_feature_matrix(featMat,    is_normalised = FALSE,   id_var = \"id\",    method = \"RobustSigmoid\",   clust_method = \"average\",   interactive = FALSE) #> Warning: As of 0.3.6 plot_feature_matrix is deprecated. Please use 'plot_all_features' instead #> This warning is displayed once per session. #> Applying linear rescaling of values to make plot legend cleaner."},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"Produce principal components analysis (PCA) normalised feature values render bivariate plot visualise ","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"","code":"plot_low_dimension(   data,   is_normalised = FALSE,   id_var = \"id\",   group_var = NULL,   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   low_dim_method = c(\"PCA\", \"t-SNE\"),   perplexity = 30,   plot = TRUE,   show_covariance = FALSE,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"data dataframe least 2 columns called \"names\" \"values\" is_normalised Boolean whether input feature values already scaled. Defaults FALSE id_var string specifying ID variable uniquely identify time series. Defaults \"id\" group_var string specifying grouping variable data aggregates (one exists). Defaults NULL method rescaling/normalising method apply. Defaults \"z-score\" low_dim_method low dimensional embedding method use. Defaults \"PCA\" perplexity perplexity hyperparameter use t-SNE algorithm selected. Defaults 30 plot Boolean whether plot model fit information returned. Defaults TRUE show_covariance Boolean whether covariance ellipses shown plot. Defaults FALSE seed fixed number R's random number generator ensure reproducibility","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"plot = TRUE, returns object class ggplot, plot = FALSE returns object class dataframe PCA results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"","code":"# \\donttest{ featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.  plot_low_dimension(featMat,    is_normalised = FALSE,    id_var = \"id\",    group_var = \"group\",    method = \"RobustSigmoid\",    low_dim_method = \"PCA\",    plot = TRUE,   show_covariance = TRUE,   seed = 123)  # }"},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"Produce matrix visualisation data types computed feature calculation function.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"","code":"plot_quality_matrix(data, ignore_good_features = FALSE)"},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"data dataframe least 2 columns called \"names\" \"values\" ignore_good_features Boolean whether remove \"good\" features (.e., successful numeric values) plot. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"object class ggplot","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"","code":"featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.  plot_quality_matrix(data = featMat,   ignore_good_features = FALSE)"},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"Produce correlation matrix plot showing pairwise correlations time series automatic hierarchical clustering","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"","code":"plot_ts_correlations(   data,   is_normalised = NULL,   id_var = \"id\",   time_var = \"timepoint\",   values_var = \"values\",   method = NULL,   clust_method = c(\"average\", \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"mcquitty\",     \"median\", \"centroid\"),   cor_method = c(\"pearson\", \"spearman\"),   interactive = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"data dataframewith least 2 columns \"id\" \"values\" variables is_normalised deprecated 0.4.0; use id_var string specifying ID variable compute pairwise correlations . Defaults \"id\" time_var string specifying time index variable. Defaults NULL values_var string denoting name variable/column holds numerical feature values. Defaults \"values\" method deprecated 0.4.0; use clust_method hierarchical clustering method use pairwise correlation plot. Defaults \"average\" cor_method correlation method use. Defaults \"pearson\" interactive Boolean whether plot interactive plotly graphic. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"object class ggplot","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"","code":"plot_ts_correlations(data = simData,    id_var = \"id\",    time_var = \"timepoint\",   values_var = \"values\",   method = \"RobustSigmoid\",   cor_method = \"pearson\",   clust_method = \"average\",   interactive = FALSE) #> Warning: As of 0.4.0 'is_normalised' and 'method' are no longer arguments to plot_ts_correlations #> This warning is displayed once per session."},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"Load hctsa formatted MATLAB files time series data tidy format ready feature extraction","code":""},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"","code":"process_hctsa_file(data)"},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"data string specifying filepath MATLAB file parse","code":""},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"object class data.frame tidy format","code":""},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/reduce_dims.html","id":null,"dir":"Reference","previous_headings":"","what":"Project a feature matrix into a low dimensional representation using PCA or t-SNE — reduce_dims","title":"Project a feature matrix into a low dimensional representation using PCA or t-SNE — reduce_dims","text":"Project feature matrix low dimensional representation using PCA t-SNE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/reduce_dims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project a feature matrix into a low dimensional representation using PCA or t-SNE — reduce_dims","text":"","code":"reduce_dims(   data,   norm_method = c(\"zScore\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   unit_int = FALSE,   low_dim_method = c(\"PCA\", \"tSNE\"),   na_removal = c(\"feature\", \"sample\"),   perplexity = 10,   seed = 123,   ... )"},{"path":"https://hendersontrent.github.io/theft/reference/reduce_dims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project a feature matrix into a low dimensional representation using PCA or t-SNE — reduce_dims","text":"data feature_calculations object containing raw feature matrix produced calculate_features norm_method character denoting rescaling/normalising method apply. Can one \"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\". Defaults \"z-score\" unit_int Boolean whether rescale unit interval [0,1] applying normalisation method. Defaults FALSE low_dim_method character specifying low dimensional embedding method use. Can one \"PCA\" \"tSNE\". Defaults \"PCA\" na_removal character defining way deal NAs produced feature calculation. Can one \"feature\" \"sample\". \"feature\" removes features produced NAs sample, keeping number samples . \"sample\" omits samples produced least one NA. Defaults \"feature\" perplexity integer denoting perplexity hyperparameter use low_dim_method \"t-SNE\". Defaults 10 seed integer fix R's random number generator ensure reproducibility. Defaults 123 ... arguments passed either stats::prcomp Rtsne::Rtsne depending whether \"low_dim_method\" \"PCA\" \"t-SNE\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/reduce_dims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project a feature matrix into a low dimensional representation using PCA or t-SNE — reduce_dims","text":"object class low_dimension","code":""},{"path":"https://hendersontrent.github.io/theft/reference/reduce_dims.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Project a feature matrix into a low dimensional representation using PCA or t-SNE — reduce_dims","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/resample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create a resampled dataset — resample_data","title":"Helper function to create a resampled dataset — resample_data","text":"Helper function create resampled dataset","code":""},{"path":"https://hendersontrent.github.io/theft/reference/resample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create a resampled dataset — resample_data","text":"","code":"resample_data(data, train_rows, test_rows, train_groups, test_groups, seed)"},{"path":"https://hendersontrent.github.io/theft/reference/resample_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to create a resampled dataset — resample_data","text":"data data.frame containing time-series features train_rows integer denoting number cases train set test_rows integer denoting number cases test set train_groups data.frame containing proportions class original train split test_groups data.frame containing proportions class original test split seed integer denoting fixed value R's pseudorandom number generator","code":""},{"path":"https://hendersontrent.github.io/theft/reference/resample_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to create a resampled dataset — resample_data","text":"list containing new train test data","code":""},{"path":"https://hendersontrent.github.io/theft/reference/resample_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to create a resampled dataset — resample_data","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/resampled_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute correlated t-statistic and p-value for resampled data from correctR package — resampled_ttest","title":"Compute correlated t-statistic and p-value for resampled data from correctR package — resampled_ttest","text":"Compute correlated t-statistic p-value resampled data correctR package","code":""},{"path":"https://hendersontrent.github.io/theft/reference/resampled_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute correlated t-statistic and p-value for resampled data from correctR package — resampled_ttest","text":"","code":"resampled_ttest(x, y, n, n1, n2)"},{"path":"https://hendersontrent.github.io/theft/reference/resampled_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute correlated t-statistic and p-value for resampled data from correctR package — resampled_ttest","text":"x numeric vector values model y numeric vector values model B n integer denoting number repeat samples. Defaults length(x) n1 integer denoting train set size n2 integer denoting test set size","code":""},{"path":"https://hendersontrent.github.io/theft/reference/resampled_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute correlated t-statistic and p-value for resampled data from correctR package — resampled_ttest","text":"object class data.frame","code":""},{"path":"https://hendersontrent.github.io/theft/reference/resampled_ttest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute correlated t-statistic and p-value for resampled data from correctR package — resampled_ttest","text":"Nadeau, C., Bengio, Y. Inference Generalization Error. Machine Learning 52, (2003). Bouckaert, R. R., Frank, E. Evaluating Replicability Significance Tests Comparing Learning Algorithms. Advances Knowledge Discovery Data Mining. PAKDD 2004. Lecture Notes Computer Science, 3056, (2004).","code":""},{"path":"https://hendersontrent.github.io/theft/reference/resampled_ttest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute correlated t-statistic and p-value for resampled data from correctR package — resampled_ttest","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/rescale_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate z-score for all columns in a dataset using train set central tendency and spread — rescale_zscore","title":"Calculate z-score for all columns in a dataset using train set central tendency and spread — rescale_zscore","text":"Calculate z-score columns dataset using train set central tendency spread","code":""},{"path":"https://hendersontrent.github.io/theft/reference/rescale_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate z-score for all columns in a dataset using train set central tendency and spread — rescale_zscore","text":"","code":"rescale_zscore(data, rescalers)"},{"path":"https://hendersontrent.github.io/theft/reference/rescale_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate z-score for all columns in a dataset using train set central tendency and spread — rescale_zscore","text":"data data.frame containing data normalise rescalers list containing central tendency spread values train set","code":""},{"path":"https://hendersontrent.github.io/theft/reference/rescale_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate z-score for all columns in a dataset using train set central tendency and spread — rescale_zscore","text":"data.frame rescaled data","code":""},{"path":"https://hendersontrent.github.io/theft/reference/rescale_zscore.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate z-score for all columns in a dataset using train set central tendency and spread — rescale_zscore","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescales a numeric vector using an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","title":"Rescales a numeric vector using an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"\\(z_{} = \\left[1 + \\exp\\left(-\\frac{x_{} - median(\\mathbf{x})}{IQR(\\mathbf{x})/{1.35}}\\right)\\right]^{-1}\\)","code":""},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescales a numeric vector using an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"","code":"robustsigmoid_scaler(x)"},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescales a numeric vector using an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"x numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescales a numeric vector using an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rescales a numeric vector using an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"Fulcher, Ben D., Little, Max ., Jones, Nick S. Highly Comparative Time-Series Analysis: Empirical Structure Time Series Methods. Journal Royal Society Interface 10(83), (2013).","code":""},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rescales a numeric vector using an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/select_k_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform fast and simple univariate feature selection based on an output vector using analysis of variance or correlation — select_k_best","title":"Perform fast and simple univariate feature selection based on an output vector using analysis of variance or correlation — select_k_best","text":"Perform fast simple univariate feature selection based output vector using analysis variance correlation","code":""},{"path":"https://hendersontrent.github.io/theft/reference/select_k_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform fast and simple univariate feature selection based on an output vector using analysis of variance or correlation — select_k_best","text":"","code":"select_k_best(   data,   k = floor(length(unique(data[[1]]$names))/2),   outputs = NULL )"},{"path":"https://hendersontrent.github.io/theft/reference/select_k_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform fast and simple univariate feature selection based on an output vector using analysis of variance or correlation — select_k_best","text":"data feature_calculations object containing raw feature matrix produced calculate_features k integer denoting number features retain. Defaults half length unique features available data outputs data.frame containing output data included group column initially running calculate_features. 2 columns first ID variable can joined id column data second output interest (.e., 'y' variable). character factor, classification assumed, numeric, regression assumed. Defaults NULL assumes group variable exists data","code":""},{"path":"https://hendersontrent.github.io/theft/reference/select_k_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform fast and simple univariate feature selection based on an output vector using analysis of variance or correlation — select_k_best","text":"object class feature_calculations contains summary statistics feature retained","code":""},{"path":"https://hendersontrent.github.io/theft/reference/select_k_best.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform fast and simple univariate feature selection based on an output vector using analysis of variance or correlation — select_k_best","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/select_stat_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to select only the relevant columns for statistical testing — select_stat_cols","title":"Helper function to select only the relevant columns for statistical testing — select_stat_cols","text":"Helper function select relevant columns statistical testing","code":""},{"path":"https://hendersontrent.github.io/theft/reference/select_stat_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to select only the relevant columns for statistical testing — select_stat_cols","text":"","code":"select_stat_cols(data, by_set, metric, hypothesis)"},{"path":"https://hendersontrent.github.io/theft/reference/select_stat_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to select only the relevant columns for statistical testing — select_stat_cols","text":"data data.frame classification accuracy results by_set Boolean specifying whether want compare feature sets (TRUE) individual features (FALSE). metric character denoting classification performance metric use statistical testing. Can one \"accuracy\", \"precision\", \"recall\", \"f1\". Defaults \"accuracy\" hypothesis character denoting whether p-values calculated feature set feature (depending by_set argument) individually relative null use_null = TRUE tsfeature_classifier \"null\", whether pairwise comparisons set feature conducted main model fits \"pairwise\".","code":""},{"path":"https://hendersontrent.github.io/theft/reference/select_stat_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to select only the relevant columns for statistical testing — select_stat_cols","text":"object class data.frame","code":""},{"path":"https://hendersontrent.github.io/theft/reference/select_stat_cols.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to select only the relevant columns for statistical testing — select_stat_cols","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescales a numeric vector using a Sigmoidal transformation — sigmoid_scaler","title":"Rescales a numeric vector using a Sigmoidal transformation — sigmoid_scaler","text":"\\(z_{} = \\left[1 + \\exp(-\\frac{x_{} - \\mu}{\\sigma})\\right]^{-1}\\)","code":""},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescales a numeric vector using a Sigmoidal transformation — sigmoid_scaler","text":"","code":"sigmoid_scaler(x)"},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescales a numeric vector using a Sigmoidal transformation — sigmoid_scaler","text":"x numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescales a numeric vector using a Sigmoidal transformation — sigmoid_scaler","text":"numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rescales a numeric vector using a Sigmoidal transformation — sigmoid_scaler","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/simData.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of randomly-generated time series to produce function tests and vignettes — simData","title":"Sample of randomly-generated time series to produce function tests and vignettes — simData","text":"variables include:","code":""},{"path":"https://hendersontrent.github.io/theft/reference/simData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of randomly-generated time series to produce function tests and vignettes — simData","text":"","code":"simData"},{"path":"https://hendersontrent.github.io/theft/reference/simData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of randomly-generated time series to produce function tests and vignettes — simData","text":"tidy tsibble 4 variables: id Unique identifier time series timepoint Time index values Value process Group label type time series","code":""},{"path":"https://hendersontrent.github.io/theft/reference/stat_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate p-values for feature sets or features relative to an empirical null or each other using resampled t-tests — stat_test","title":"Calculate p-values for feature sets or features relative to an empirical null or each other using resampled t-tests — stat_test","text":"Calculate p-values feature sets features relative empirical null using resampled t-tests","code":""},{"path":"https://hendersontrent.github.io/theft/reference/stat_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate p-values for feature sets or features relative to an empirical null or each other using resampled t-tests — stat_test","text":"","code":"stat_test(   data,   iter_data,   row_id,   by_set = FALSE,   hypothesis,   metric,   train_test_sizes,   n_resamples )"},{"path":"https://hendersontrent.github.io/theft/reference/stat_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate p-values for feature sets or features relative to an empirical null or each other using resampled t-tests — stat_test","text":"data data.frame raw classification accuracy results iter_data data.frame containing values iterate seed either feature name set name row_id integer denoting row ID iter_data filter by_set Boolean specifying whether want compare feature sets (TRUE) individual features (FALSE). hypothesis character denoting whether p-values calculated feature set feature (depending by_set argument) individually relative null use_null = TRUE tsfeature_classifier \"null\", whether pairwise comparisons set feature conducted main model fits \"pairwise\". metric character denoting classification performance metric use statistical testing. Can one \"accuracy\", \"precision\", \"recall\", \"f1\". Defaults \"accuracy\" train_test_sizes integer vector containing train test set sample sizes n_resamples integer denoting number resamples calculated","code":""},{"path":"https://hendersontrent.github.io/theft/reference/stat_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate p-values for feature sets or features relative to an empirical null or each other using resampled t-tests — stat_test","text":"object class data.frame","code":""},{"path":"https://hendersontrent.github.io/theft/reference/stat_test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate p-values for feature sets or features relative to an empirical null or each other using resampled t-tests — stat_test","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/theft.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for Handling Extraction of Features from Time-series — theft","title":"Tools for Handling Extraction of Features from Time-series — theft","text":"Tools Handling Extraction Features Time-series","code":""},{"path":"https://hendersontrent.github.io/theft/reference/tsfeature_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit classifiers using time-series features using a resample-based approach and get a fast understanding of performance — tsfeature_classifier","title":"Fit classifiers using time-series features using a resample-based approach and get a fast understanding of performance — tsfeature_classifier","text":"Fit classifiers using time-series features using resample-based approach get fast understanding performance","code":""},{"path":"https://hendersontrent.github.io/theft/reference/tsfeature_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit classifiers using time-series features using a resample-based approach and get a fast understanding of performance — tsfeature_classifier","text":"","code":"tsfeature_classifier(   data,   classifier = NULL,   train_size = 0.75,   n_resamples = 30,   by_set = TRUE,   use_null = FALSE,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/tsfeature_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit classifiers using time-series features using a resample-based approach and get a fast understanding of performance — tsfeature_classifier","text":"data feature_calculations object containing raw feature matrix produced calculate_features included group column per theft::calculate_features classifier function specifying classifier fit. function 2 arguments: formula data containing classifier compatible R's predict functionality. Please note tsfeature_classifier z-scores data prior modelling using train set's information disabling default scaling function uses recommended. Defaults NULL means following linear SVM fit: classifier = function(formula, data){mod <- e1071::svm(formula, data = data, kernel = \"linear\", scale = FALSE, probability = TRUE)} train_size numeric denoting proportion samples use training set. Defaults 0.75 n_resamples integer denoting number resamples calculate. Defaults 30 by_set Boolean specifying whether compute classifiers feature set. Defaults TRUE. FALSE, function instead find best individually-performing features use_null Boolean whether fit null models class labels shuffled order generate null distribution can compared performance correct class labels. Defaults FALSE seed integer fix R's random number generator ensure reproducibility. Defaults 123","code":""},{"path":"https://hendersontrent.github.io/theft/reference/tsfeature_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit classifiers using time-series features using a resample-based approach and get a fast understanding of performance — tsfeature_classifier","text":"list containing named vector train-test set sizes, data.frame classification performance results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/tsfeature_classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit classifiers using time-series features using a resample-based approach and get a fast understanding of performance — tsfeature_classifier","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/tsfeature_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit classifiers using time-series features using a resample-based approach and get a fast understanding of performance — tsfeature_classifier","text":"","code":"# \\donttest{ featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\",   seed = 123) #> No IDs removed. All value vectors good for feature extraction. #> Running computations for catch22... #>  #> Calculations completed for catch22.    classifiers <- tsfeature_classifier(featMat,   by_set = FALSE) #> Only one set of 'catch22', 'feasts', 'tsfeatures', or 'Kats' with potential duplicates is in your feature data. Exiting and returning original input data. #> Fitting model 1/660 #> Fitting model 2/660 #> Fitting model 3/660 #> Fitting model 4/660 #> Fitting model 5/660 #> Fitting model 6/660 #> Fitting model 7/660 #> Fitting model 8/660 #> Fitting model 9/660 #> Fitting model 10/660 #> Fitting model 11/660 #> Fitting model 12/660 #> Fitting model 13/660 #> Fitting model 14/660 #> Fitting model 15/660 #> Fitting model 16/660 #> Fitting model 17/660 #> Fitting model 18/660 #> Fitting model 19/660 #> Fitting model 20/660 #> Fitting model 21/660 #> Fitting model 22/660 #> Fitting model 23/660 #> Fitting model 24/660 #> Fitting model 25/660 #> Fitting model 26/660 #> Fitting model 27/660 #> Fitting model 28/660 #> Fitting model 29/660 #> Fitting model 30/660 #> Fitting model 31/660 #> Fitting model 32/660 #> Fitting model 33/660 #> Fitting model 34/660 #> Fitting model 35/660 #> Fitting model 36/660 #> Fitting model 37/660 #> Fitting model 38/660 #> Fitting model 39/660 #> Fitting model 40/660 #> Fitting model 41/660 #> Fitting model 42/660 #> Fitting model 43/660 #> Fitting model 44/660 #> Fitting model 45/660 #> Fitting model 46/660 #> Fitting model 47/660 #> Fitting model 48/660 #> Fitting model 49/660 #> Fitting model 50/660 #> Fitting model 51/660 #> Fitting model 52/660 #> Fitting model 53/660 #> Fitting model 54/660 #> Fitting model 55/660 #> Fitting model 56/660 #> Fitting model 57/660 #> Fitting model 58/660 #> Fitting model 59/660 #> Fitting model 60/660 #> Fitting model 61/660 #> Fitting model 62/660 #> Fitting model 63/660 #> Fitting model 64/660 #> Fitting model 65/660 #> Fitting model 66/660 #> Fitting model 67/660 #> Fitting model 68/660 #> Fitting model 69/660 #> Fitting model 70/660 #> Fitting model 71/660 #> Fitting model 72/660 #> Fitting model 73/660 #> Fitting model 74/660 #> Fitting model 75/660 #> Fitting model 76/660 #> Fitting model 77/660 #> Fitting model 78/660 #> Fitting model 79/660 #> Fitting model 80/660 #> Fitting model 81/660 #> Fitting model 82/660 #> Fitting model 83/660 #> Fitting model 84/660 #> Fitting model 85/660 #> Fitting model 86/660 #> Fitting model 87/660 #> Fitting model 88/660 #> Fitting model 89/660 #> Fitting model 90/660 #> Fitting model 91/660 #> Fitting model 92/660 #> Fitting model 93/660 #> Fitting model 94/660 #> Fitting model 95/660 #> Fitting model 96/660 #> Fitting model 97/660 #> Fitting model 98/660 #> Fitting model 99/660 #> Fitting model 100/660 #> Fitting model 101/660 #> Fitting model 102/660 #> Fitting model 103/660 #> Fitting model 104/660 #> Fitting model 105/660 #> Fitting model 106/660 #> Fitting model 107/660 #> Fitting model 108/660 #> Fitting model 109/660 #> Fitting model 110/660 #> Fitting model 111/660 #> Fitting model 112/660 #> Fitting model 113/660 #> Fitting model 114/660 #> Fitting model 115/660 #> Fitting model 116/660 #> Fitting model 117/660 #> Fitting model 118/660 #> Fitting model 119/660 #> Fitting model 120/660 #> Fitting model 121/660 #> Fitting model 122/660 #> Fitting model 123/660 #> Fitting model 124/660 #> Fitting model 125/660 #> Fitting model 126/660 #> Fitting model 127/660 #> Fitting model 128/660 #> Fitting model 129/660 #> Fitting model 130/660 #> Fitting model 131/660 #> Fitting model 132/660 #> Fitting model 133/660 #> Fitting model 134/660 #> Fitting model 135/660 #> Fitting model 136/660 #> Fitting model 137/660 #> Fitting model 138/660 #> Fitting model 139/660 #> Fitting model 140/660 #> Fitting model 141/660 #> Fitting model 142/660 #> Fitting model 143/660 #> Fitting model 144/660 #> Fitting model 145/660 #> Fitting model 146/660 #> Fitting model 147/660 #> Fitting model 148/660 #> Fitting model 149/660 #> Fitting model 150/660 #> Fitting model 151/660 #> Fitting model 152/660 #> Fitting model 153/660 #> Fitting model 154/660 #> Fitting model 155/660 #> Fitting model 156/660 #> Fitting model 157/660 #> Fitting model 158/660 #> Fitting model 159/660 #> Fitting model 160/660 #> Fitting model 161/660 #> Fitting model 162/660 #> Fitting model 163/660 #> Fitting model 164/660 #> Fitting model 165/660 #> Fitting model 166/660 #> Fitting model 167/660 #> Fitting model 168/660 #> Fitting model 169/660 #> Fitting model 170/660 #> Fitting model 171/660 #> Fitting model 172/660 #> Fitting model 173/660 #> Fitting model 174/660 #> Fitting model 175/660 #> Fitting model 176/660 #> Fitting model 177/660 #> Fitting model 178/660 #> Fitting model 179/660 #> Fitting model 180/660 #> Fitting model 181/660 #> Fitting model 182/660 #> Fitting model 183/660 #> Fitting model 184/660 #> Fitting model 185/660 #> Fitting model 186/660 #> Fitting model 187/660 #> Fitting model 188/660 #> Fitting model 189/660 #> Fitting model 190/660 #> Fitting model 191/660 #> Fitting model 192/660 #> Fitting model 193/660 #> Fitting model 194/660 #> Fitting model 195/660 #> Fitting model 196/660 #> Fitting model 197/660 #> Fitting model 198/660 #> Fitting model 199/660 #> Fitting model 200/660 #> Fitting model 201/660 #> Fitting model 202/660 #> Fitting model 203/660 #> Fitting model 204/660 #> Fitting model 205/660 #> Fitting model 206/660 #> Fitting model 207/660 #> Fitting model 208/660 #> Fitting model 209/660 #> Fitting model 210/660 #> Fitting model 211/660 #> Fitting model 212/660 #> Fitting model 213/660 #> Fitting model 214/660 #> Fitting model 215/660 #> Fitting model 216/660 #> Fitting model 217/660 #> Fitting model 218/660 #> Fitting model 219/660 #> Fitting model 220/660 #> Fitting model 221/660 #> Fitting model 222/660 #> Fitting model 223/660 #> Fitting model 224/660 #> Fitting model 225/660 #> Fitting model 226/660 #> Fitting model 227/660 #> Fitting model 228/660 #> Fitting model 229/660 #> Fitting model 230/660 #> Fitting model 231/660 #> Fitting model 232/660 #> Fitting model 233/660 #> Fitting model 234/660 #> Fitting model 235/660 #> Fitting model 236/660 #> Fitting model 237/660 #> Fitting model 238/660 #> Fitting model 239/660 #> Fitting model 240/660 #> Fitting model 241/660 #> Fitting model 242/660 #> Fitting model 243/660 #> Fitting model 244/660 #> Fitting model 245/660 #> Fitting model 246/660 #> Fitting model 247/660 #> Fitting model 248/660 #> Fitting model 249/660 #> Fitting model 250/660 #> Fitting model 251/660 #> Fitting model 252/660 #> Fitting model 253/660 #> Fitting model 254/660 #> Fitting model 255/660 #> Fitting model 256/660 #> Fitting model 257/660 #> Fitting model 258/660 #> Fitting model 259/660 #> Fitting model 260/660 #> Fitting model 261/660 #> Fitting model 262/660 #> Fitting model 263/660 #> Fitting model 264/660 #> Fitting model 265/660 #> Fitting model 266/660 #> Fitting model 267/660 #> Fitting model 268/660 #> Fitting model 269/660 #> Fitting model 270/660 #> Fitting model 271/660 #> Fitting model 272/660 #> Fitting model 273/660 #> Fitting model 274/660 #> Fitting model 275/660 #> Fitting model 276/660 #> Fitting model 277/660 #> Fitting model 278/660 #> Fitting model 279/660 #> Fitting model 280/660 #> Fitting model 281/660 #> Fitting model 282/660 #> Fitting model 283/660 #> Fitting model 284/660 #> Fitting model 285/660 #> Fitting model 286/660 #> Fitting model 287/660 #> Fitting model 288/660 #> Fitting model 289/660 #> Fitting model 290/660 #> Fitting model 291/660 #> Fitting model 292/660 #> Fitting model 293/660 #> Fitting model 294/660 #> Fitting model 295/660 #> Fitting model 296/660 #> Fitting model 297/660 #> Fitting model 298/660 #> Fitting model 299/660 #> Fitting model 300/660 #> Fitting model 301/660 #> Fitting model 302/660 #> Fitting model 303/660 #> Fitting model 304/660 #> Fitting model 305/660 #> Fitting model 306/660 #> Fitting model 307/660 #> Fitting model 308/660 #> Fitting model 309/660 #> Fitting model 310/660 #> Fitting model 311/660 #> Fitting model 312/660 #> Fitting model 313/660 #> Fitting model 314/660 #> Fitting model 315/660 #> Fitting model 316/660 #> Fitting model 317/660 #> Fitting model 318/660 #> Fitting model 319/660 #> Fitting model 320/660 #> Fitting model 321/660 #> Fitting model 322/660 #> Fitting model 323/660 #> Fitting model 324/660 #> Fitting model 325/660 #> Fitting model 326/660 #> Fitting model 327/660 #> Fitting model 328/660 #> Fitting model 329/660 #> Fitting model 330/660 #> Fitting model 331/660 #> Fitting model 332/660 #> Fitting model 333/660 #> Fitting model 334/660 #> Fitting model 335/660 #> Fitting model 336/660 #> Fitting model 337/660 #> Fitting model 338/660 #> Fitting model 339/660 #> Fitting model 340/660 #> Fitting model 341/660 #> Fitting model 342/660 #> Fitting model 343/660 #> Fitting model 344/660 #> Fitting model 345/660 #> Fitting model 346/660 #> Fitting model 347/660 #> Fitting model 348/660 #> Fitting model 349/660 #> Fitting model 350/660 #> Fitting model 351/660 #> Fitting model 352/660 #> Fitting model 353/660 #> Fitting model 354/660 #> Fitting model 355/660 #> Fitting model 356/660 #> Fitting model 357/660 #> Fitting model 358/660 #> Fitting model 359/660 #> Fitting model 360/660 #> Fitting model 361/660 #> Fitting model 362/660 #> Fitting model 363/660 #> Fitting model 364/660 #> Fitting model 365/660 #> Fitting model 366/660 #> Fitting model 367/660 #> Fitting model 368/660 #> Fitting model 369/660 #> Fitting model 370/660 #> Fitting model 371/660 #> Fitting model 372/660 #> Fitting model 373/660 #> Fitting model 374/660 #> Fitting model 375/660 #> Fitting model 376/660 #> Fitting model 377/660 #> Fitting model 378/660 #> Fitting model 379/660 #> Fitting model 380/660 #> Fitting model 381/660 #> Fitting model 382/660 #> Fitting model 383/660 #> Fitting model 384/660 #> Fitting model 385/660 #> Fitting model 386/660 #> Fitting model 387/660 #> Fitting model 388/660 #> Fitting model 389/660 #> Fitting model 390/660 #> Fitting model 391/660 #> Fitting model 392/660 #> Fitting model 393/660 #> Fitting model 394/660 #> Fitting model 395/660 #> Fitting model 396/660 #> Fitting model 397/660 #> Fitting model 398/660 #> Fitting model 399/660 #> Fitting model 400/660 #> Fitting model 401/660 #> Fitting model 402/660 #> Fitting model 403/660 #> Fitting model 404/660 #> Fitting model 405/660 #> Fitting model 406/660 #> Fitting model 407/660 #> Fitting model 408/660 #> Fitting model 409/660 #> Fitting model 410/660 #> Fitting model 411/660 #> Fitting model 412/660 #> Fitting model 413/660 #> Fitting model 414/660 #> Fitting model 415/660 #> Fitting model 416/660 #> Fitting model 417/660 #> Fitting model 418/660 #> Fitting model 419/660 #> Fitting model 420/660 #> Fitting model 421/660 #> Fitting model 422/660 #> Fitting model 423/660 #> Fitting model 424/660 #> Fitting model 425/660 #> Fitting model 426/660 #> Fitting model 427/660 #> Fitting model 428/660 #> Fitting model 429/660 #> Fitting model 430/660 #> Fitting model 431/660 #> Fitting model 432/660 #> Fitting model 433/660 #> Fitting model 434/660 #> Fitting model 435/660 #> Fitting model 436/660 #> Fitting model 437/660 #> Fitting model 438/660 #> Fitting model 439/660 #> Fitting model 440/660 #> Fitting model 441/660 #> Fitting model 442/660 #> Fitting model 443/660 #> Fitting model 444/660 #> Fitting model 445/660 #> Fitting model 446/660 #> Fitting model 447/660 #> Fitting model 448/660 #> Fitting model 449/660 #> Fitting model 450/660 #> Fitting model 451/660 #> Fitting model 452/660 #> Fitting model 453/660 #> Fitting model 454/660 #> Fitting model 455/660 #> Fitting model 456/660 #> Fitting model 457/660 #> Fitting model 458/660 #> Fitting model 459/660 #> Fitting model 460/660 #> Fitting model 461/660 #> Fitting model 462/660 #> Fitting model 463/660 #> Fitting model 464/660 #> Fitting model 465/660 #> Fitting model 466/660 #> Fitting model 467/660 #> Fitting model 468/660 #> Fitting model 469/660 #> Fitting model 470/660 #> Fitting model 471/660 #> Fitting model 472/660 #> Fitting model 473/660 #> Fitting model 474/660 #> Fitting model 475/660 #> Fitting model 476/660 #> Fitting model 477/660 #> Fitting model 478/660 #> Fitting model 479/660 #> Fitting model 480/660 #> Fitting model 481/660 #> Fitting model 482/660 #> Fitting model 483/660 #> Fitting model 484/660 #> Fitting model 485/660 #> Fitting model 486/660 #> Fitting model 487/660 #> Fitting model 488/660 #> Fitting model 489/660 #> Fitting model 490/660 #> Fitting model 491/660 #> Fitting model 492/660 #> Fitting model 493/660 #> Fitting model 494/660 #> Fitting model 495/660 #> Fitting model 496/660 #> Fitting model 497/660 #> Fitting model 498/660 #> Fitting model 499/660 #> Fitting model 500/660 #> Fitting model 501/660 #> Fitting model 502/660 #> Fitting model 503/660 #> Fitting model 504/660 #> Fitting model 505/660 #> Fitting model 506/660 #> Fitting model 507/660 #> Fitting model 508/660 #> Fitting model 509/660 #> Fitting model 510/660 #> Fitting model 511/660 #> Fitting model 512/660 #> Fitting model 513/660 #> Fitting model 514/660 #> Fitting model 515/660 #> Fitting model 516/660 #> Fitting model 517/660 #> Fitting model 518/660 #> Fitting model 519/660 #> Fitting model 520/660 #> Fitting model 521/660 #> Fitting model 522/660 #> Fitting model 523/660 #> Fitting model 524/660 #> Fitting model 525/660 #> Fitting model 526/660 #> Fitting model 527/660 #> Fitting model 528/660 #> Fitting model 529/660 #> Fitting model 530/660 #> Fitting model 531/660 #> Fitting model 532/660 #> Fitting model 533/660 #> Fitting model 534/660 #> Fitting model 535/660 #> Fitting model 536/660 #> Fitting model 537/660 #> Fitting model 538/660 #> Fitting model 539/660 #> Fitting model 540/660 #> Fitting model 541/660 #> Fitting model 542/660 #> Fitting model 543/660 #> Fitting model 544/660 #> Fitting model 545/660 #> Fitting model 546/660 #> Fitting model 547/660 #> Fitting model 548/660 #> Fitting model 549/660 #> Fitting model 550/660 #> Fitting model 551/660 #> Fitting model 552/660 #> Fitting model 553/660 #> Fitting model 554/660 #> Fitting model 555/660 #> Fitting model 556/660 #> Fitting model 557/660 #> Fitting model 558/660 #> Fitting model 559/660 #> Fitting model 560/660 #> Fitting model 561/660 #> Fitting model 562/660 #> Fitting model 563/660 #> Fitting model 564/660 #> Fitting model 565/660 #> Fitting model 566/660 #> Fitting model 567/660 #> Fitting model 568/660 #> Fitting model 569/660 #> Fitting model 570/660 #> Fitting model 571/660 #> Fitting model 572/660 #> Fitting model 573/660 #> Fitting model 574/660 #> Fitting model 575/660 #> Fitting model 576/660 #> Fitting model 577/660 #> Fitting model 578/660 #> Fitting model 579/660 #> Fitting model 580/660 #> Fitting model 581/660 #> Fitting model 582/660 #> Fitting model 583/660 #> Fitting model 584/660 #> Fitting model 585/660 #> Fitting model 586/660 #> Fitting model 587/660 #> Fitting model 588/660 #> Fitting model 589/660 #> Fitting model 590/660 #> Fitting model 591/660 #> Fitting model 592/660 #> Fitting model 593/660 #> Fitting model 594/660 #> Fitting model 595/660 #> Fitting model 596/660 #> Fitting model 597/660 #> Fitting model 598/660 #> Fitting model 599/660 #> Fitting model 600/660 #> Fitting model 601/660 #> Fitting model 602/660 #> Fitting model 603/660 #> Fitting model 604/660 #> Fitting model 605/660 #> Fitting model 606/660 #> Fitting model 607/660 #> Fitting model 608/660 #> Fitting model 609/660 #> Fitting model 610/660 #> Fitting model 611/660 #> Fitting model 612/660 #> Fitting model 613/660 #> Fitting model 614/660 #> Fitting model 615/660 #> Fitting model 616/660 #> Fitting model 617/660 #> Fitting model 618/660 #> Fitting model 619/660 #> Fitting model 620/660 #> Fitting model 621/660 #> Fitting model 622/660 #> Fitting model 623/660 #> Fitting model 624/660 #> Fitting model 625/660 #> Fitting model 626/660 #> Fitting model 627/660 #> Fitting model 628/660 #> Fitting model 629/660 #> Fitting model 630/660 #> Fitting model 631/660 #> Fitting model 632/660 #> Fitting model 633/660 #> Fitting model 634/660 #> Fitting model 635/660 #> Fitting model 636/660 #> Fitting model 637/660 #> Fitting model 638/660 #> Fitting model 639/660 #> Fitting model 640/660 #> Fitting model 641/660 #> Fitting model 642/660 #> Fitting model 643/660 #> Fitting model 644/660 #> Fitting model 645/660 #> Fitting model 646/660 #> Fitting model 647/660 #> Fitting model 648/660 #> Fitting model 649/660 #> Fitting model 650/660 #> Fitting model 651/660 #> Fitting model 652/660 #> Fitting model 653/660 #> Fitting model 654/660 #> Fitting model 655/660 #> Fitting model 656/660 #> Fitting model 657/660 #> Fitting model 658/660 #> Fitting model 659/660 #> Fitting model 660/660 # }"},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescales a numeric vector into z-scores — zscore_scaler","title":"Rescales a numeric vector into z-scores — zscore_scaler","text":"\\(z_{} = \\frac{x_{} - \\mu}{\\sigma}\\)","code":""},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescales a numeric vector into z-scores — zscore_scaler","text":"","code":"zscore_scaler(x)"},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescales a numeric vector into z-scores — zscore_scaler","text":"x numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescales a numeric vector into z-scores — zscore_scaler","text":"numeric vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rescales a numeric vector into z-scores — zscore_scaler","text":"Trent Henderson","code":""}]
